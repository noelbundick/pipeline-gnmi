// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_nbr_compact.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_interface_neighbor_briefs_interface_neighbor_brief

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Compact Info for RSVP Neighbor
type RsvpMgmtNbrCompact_KEYS struct {
	NeighborAddress      string   `protobuf:"bytes,1,opt,name=neighbor_address,json=neighborAddress" json:"neighbor_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtNbrCompact_KEYS) Reset()         { *m = RsvpMgmtNbrCompact_KEYS{} }
func (m *RsvpMgmtNbrCompact_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtNbrCompact_KEYS) ProtoMessage()    {}
func (*RsvpMgmtNbrCompact_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_nbr_compact_6850bb5cca4ae419, []int{0}
}
func (m *RsvpMgmtNbrCompact_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtNbrCompact_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtNbrCompact_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.Merge(dst, src)
}
func (m *RsvpMgmtNbrCompact_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.Size(m)
}
func (m *RsvpMgmtNbrCompact_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtNbrCompact_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtNbrCompact_KEYS) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

type RsvpMgmtNbrCompact struct {
	// Neighbor node address
	NodeAddress string `protobuf:"bytes,50,opt,name=node_address,json=nodeAddress" json:"node_address,omitempty"`
	// Compact list of I/F Neighbors
	InterfaceNeighborListCompact []*RsvpMgmtIfNbrCompact `protobuf:"bytes,51,rep,name=interface_neighbor_list_compact,json=interfaceNeighborListCompact" json:"interface_neighbor_list_compact,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                `json:"-"`
	XXX_unrecognized             []byte                  `json:"-"`
	XXX_sizecache                int32                   `json:"-"`
}

func (m *RsvpMgmtNbrCompact) Reset()         { *m = RsvpMgmtNbrCompact{} }
func (m *RsvpMgmtNbrCompact) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtNbrCompact) ProtoMessage()    {}
func (*RsvpMgmtNbrCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_nbr_compact_6850bb5cca4ae419, []int{1}
}
func (m *RsvpMgmtNbrCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtNbrCompact.Unmarshal(m, b)
}
func (m *RsvpMgmtNbrCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtNbrCompact.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtNbrCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtNbrCompact.Merge(dst, src)
}
func (m *RsvpMgmtNbrCompact) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtNbrCompact.Size(m)
}
func (m *RsvpMgmtNbrCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtNbrCompact.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtNbrCompact proto.InternalMessageInfo

func (m *RsvpMgmtNbrCompact) GetNodeAddress() string {
	if m != nil {
		return m.NodeAddress
	}
	return ""
}

func (m *RsvpMgmtNbrCompact) GetInterfaceNeighborListCompact() []*RsvpMgmtIfNbrCompact {
	if m != nil {
		return m.InterfaceNeighborListCompact
	}
	return nil
}

// Compact Info for RSVP Interface Neighbor
type RsvpMgmtIfNbrCompact struct {
	// Interface Neighbor address
	InterfaceNeighborAddress string `protobuf:"bytes,1,opt,name=interface_neighbor_address,json=interfaceNeighborAddress" json:"interface_neighbor_address,omitempty"`
	// Neighbor's Interface handle
	NeighborInterfaceName string   `protobuf:"bytes,2,opt,name=neighbor_interface_name,json=neighborInterfaceName" json:"neighbor_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *RsvpMgmtIfNbrCompact) Reset()         { *m = RsvpMgmtIfNbrCompact{} }
func (m *RsvpMgmtIfNbrCompact) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtIfNbrCompact) ProtoMessage()    {}
func (*RsvpMgmtIfNbrCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_nbr_compact_6850bb5cca4ae419, []int{2}
}
func (m *RsvpMgmtIfNbrCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtIfNbrCompact.Unmarshal(m, b)
}
func (m *RsvpMgmtIfNbrCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtIfNbrCompact.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtIfNbrCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtIfNbrCompact.Merge(dst, src)
}
func (m *RsvpMgmtIfNbrCompact) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtIfNbrCompact.Size(m)
}
func (m *RsvpMgmtIfNbrCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtIfNbrCompact.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtIfNbrCompact proto.InternalMessageInfo

func (m *RsvpMgmtIfNbrCompact) GetInterfaceNeighborAddress() string {
	if m != nil {
		return m.InterfaceNeighborAddress
	}
	return ""
}

func (m *RsvpMgmtIfNbrCompact) GetNeighborInterfaceName() string {
	if m != nil {
		return m.NeighborInterfaceName
	}
	return ""
}

func init() {
	proto.RegisterType((*RsvpMgmtNbrCompact_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_neighbor_briefs.interface_neighbor_brief.rsvp_mgmt_nbr_compact_KEYS")
	proto.RegisterType((*RsvpMgmtNbrCompact)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_neighbor_briefs.interface_neighbor_brief.rsvp_mgmt_nbr_compact")
	proto.RegisterType((*RsvpMgmtIfNbrCompact)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_neighbor_briefs.interface_neighbor_brief.rsvp_mgmt_if_nbr_compact")
}

func init() {
	proto.RegisterFile("rsvp_mgmt_nbr_compact.proto", fileDescriptor_rsvp_mgmt_nbr_compact_6850bb5cca4ae419)
}

var fileDescriptor_rsvp_mgmt_nbr_compact_6850bb5cca4ae419 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x2a, 0x2e, 0x2b,
	0x88, 0xcf, 0x4d, 0xcf, 0x2d, 0x89, 0xcf, 0x4b, 0x2a, 0x8a, 0x4f, 0xce, 0xcf, 0x2d, 0x48, 0x4c,
	0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x0a, 0x4c, 0xce, 0x2c, 0x4e, 0xce, 0x8f, 0xcf,
	0xcc, 0x2f, 0x8e, 0xaf, 0x28, 0x8a, 0xcf, 0x2c, 0x88, 0x07, 0x2b, 0xce, 0x2f, 0x48, 0x2d, 0xd2,
	0x03, 0xb1, 0xf4, 0x32, 0xf3, 0x4a, 0x52, 0x8b, 0xd2, 0x12, 0x93, 0x53, 0xe3, 0xf3, 0x52, 0x33,
	0xd3, 0x33, 0x92, 0xf2, 0x8b, 0xe2, 0x93, 0x8a, 0x32, 0x53, 0xd3, 0x8a, 0x71, 0xca, 0x28, 0xb9,
	0x73, 0x49, 0x61, 0xb5, 0x31, 0xde, 0xdb, 0x35, 0x32, 0x58, 0x48, 0x93, 0x4b, 0x00, 0xae, 0x3e,
	0x31, 0x25, 0xa5, 0x28, 0xb5, 0xb8, 0x58, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x88, 0x1f, 0x26,
	0xee, 0x08, 0x11, 0x56, 0x7a, 0xcf, 0xc8, 0x25, 0x8a, 0xd5, 0x24, 0x21, 0x45, 0x2e, 0x9e, 0xbc,
	0xfc, 0x94, 0x54, 0xb8, 0x01, 0x46, 0x60, 0x03, 0xb8, 0x41, 0x62, 0x50, 0xcd, 0x42, 0x9b, 0x18,
	0xb9, 0xe4, 0xb1, 0x38, 0x31, 0x27, 0xb3, 0xb8, 0x04, 0x66, 0x8c, 0x84, 0xb1, 0x02, 0xb3, 0x06,
	0xb7, 0x51, 0xb6, 0x1e, 0xd5, 0xc3, 0x40, 0x0f, 0xe1, 0xec, 0xcc, 0x34, 0x64, 0x97, 0x07, 0xc9,
	0xc0, 0xb5, 0xf8, 0x41, 0x75, 0xf8, 0x64, 0x16, 0x97, 0x38, 0x43, 0x64, 0x95, 0x26, 0x30, 0x72,
	0x49, 0xe0, 0xd2, 0x2a, 0x64, 0xc3, 0x25, 0x85, 0xc5, 0x3e, 0xd4, 0x30, 0x94, 0xc0, 0x30, 0x1e,
	0x16, 0x1e, 0x66, 0x5c, 0xe2, 0x70, 0x3d, 0x48, 0xc6, 0x24, 0xe6, 0xa6, 0x4a, 0x30, 0x81, 0xb5,
	0x8a, 0xc2, 0xa4, 0x3d, 0xe1, 0x46, 0x24, 0xe6, 0xa6, 0x26, 0xb1, 0x81, 0xd3, 0x89, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x0d, 0xcf, 0xc2, 0x35, 0x46, 0x02, 0x00, 0x00,
}
