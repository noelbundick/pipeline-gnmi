// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_pxsb_detail.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_pxsb_details_pxsb_detail

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Detailed Form of RSVP Proxy Path
type RsvpMgmtPxsbDetail_KEYS struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	DestinationPort      uint32   `protobuf:"varint,2,opt,name=destination_port,json=destinationPort" json:"destination_port,omitempty"`
	Protocol             uint32   `protobuf:"varint,3,opt,name=protocol" json:"protocol,omitempty"`
	ExtendedTunnelId     string   `protobuf:"bytes,4,opt,name=extended_tunnel_id,json=extendedTunnelId" json:"extended_tunnel_id,omitempty"`
	SessionType          string   `protobuf:"bytes,5,opt,name=session_type,json=sessionType" json:"session_type,omitempty"`
	P2MpId               uint32   `protobuf:"varint,6,opt,name=p2_mp_id,json=p2MpId" json:"p2_mp_id,omitempty"`
	SourceAddress        string   `protobuf:"bytes,7,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	SourcePort           uint32   `protobuf:"varint,8,opt,name=source_port,json=sourcePort" json:"source_port,omitempty"`
	SubGroupOrigin       string   `protobuf:"bytes,9,opt,name=sub_group_origin,json=subGroupOrigin" json:"sub_group_origin,omitempty"`
	SubGroupId           uint32   `protobuf:"varint,10,opt,name=sub_group_id,json=subGroupId" json:"sub_group_id,omitempty"`
	VrfName              string   `protobuf:"bytes,11,opt,name=vrf_name,json=vrfName" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPxsbDetail_KEYS) Reset()         { *m = RsvpMgmtPxsbDetail_KEYS{} }
func (m *RsvpMgmtPxsbDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPxsbDetail_KEYS) ProtoMessage()    {}
func (*RsvpMgmtPxsbDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{0}
}
func (m *RsvpMgmtPxsbDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPxsbDetail_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtPxsbDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPxsbDetail_KEYS.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtPxsbDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPxsbDetail_KEYS.Merge(dst, src)
}
func (m *RsvpMgmtPxsbDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPxsbDetail_KEYS.Size(m)
}
func (m *RsvpMgmtPxsbDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPxsbDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPxsbDetail_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtPxsbDetail_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetSubGroupOrigin() string {
	if m != nil {
		return m.SubGroupOrigin
	}
	return ""
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

func (m *RsvpMgmtPxsbDetail_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type RsvpMgmtPxsbDetail struct {
	// RSVP Session Information
	Session *RsvpMgmtSessionInfo `protobuf:"bytes,50,opt,name=session" json:"session,omitempty"`
	// RSVP S2L Sub-LSP information
	S2LSubLsp *RsvpMgmtS2LSubLspIpv4 `protobuf:"bytes,51,opt,name=s2_l_sub_lsp,json=s2LSubLsp" json:"s2_l_sub_lsp,omitempty"`
	// RSVP Template
	Template *RsvpMgmtFilterInfo `protobuf:"bytes,52,opt,name=template" json:"template,omitempty"`
	// RSVP Traffic Spec Info
	TrafficSpec *RsvpMgmtTrafficSpec `protobuf:"bytes,53,opt,name=traffic_spec,json=trafficSpec" json:"traffic_spec,omitempty"`
	// RSVP Generic Traffic Spec Info
	GenericTrafficSpec *RsvpMgmtGenTrafficSpec `protobuf:"bytes,54,opt,name=generic_traffic_spec,json=genericTrafficSpec" json:"generic_traffic_spec,omitempty"`
	// Path Input Interface
	InputInterface string `protobuf:"bytes,55,opt,name=input_interface,json=inputInterface" json:"input_interface,omitempty"`
	// Path Hop Info
	Hop *RsvpMgmtHopInfo `protobuf:"bytes,56,opt,name=hop" json:"hop,omitempty"`
	// Dynamic State Handle
	DynamicState uint32 `protobuf:"varint,57,opt,name=dynamic_state,json=dynamicState" json:"dynamic_state,omitempty"`
	// RSVP Header
	RsvpHeader           *RsvpMgmtHeaderInfo `protobuf:"bytes,58,opt,name=rsvp_header,json=rsvpHeader" json:"rsvp_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RsvpMgmtPxsbDetail) Reset()         { *m = RsvpMgmtPxsbDetail{} }
func (m *RsvpMgmtPxsbDetail) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPxsbDetail) ProtoMessage()    {}
func (*RsvpMgmtPxsbDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{1}
}
func (m *RsvpMgmtPxsbDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPxsbDetail.Unmarshal(m, b)
}
func (m *RsvpMgmtPxsbDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPxsbDetail.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtPxsbDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPxsbDetail.Merge(dst, src)
}
func (m *RsvpMgmtPxsbDetail) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPxsbDetail.Size(m)
}
func (m *RsvpMgmtPxsbDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPxsbDetail.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPxsbDetail proto.InternalMessageInfo

func (m *RsvpMgmtPxsbDetail) GetSession() *RsvpMgmtSessionInfo {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *RsvpMgmtPxsbDetail) GetS2LSubLsp() *RsvpMgmtS2LSubLspIpv4 {
	if m != nil {
		return m.S2LSubLsp
	}
	return nil
}

func (m *RsvpMgmtPxsbDetail) GetTemplate() *RsvpMgmtFilterInfo {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *RsvpMgmtPxsbDetail) GetTrafficSpec() *RsvpMgmtTrafficSpec {
	if m != nil {
		return m.TrafficSpec
	}
	return nil
}

func (m *RsvpMgmtPxsbDetail) GetGenericTrafficSpec() *RsvpMgmtGenTrafficSpec {
	if m != nil {
		return m.GenericTrafficSpec
	}
	return nil
}

func (m *RsvpMgmtPxsbDetail) GetInputInterface() string {
	if m != nil {
		return m.InputInterface
	}
	return ""
}

func (m *RsvpMgmtPxsbDetail) GetHop() *RsvpMgmtHopInfo {
	if m != nil {
		return m.Hop
	}
	return nil
}

func (m *RsvpMgmtPxsbDetail) GetDynamicState() uint32 {
	if m != nil {
		return m.DynamicState
	}
	return 0
}

func (m *RsvpMgmtPxsbDetail) GetRsvpHeader() *RsvpMgmtHeaderInfo {
	if m != nil {
		return m.RsvpHeader
	}
	return nil
}

// RSVP S2L Sub-LSP
type RsvpMgmtS2LSubLspIpv4 struct {
	// S2L Sub-LSP Destination Address
	S2LDestinationAddress string   `protobuf:"bytes,1,opt,name=s2_l_destination_address,json=s2LDestinationAddress" json:"s2_l_destination_address,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *RsvpMgmtS2LSubLspIpv4) Reset()         { *m = RsvpMgmtS2LSubLspIpv4{} }
func (m *RsvpMgmtS2LSubLspIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtS2LSubLspIpv4) ProtoMessage()    {}
func (*RsvpMgmtS2LSubLspIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{2}
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtS2LSubLspIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Merge(dst, src)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Size(m)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtS2LSubLspIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtS2LSubLspIpv4) GetS2LDestinationAddress() string {
	if m != nil {
		return m.S2LDestinationAddress
	}
	return ""
}

// RSVP Filter
type RsvpMgmtFilterIpv4 struct {
	// Source Address
	SourceAddress string `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	// Source Port
	SourcePort           uint32   `protobuf:"varint,2,opt,name=source_port,json=sourcePort" json:"source_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtFilterIpv4) Reset()         { *m = RsvpMgmtFilterIpv4{} }
func (m *RsvpMgmtFilterIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterIpv4) ProtoMessage()    {}
func (*RsvpMgmtFilterIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{3}
}
func (m *RsvpMgmtFilterIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFilterIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterIpv4.Merge(dst, src)
}
func (m *RsvpMgmtFilterIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Size(m)
}
func (m *RsvpMgmtFilterIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtFilterIpv4) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtFilterIpv4) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

// RSVP P2MP IPv4 FilterSpec
type RsvpMgmtFilterP2MpIpv4 struct {
	// Source Address
	SourceAddress string `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	// Source Port
	SourcePort uint32 `protobuf:"varint,2,opt,name=source_port,json=sourcePort" json:"source_port,omitempty"`
	// Point to Multipoint SubGroup Origin
	P2MpSubGroupOrigin string `protobuf:"bytes,3,opt,name=p2_mp_sub_group_origin,json=p2MpSubGroupOrigin" json:"p2_mp_sub_group_origin,omitempty"`
	// Point to Multipoint Subgroup ID
	SubGroupId           uint32   `protobuf:"varint,4,opt,name=sub_group_id,json=subGroupId" json:"sub_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtFilterP2MpIpv4) Reset()         { *m = RsvpMgmtFilterP2MpIpv4{} }
func (m *RsvpMgmtFilterP2MpIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterP2MpIpv4) ProtoMessage()    {}
func (*RsvpMgmtFilterP2MpIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{4}
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFilterP2MpIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Merge(dst, src)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Size(m)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterP2MpIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtFilterP2MpIpv4) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtFilterP2MpIpv4) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *RsvpMgmtFilterP2MpIpv4) GetP2MpSubGroupOrigin() string {
	if m != nil {
		return m.P2MpSubGroupOrigin
	}
	return ""
}

func (m *RsvpMgmtFilterP2MpIpv4) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

// Union of the different RSVP filterspec types
type RsvpFilterUnion struct {
	FilterType string `protobuf:"bytes,1,opt,name=filter_type,json=filterType" json:"filter_type,omitempty"`
	// UDP IPV4 FilterSpec
	UdpIpv4Session *RsvpMgmtFilterIpv4 `protobuf:"bytes,2,opt,name=udp_ipv4_session,json=udpIpv4Session" json:"udp_ipv4_session,omitempty"`
	// IPv4 P2MP LSP FilterSpec
	P2MpIpv4Session      *RsvpMgmtFilterP2MpIpv4 `protobuf:"bytes,3,opt,name=p2_mp_ipv4_session,json=p2MpIpv4Session" json:"p2_mp_ipv4_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RsvpFilterUnion) Reset()         { *m = RsvpFilterUnion{} }
func (m *RsvpFilterUnion) String() string { return proto.CompactTextString(m) }
func (*RsvpFilterUnion) ProtoMessage()    {}
func (*RsvpFilterUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{5}
}
func (m *RsvpFilterUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpFilterUnion.Unmarshal(m, b)
}
func (m *RsvpFilterUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpFilterUnion.Marshal(b, m, deterministic)
}
func (dst *RsvpFilterUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpFilterUnion.Merge(dst, src)
}
func (m *RsvpFilterUnion) XXX_Size() int {
	return xxx_messageInfo_RsvpFilterUnion.Size(m)
}
func (m *RsvpFilterUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpFilterUnion.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpFilterUnion proto.InternalMessageInfo

func (m *RsvpFilterUnion) GetFilterType() string {
	if m != nil {
		return m.FilterType
	}
	return ""
}

func (m *RsvpFilterUnion) GetUdpIpv4Session() *RsvpMgmtFilterIpv4 {
	if m != nil {
		return m.UdpIpv4Session
	}
	return nil
}

func (m *RsvpFilterUnion) GetP2MpIpv4Session() *RsvpMgmtFilterP2MpIpv4 {
	if m != nil {
		return m.P2MpIpv4Session
	}
	return nil
}

// RSVP FilterSpec Info
type RsvpMgmtFilterInfo struct {
	// RSVP Filter
	RsvpFilter           *RsvpFilterUnion `protobuf:"bytes,1,opt,name=rsvp_filter,json=rsvpFilter" json:"rsvp_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RsvpMgmtFilterInfo) Reset()         { *m = RsvpMgmtFilterInfo{} }
func (m *RsvpMgmtFilterInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterInfo) ProtoMessage()    {}
func (*RsvpMgmtFilterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{6}
}
func (m *RsvpMgmtFilterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFilterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterInfo.Merge(dst, src)
}
func (m *RsvpMgmtFilterInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Size(m)
}
func (m *RsvpMgmtFilterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterInfo proto.InternalMessageInfo

func (m *RsvpMgmtFilterInfo) GetRsvpFilter() *RsvpFilterUnion {
	if m != nil {
		return m.RsvpFilter
	}
	return nil
}

// RSVP UDP IPv4 Session
type RsvpMgmtSessionUdpIpv4 struct {
	// Destination address
	DestinationAddress string `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// Protocol type (originally defined in RFC 790, further values in subsequent RFCs)
	Protocol uint32 `protobuf:"varint,2,opt,name=protocol" json:"protocol,omitempty"`
	// The Session Destination Port
	DestinationPort      uint32   `protobuf:"varint,3,opt,name=destination_port,json=destinationPort" json:"destination_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionUdpIpv4) Reset()         { *m = RsvpMgmtSessionUdpIpv4{} }
func (m *RsvpMgmtSessionUdpIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionUdpIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionUdpIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{7}
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionUdpIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Merge(dst, src)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Size(m)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionUdpIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionUdpIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionUdpIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionUdpIpv4) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *RsvpMgmtSessionUdpIpv4) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

// RSVP LSP-Tunnel-IPv4 Session
type RsvpMgmtSessionLspTunnelIpv4 struct {
	// Destination address
	DestinationAddress string `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// The Session Tunnel ID
	TunnelId uint32 `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	// The Session Extended Tunnel ID
	ExtendedTunnelId     string   `protobuf:"bytes,3,opt,name=extended_tunnel_id,json=extendedTunnelId" json:"extended_tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionLspTunnelIpv4) Reset()         { *m = RsvpMgmtSessionLspTunnelIpv4{} }
func (m *RsvpMgmtSessionLspTunnelIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionLspTunnelIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionLspTunnelIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{8}
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionLspTunnelIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Merge(dst, src)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Size(m)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionLspTunnelIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionLspTunnelIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionLspTunnelIpv4) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

// RSVP UNI IPv4 Session
type RsvpMgmtSessionUniIpv4 struct {
	// Destination address
	DestinationAddress string `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// The Session Tunnel ID
	TunnelId uint32 `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	// The Session Extended Address
	ExtendedAddress      string   `protobuf:"bytes,3,opt,name=extended_address,json=extendedAddress" json:"extended_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionUniIpv4) Reset()         { *m = RsvpMgmtSessionUniIpv4{} }
func (m *RsvpMgmtSessionUniIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionUniIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionUniIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{9}
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionUniIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionUniIpv4.Merge(dst, src)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Size(m)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionUniIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionUniIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionUniIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionUniIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionUniIpv4) GetExtendedAddress() string {
	if m != nil {
		return m.ExtendedAddress
	}
	return ""
}

// RSVP P2MP-LSP-Tunnel-IPv4 Session
type RsvpMgmtSessionP2MpLspTunnelIpv4 struct {
	// The Point to Multipoint ID
	P2MpId uint32 `protobuf:"varint,1,opt,name=p2_mp_id,json=p2MpId" json:"p2_mp_id,omitempty"`
	// The Session Tunnel ID
	TunnelId uint32 `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	// The Session Extended Tunnel ID
	ExtendedTunnelId     string   `protobuf:"bytes,3,opt,name=extended_tunnel_id,json=extendedTunnelId" json:"extended_tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) Reset()         { *m = RsvpMgmtSessionP2MpLspTunnelIpv4{} }
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionP2MpLspTunnelIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionP2MpLspTunnelIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{10}
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Merge(dst, src)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Size(m)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

// Union of the different RSVP session types
type RsvpSessionUnion struct {
	SessionType string `protobuf:"bytes,1,opt,name=session_type,json=sessionType" json:"session_type,omitempty"`
	// UDP IPv4 session
	Ipv4 *RsvpMgmtSessionUdpIpv4 `protobuf:"bytes,2,opt,name=ipv4" json:"ipv4,omitempty"`
	// IPv4 LSP session
	Ipv4LspSession *RsvpMgmtSessionLspTunnelIpv4 `protobuf:"bytes,3,opt,name=ipv4_lsp_session,json=ipv4LspSession" json:"ipv4_lsp_session,omitempty"`
	// IPv4 UNI session
	Ipv4UniSession *RsvpMgmtSessionUniIpv4 `protobuf:"bytes,4,opt,name=ipv4_uni_session,json=ipv4UniSession" json:"ipv4_uni_session,omitempty"`
	// IPv4 P2MP LSP session
	Ipv4P2MpLspSession   *RsvpMgmtSessionP2MpLspTunnelIpv4 `protobuf:"bytes,5,opt,name=ipv4_p2_mp_lsp_session,json=ipv4P2MpLspSession" json:"ipv4_p2_mp_lsp_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RsvpSessionUnion) Reset()         { *m = RsvpSessionUnion{} }
func (m *RsvpSessionUnion) String() string { return proto.CompactTextString(m) }
func (*RsvpSessionUnion) ProtoMessage()    {}
func (*RsvpSessionUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{11}
}
func (m *RsvpSessionUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpSessionUnion.Unmarshal(m, b)
}
func (m *RsvpSessionUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpSessionUnion.Marshal(b, m, deterministic)
}
func (dst *RsvpSessionUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpSessionUnion.Merge(dst, src)
}
func (m *RsvpSessionUnion) XXX_Size() int {
	return xxx_messageInfo_RsvpSessionUnion.Size(m)
}
func (m *RsvpSessionUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpSessionUnion.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpSessionUnion proto.InternalMessageInfo

func (m *RsvpSessionUnion) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *RsvpSessionUnion) GetIpv4() *RsvpMgmtSessionUdpIpv4 {
	if m != nil {
		return m.Ipv4
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4LspSession() *RsvpMgmtSessionLspTunnelIpv4 {
	if m != nil {
		return m.Ipv4LspSession
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4UniSession() *RsvpMgmtSessionUniIpv4 {
	if m != nil {
		return m.Ipv4UniSession
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4P2MpLspSession() *RsvpMgmtSessionP2MpLspTunnelIpv4 {
	if m != nil {
		return m.Ipv4P2MpLspSession
	}
	return nil
}

// RSVP Session Info
type RsvpMgmtSessionInfo struct {
	// RSVP Session
	RsvpSession          *RsvpSessionUnion `protobuf:"bytes,1,opt,name=rsvp_session,json=rsvpSession" json:"rsvp_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RsvpMgmtSessionInfo) Reset()         { *m = RsvpMgmtSessionInfo{} }
func (m *RsvpMgmtSessionInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionInfo) ProtoMessage()    {}
func (*RsvpMgmtSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{12}
}
func (m *RsvpMgmtSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionInfo.Merge(dst, src)
}
func (m *RsvpMgmtSessionInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Size(m)
}
func (m *RsvpMgmtSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionInfo proto.InternalMessageInfo

func (m *RsvpMgmtSessionInfo) GetRsvpSession() *RsvpSessionUnion {
	if m != nil {
		return m.RsvpSession
	}
	return nil
}

// Hop Info
type RsvpMgmtHopInfo struct {
	// IP address of the neighbor
	NeighborAddress string `protobuf:"bytes,1,opt,name=neighbor_address,json=neighborAddress" json:"neighbor_address,omitempty"`
	// Neighbor Logical Interface Name
	NeighborLogicalInterfaceName string   `protobuf:"bytes,2,opt,name=neighbor_logical_interface_name,json=neighborLogicalInterfaceName" json:"neighbor_logical_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *RsvpMgmtHopInfo) Reset()         { *m = RsvpMgmtHopInfo{} }
func (m *RsvpMgmtHopInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtHopInfo) ProtoMessage()    {}
func (*RsvpMgmtHopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{13}
}
func (m *RsvpMgmtHopInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtHopInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtHopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtHopInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtHopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtHopInfo.Merge(dst, src)
}
func (m *RsvpMgmtHopInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtHopInfo.Size(m)
}
func (m *RsvpMgmtHopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtHopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtHopInfo proto.InternalMessageInfo

func (m *RsvpMgmtHopInfo) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *RsvpMgmtHopInfo) GetNeighborLogicalInterfaceName() string {
	if m != nil {
		return m.NeighborLogicalInterfaceName
	}
	return ""
}

// RSVP Traffic Spec Info
type RsvpMgmtTrafficSpec struct {
	// Traffic Average Rate in bytes per second
	TrafficAverageRate uint64 `protobuf:"varint,1,opt,name=traffic_average_rate,json=trafficAverageRate" json:"traffic_average_rate,omitempty"`
	// Traffic Maximum Burst
	TrafficMaxBurst uint64 `protobuf:"varint,2,opt,name=traffic_max_burst,json=trafficMaxBurst" json:"traffic_max_burst,omitempty"`
	// Traffic Peak Rate in bytes per second
	TrafficPeakRate uint64 `protobuf:"varint,3,opt,name=traffic_peak_rate,json=trafficPeakRate" json:"traffic_peak_rate,omitempty"`
	// Traffic Minimum Unit
	TrafficMinUnit uint32 `protobuf:"varint,4,opt,name=traffic_min_unit,json=trafficMinUnit" json:"traffic_min_unit,omitempty"`
	// Traffic Maximum Unit
	TrafficMaxUnit       uint32   `protobuf:"varint,5,opt,name=traffic_max_unit,json=trafficMaxUnit" json:"traffic_max_unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTrafficSpec) Reset()         { *m = RsvpMgmtTrafficSpec{} }
func (m *RsvpMgmtTrafficSpec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTrafficSpec) ProtoMessage()    {}
func (*RsvpMgmtTrafficSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{14}
}
func (m *RsvpMgmtTrafficSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Unmarshal(m, b)
}
func (m *RsvpMgmtTrafficSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtTrafficSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTrafficSpec.Merge(dst, src)
}
func (m *RsvpMgmtTrafficSpec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Size(m)
}
func (m *RsvpMgmtTrafficSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTrafficSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTrafficSpec proto.InternalMessageInfo

func (m *RsvpMgmtTrafficSpec) GetTrafficAverageRate() uint64 {
	if m != nil {
		return m.TrafficAverageRate
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMaxBurst() uint64 {
	if m != nil {
		return m.TrafficMaxBurst
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficPeakRate() uint64 {
	if m != nil {
		return m.TrafficPeakRate
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMinUnit() uint32 {
	if m != nil {
		return m.TrafficMinUnit
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMaxUnit() uint32 {
	if m != nil {
		return m.TrafficMaxUnit
	}
	return 0
}

// RSVP G709 OTN Sender Tspec Info
type RsvpMgmtTspecG709Otn struct {
	// G709 OTN Traffic Signal Type (Refer G709 v3)
	TrafficSignalType uint32 `protobuf:"varint,1,opt,name=traffic_signal_type,json=trafficSignalType" json:"traffic_signal_type,omitempty"`
	// G709 OTN Traffic NVC
	TrafficNvc uint32 `protobuf:"varint,2,opt,name=traffic_nvc,json=trafficNvc" json:"traffic_nvc,omitempty"`
	// G709 OTN Traffic Multiplier
	TrafficMultiplier uint32 `protobuf:"varint,3,opt,name=traffic_multiplier,json=trafficMultiplier" json:"traffic_multiplier,omitempty"`
	// G709 OTN Traffic Bit Rate
	TrafficBitRate       uint64   `protobuf:"varint,4,opt,name=traffic_bit_rate,json=trafficBitRate" json:"traffic_bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTspecG709Otn) Reset()         { *m = RsvpMgmtTspecG709Otn{} }
func (m *RsvpMgmtTspecG709Otn) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTspecG709Otn) ProtoMessage()    {}
func (*RsvpMgmtTspecG709Otn) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{15}
}
func (m *RsvpMgmtTspecG709Otn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Unmarshal(m, b)
}
func (m *RsvpMgmtTspecG709Otn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtTspecG709Otn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTspecG709Otn.Merge(dst, src)
}
func (m *RsvpMgmtTspecG709Otn) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Size(m)
}
func (m *RsvpMgmtTspecG709Otn) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTspecG709Otn.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTspecG709Otn proto.InternalMessageInfo

func (m *RsvpMgmtTspecG709Otn) GetTrafficSignalType() uint32 {
	if m != nil {
		return m.TrafficSignalType
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficNvc() uint32 {
	if m != nil {
		return m.TrafficNvc
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficMultiplier() uint32 {
	if m != nil {
		return m.TrafficMultiplier
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficBitRate() uint64 {
	if m != nil {
		return m.TrafficBitRate
	}
	return 0
}

// Union of different RSVP Generic Sender Tspec types
type RsvpMgmtGenTrafficSpec struct {
	TspecType string `protobuf:"bytes,1,opt,name=tspec_type,json=tspecType" json:"tspec_type,omitempty"`
	// G709 OTN Sender Tspec
	G709OtnTspec *RsvpMgmtTspecG709Otn `protobuf:"bytes,2,opt,name=g709_otn_tspec,json=g709OtnTspec" json:"g709_otn_tspec,omitempty"`
	// Integrated Services Sender Tspec
	IntsrvTspec          *RsvpMgmtTrafficSpec `protobuf:"bytes,3,opt,name=intsrv_tspec,json=intsrvTspec" json:"intsrv_tspec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RsvpMgmtGenTrafficSpec) Reset()         { *m = RsvpMgmtGenTrafficSpec{} }
func (m *RsvpMgmtGenTrafficSpec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGenTrafficSpec) ProtoMessage()    {}
func (*RsvpMgmtGenTrafficSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{16}
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Unmarshal(m, b)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtGenTrafficSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGenTrafficSpec.Merge(dst, src)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Size(m)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGenTrafficSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGenTrafficSpec proto.InternalMessageInfo

func (m *RsvpMgmtGenTrafficSpec) GetTspecType() string {
	if m != nil {
		return m.TspecType
	}
	return ""
}

func (m *RsvpMgmtGenTrafficSpec) GetG709OtnTspec() *RsvpMgmtTspecG709Otn {
	if m != nil {
		return m.G709OtnTspec
	}
	return nil
}

func (m *RsvpMgmtGenTrafficSpec) GetIntsrvTspec() *RsvpMgmtTrafficSpec {
	if m != nil {
		return m.IntsrvTspec
	}
	return nil
}

// RSVP/IP Header Info
type RsvpMgmtHeaderInfo struct {
	// RSVP Version
	RsvpVersion uint32 `protobuf:"varint,1,opt,name=rsvp_version,json=rsvpVersion" json:"rsvp_version,omitempty"`
	// RSVP Header Flags (defined in RFC2205 Section 3.1.1)
	RsvpHeaderFlags uint32 `protobuf:"varint,2,opt,name=rsvp_header_flags,json=rsvpHeaderFlags" json:"rsvp_header_flags,omitempty"`
	// RSVP TTL
	RsvpTtl uint32 `protobuf:"varint,3,opt,name=rsvp_ttl,json=rsvpTtl" json:"rsvp_ttl,omitempty"`
	// RSVP Message Type
	RsvpMessageType uint32 `protobuf:"varint,4,opt,name=rsvp_message_type,json=rsvpMessageType" json:"rsvp_message_type,omitempty"`
	// IP Type of Service
	IpTos uint32 `protobuf:"varint,5,opt,name=ip_tos,json=ipTos" json:"ip_tos,omitempty"`
	// IP TTL
	IpTtl uint32 `protobuf:"varint,6,opt,name=ip_ttl,json=ipTtl" json:"ip_ttl,omitempty"`
	// IP Source Address
	IpSourceAddress      string   `protobuf:"bytes,7,opt,name=ip_source_address,json=ipSourceAddress" json:"ip_source_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtHeaderInfo) Reset()         { *m = RsvpMgmtHeaderInfo{} }
func (m *RsvpMgmtHeaderInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtHeaderInfo) ProtoMessage()    {}
func (*RsvpMgmtHeaderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389, []int{17}
}
func (m *RsvpMgmtHeaderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtHeaderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtHeaderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtHeaderInfo.Merge(dst, src)
}
func (m *RsvpMgmtHeaderInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Size(m)
}
func (m *RsvpMgmtHeaderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtHeaderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtHeaderInfo proto.InternalMessageInfo

func (m *RsvpMgmtHeaderInfo) GetRsvpVersion() uint32 {
	if m != nil {
		return m.RsvpVersion
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpHeaderFlags() uint32 {
	if m != nil {
		return m.RsvpHeaderFlags
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpTtl() uint32 {
	if m != nil {
		return m.RsvpTtl
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpMessageType() uint32 {
	if m != nil {
		return m.RsvpMessageType
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpTos() uint32 {
	if m != nil {
		return m.IpTos
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpTtl() uint32 {
	if m != nil {
		return m.IpTtl
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpSourceAddress() string {
	if m != nil {
		return m.IpSourceAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*RsvpMgmtPxsbDetail_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_pxsb_detail_KEYS")
	proto.RegisterType((*RsvpMgmtPxsbDetail)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_pxsb_detail")
	proto.RegisterType((*RsvpMgmtS2LSubLspIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_s2l_sub_lsp_ipv4")
	proto.RegisterType((*RsvpMgmtFilterIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_filter_ipv4")
	proto.RegisterType((*RsvpMgmtFilterP2MpIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_filter_p2mp_ipv4")
	proto.RegisterType((*RsvpFilterUnion)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_filter_union")
	proto.RegisterType((*RsvpMgmtFilterInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_filter_info")
	proto.RegisterType((*RsvpMgmtSessionUdpIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_session_udp_ipv4")
	proto.RegisterType((*RsvpMgmtSessionLspTunnelIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_session_lsp_tunnel_ipv4")
	proto.RegisterType((*RsvpMgmtSessionUniIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_session_uni_ipv4")
	proto.RegisterType((*RsvpMgmtSessionP2MpLspTunnelIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_session_p2mp_lsp_tunnel_ipv4")
	proto.RegisterType((*RsvpSessionUnion)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_session_union")
	proto.RegisterType((*RsvpMgmtSessionInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_session_info")
	proto.RegisterType((*RsvpMgmtHopInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_hop_info")
	proto.RegisterType((*RsvpMgmtTrafficSpec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_traffic_spec")
	proto.RegisterType((*RsvpMgmtTspecG709Otn)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_tspec_g709_otn")
	proto.RegisterType((*RsvpMgmtGenTrafficSpec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_gen_traffic_spec")
	proto.RegisterType((*RsvpMgmtHeaderInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.pxsb_details.pxsb_detail.rsvp_mgmt_header_info")
}

func init() {
	proto.RegisterFile("rsvp_mgmt_pxsb_detail.proto", fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389)
}

var fileDescriptor_rsvp_mgmt_pxsb_detail_59da2e62a128c389 = []byte{
	// 1387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcb, 0x8f, 0x1b, 0x45,
	0x13, 0xd7, 0xac, 0xbd, 0xaf, 0xb2, 0xf7, 0x91, 0xce, 0x43, 0xf3, 0x25, 0xdf, 0xa7, 0xdd, 0xcc,
	0x27, 0x60, 0x83, 0x60, 0x89, 0x9c, 0xc0, 0x12, 0x6e, 0x89, 0x48, 0x60, 0xc9, 0x6e, 0x12, 0xc6,
	0x1b, 0x24, 0x90, 0x50, 0x6b, 0xec, 0x69, 0x7b, 0x9b, 0x8c, 0x7b, 0x5a, 0xd3, 0x6d, 0xe3, 0x1c,
	0x90, 0x38, 0x84, 0xc7, 0x85, 0x13, 0x70, 0xe6, 0xca, 0x09, 0x89, 0x2b, 0xe2, 0xc8, 0xdf, 0xc4,
	0x11, 0xa1, 0x7e, 0x8d, 0xdb, 0x0f, 0x10, 0x24, 0x93, 0x8b, 0xe5, 0xa9, 0xae, 0xa9, 0xfa, 0x55,
	0x75, 0xf5, 0x6f, 0x7e, 0x33, 0x70, 0xa9, 0x10, 0x23, 0x8e, 0x07, 0xfd, 0x81, 0xc4, 0x7c, 0x2c,
	0x3a, 0x38, 0x25, 0x32, 0xa1, 0xd9, 0x3e, 0x2f, 0x72, 0x99, 0xa3, 0x83, 0x2e, 0x15, 0xdd, 0x1c,
	0xd3, 0x5c, 0xe0, 0x71, 0x81, 0x29, 0xc7, 0xda, 0x39, 0xe7, 0xa4, 0xd8, 0x57, 0xff, 0xf6, 0xbd,
	0x3b, 0x84, 0x7f, 0x11, 0xfd, 0x54, 0x83, 0x8b, 0x0b, 0x03, 0xe3, 0xbb, 0xb7, 0x3f, 0x6c, 0xa3,
	0xd7, 0xe0, 0x6c, 0x4a, 0x84, 0xa4, 0x2c, 0x91, 0x34, 0x67, 0x38, 0x49, 0xd3, 0x82, 0x08, 0x11,
	0x06, 0xbb, 0xc1, 0xde, 0x7a, 0x8c, 0xbc, 0xa5, 0x9b, 0x66, 0x05, 0x5d, 0x81, 0x6d, 0xff, 0x06,
	0x9e, 0x17, 0x32, 0x5c, 0xda, 0x0d, 0xf6, 0x36, 0xe2, 0x2d, 0xcf, 0xfe, 0x20, 0x2f, 0x24, 0xba,
	0x08, 0x6b, 0x1a, 0x7c, 0x37, 0xcf, 0xc2, 0x9a, 0x76, 0x29, 0xaf, 0xd1, 0x2b, 0x80, 0xc8, 0x58,
	0x12, 0x96, 0x92, 0x14, 0xcb, 0x21, 0x63, 0x24, 0xc3, 0x34, 0x0d, 0xeb, 0x3a, 0xed, 0xb6, 0x5b,
	0x39, 0xd1, 0x0b, 0x87, 0x29, 0xba, 0x0c, 0x4d, 0x41, 0x84, 0x50, 0x09, 0xe5, 0x63, 0x4e, 0xc2,
	0x65, 0xed, 0xd7, 0xb0, 0xb6, 0x93, 0xc7, 0x9c, 0xa0, 0x10, 0xd6, 0x78, 0x0b, 0x0f, 0xb8, 0x0a,
	0xb3, 0xa2, 0x93, 0xad, 0xf0, 0xd6, 0x31, 0x3f, 0x4c, 0xd1, 0x0b, 0xb0, 0x29, 0xf2, 0x61, 0xd1,
	0x25, 0x65, 0x75, 0xab, 0xfa, 0xf6, 0x0d, 0x63, 0x75, 0x85, 0xed, 0x40, 0xc3, 0xba, 0xe9, 0x9a,
	0xd6, 0x74, 0x0c, 0x30, 0x26, 0x5d, 0xce, 0x1e, 0x6c, 0x8b, 0x61, 0x07, 0xf7, 0x8b, 0x7c, 0xc8,
	0x71, 0x5e, 0xd0, 0x3e, 0x65, 0xe1, 0xba, 0x8e, 0xb4, 0x29, 0x86, 0x9d, 0x77, 0x94, 0xf9, 0xbe,
	0xb6, 0xa2, 0x5d, 0x68, 0x4e, 0x3c, 0x69, 0x1a, 0x82, 0x8d, 0x65, 0xbd, 0x0e, 0x53, 0xf4, 0x1f,
	0x58, 0x1b, 0x15, 0x3d, 0xcc, 0x92, 0x01, 0x09, 0x1b, 0x3a, 0xc6, 0xea, 0xa8, 0xe8, 0xdd, 0x4b,
	0x06, 0x24, 0xfa, 0x63, 0x05, 0xce, 0x2f, 0xdc, 0x30, 0x44, 0x61, 0xd5, 0x56, 0x1c, 0xb6, 0x76,
	0x83, 0xbd, 0x46, 0xeb, 0xfe, 0xfe, 0x53, 0x4e, 0xc5, 0xfe, 0x24, 0x81, 0xeb, 0x2b, 0x65, 0xbd,
	0x3c, 0x76, 0xf1, 0x91, 0x84, 0xa6, 0x68, 0xe1, 0x0c, 0xab, 0x32, 0x32, 0xc1, 0xc3, 0x6b, 0x3a,
	0x5f, 0xbb, 0x8a, 0x7c, 0xad, 0x32, 0x2a, 0xa6, 0x7c, 0x74, 0x3d, 0x5e, 0x17, 0xad, 0xa3, 0xf6,
	0xb0, 0x73, 0x24, 0x38, 0xfa, 0x04, 0xd6, 0x24, 0x19, 0xf0, 0x2c, 0x91, 0x24, 0xbc, 0xae, 0x33,
	0xde, 0xab, 0x20, 0x63, 0x8f, 0x66, 0x92, 0x14, 0xa6, 0xc0, 0x32, 0x3e, 0x2a, 0xa0, 0x29, 0x8b,
	0xa4, 0xd7, 0xa3, 0x5d, 0x2c, 0x38, 0xe9, 0x86, 0xaf, 0x57, 0xd6, 0x51, 0x3f, 0x6c, 0xdc, 0xb0,
	0x57, 0x6d, 0x4e, 0xba, 0xe8, 0x8b, 0x00, 0xce, 0xf5, 0x09, 0x23, 0x05, 0xed, 0x4e, 0x79, 0x85,
	0x6f, 0x54, 0xd6, 0xde, 0x3e, 0x61, 0xd3, 0x00, 0x90, 0x4d, 0x78, 0xe2, 0xe1, 0x78, 0x09, 0xb6,
	0x28, 0xe3, 0x43, 0x89, 0x29, 0x93, 0xa4, 0xe8, 0x25, 0x5d, 0x12, 0x1e, 0x98, 0x41, 0xd6, 0xe6,
	0x43, 0x67, 0x45, 0x1f, 0x43, 0xed, 0x34, 0xe7, 0xe1, 0x9b, 0x1a, 0xde, 0xdd, 0x0a, 0xe0, 0x9d,
	0xe6, 0xdc, 0x6c, 0x84, 0x8a, 0x8b, 0xfe, 0x0f, 0x1b, 0xe9, 0x63, 0x96, 0x0c, 0x14, 0x56, 0xa9,
	0x36, 0xfd, 0x86, 0x3e, 0x28, 0x4d, 0x6b, 0x6c, 0x2b, 0x1b, 0xca, 0xa1, 0xa1, 0xef, 0x3f, 0x25,
	0x49, 0x4a, 0x8a, 0xf0, 0xad, 0xca, 0xe6, 0xc2, 0x04, 0x34, 0x70, 0x40, 0x99, 0xdf, 0xd5, 0x86,
	0xe8, 0xa1, 0x4f, 0x98, 0xb3, 0xe3, 0x8a, 0x0e, 0x20, 0xd4, 0x27, 0xe3, 0xaf, 0x59, 0xf3, 0xbc,
	0x68, 0x1d, 0xbd, 0x3d, 0x47, 0x9c, 0x11, 0xf6, 0x8f, 0xb5, 0x9b, 0x49, 0x15, 0x71, 0x9e, 0x9f,
	0x82, 0x7f, 0xc0, 0x4f, 0x4b, 0xb3, 0xfc, 0x14, 0xfd, 0x12, 0xf8, 0xc0, 0x6d, 0x06, 0xde, 0x1a,
	0xf0, 0x4a, 0xd3, 0xa0, 0x16, 0x5c, 0x30, 0x44, 0x3b, 0x47, 0x86, 0x35, 0xf3, 0xd0, 0x50, 0xb4,
	0xdb, 0xfe, 0x7b, 0x42, 0xac, 0xcf, 0x12, 0x62, 0xf4, 0xf3, 0x12, 0x9c, 0xd1, 0xe0, 0x2d, 0xee,
	0x21, 0x53, 0x34, 0xb4, 0x03, 0x0d, 0x7b, 0xad, 0x69, 0xdf, 0x00, 0x06, 0x63, 0xd2, 0xac, 0x3f,
	0x86, 0xed, 0x61, 0x6a, 0x0a, 0x74, 0x4c, 0xa6, 0x21, 0x57, 0xcb, 0x1c, 0x8a, 0xa6, 0x36, 0x87,
	0x29, 0x3f, 0xe4, 0xa3, 0xeb, 0x6d, 0xcb, 0x90, 0x9f, 0x07, 0x80, 0xec, 0x03, 0xc7, 0x4f, 0x5e,
	0xab, 0xec, 0x24, 0xcf, 0x6e, 0x60, 0xbc, 0xa5, 0x9f, 0x67, 0x13, 0x08, 0xd1, 0x93, 0x60, 0xd1,
	0x48, 0xb1, 0x5e, 0x8e, 0x1e, 0xd9, 0x33, 0x63, 0x6c, 0xba, 0x6f, 0x8d, 0xd6, 0x7b, 0xcf, 0x06,
	0xca, 0xdf, 0x18, 0x73, 0x5e, 0xee, 0x68, 0x4b, 0xf4, 0xdd, 0xd4, 0xdc, 0xb9, 0xe7, 0x89, 0xdb,
	0x96, 0x7f, 0xaf, 0x30, 0x7c, 0xd9, 0xb0, 0x34, 0x23, 0x1b, 0x16, 0xa9, 0x8f, 0xda, 0x42, 0xf5,
	0x11, 0xfd, 0x10, 0xc0, 0xe5, 0x79, 0x58, 0xea, 0x1c, 0x3b, 0xbd, 0xf1, 0x54, 0xe8, 0x2e, 0xc1,
	0xfa, 0x44, 0xaf, 0x58, 0x78, 0xd2, 0xe9, 0x94, 0xc5, 0xaa, 0xa6, 0xb6, 0x58, 0xd5, 0x44, 0xdf,
	0x2f, 0x6e, 0x1c, 0xa3, 0xcf, 0x03, 0xda, 0x15, 0x28, 0x01, 0x94, 0xa1, 0x0c, 0xb0, 0x2d, 0x67,
	0x77, 0x4c, 0xf5, 0x4d, 0x00, 0x2f, 0xce, 0xe3, 0xd2, 0x83, 0x38, 0xdb, 0x3e, 0x5f, 0x75, 0x05,
	0x53, 0xaa, 0xab, 0xc2, 0x3e, 0xfd, 0x5a, 0x07, 0xa4, 0xf1, 0x78, 0x2d, 0xca, 0xd9, 0x9c, 0x28,
	0x0c, 0xe6, 0x45, 0x61, 0x1f, 0xea, 0x0a, 0xa6, 0xa5, 0x84, 0x76, 0x85, 0x72, 0xc9, 0x8d, 0x77,
	0xac, 0x13, 0xa0, 0x27, 0x01, 0x6c, 0x6b, 0x1e, 0x50, 0x0d, 0x9a, 0xe6, 0x82, 0x8f, 0x2a, 0xcc,
	0x3a, 0xd3, 0xfe, 0x78, 0x53, 0xfd, 0x1e, 0x09, 0xee, 0x48, 0xe9, 0x33, 0x8b, 0x42, 0xcd, 0x90,
	0x43, 0x51, 0xaf, 0xbe, 0x76, 0x3b, 0xa1, 0x26, 0xfd, 0x43, 0x46, 0x5d, 0xfa, 0x6f, 0x03, 0xb8,
	0xa0, 0xf3, 0x9b, 0x99, 0xf0, 0x7b, 0xb1, 0xac, 0x51, 0xe0, 0x0a, 0x51, 0x2c, 0x9a, 0xc7, 0x18,
	0xa9, 0xdf, 0x07, 0xad, 0x63, 0x3e, 0x69, 0x4a, 0xf4, 0x75, 0x00, 0x17, 0x16, 0xeb, 0x5d, 0xc4,
	0xa0, 0xe9, 0x0f, 0x96, 0x25, 0xca, 0x67, 0x14, 0x3a, 0x53, 0x53, 0x1a, 0x6b, 0x22, 0x76, 0x50,
	0xbe, 0x0c, 0xec, 0x24, 0x4f, 0x89, 0x21, 0x75, 0x36, 0x19, 0xa1, 0xfd, 0xd3, 0x4e, 0x5e, 0xcc,
	0x1c, 0xf3, 0x2d, 0x67, 0x77, 0x67, 0xfc, 0x36, 0xec, 0x94, 0xae, 0x59, 0xde, 0xa7, 0xdd, 0x24,
	0x9b, 0xa8, 0x38, 0xf3, 0x3e, 0xb1, 0xa4, 0xef, 0xfc, 0xaf, 0x73, 0x3b, 0x32, 0x5e, 0xa5, 0xa8,
	0xd3, 0x2f, 0x19, 0xbf, 0x4f, 0xf5, 0xc4, 0x17, 0x8c, 0xe8, 0x2a, 0x9c, 0x73, 0xd7, 0xc9, 0x88,
	0x14, 0x49, 0x9f, 0xe0, 0x42, 0x69, 0x33, 0x05, 0xa8, 0x1e, 0x23, 0xbb, 0x76, 0xd3, 0x2c, 0xc5,
	0x4a, 0xa1, 0xbd, 0x0c, 0x67, 0xdc, 0x1d, 0x83, 0x64, 0x8c, 0x3b, 0xc3, 0x42, 0x18, 0xe1, 0x50,
	0x8f, 0xb7, 0xec, 0xc2, 0x71, 0x32, 0xbe, 0xa5, 0xcc, 0xbe, 0x2f, 0x27, 0xc9, 0x23, 0x13, 0xba,
	0x36, 0xe5, 0xfb, 0x80, 0x24, 0x8f, 0x74, 0xdc, 0x3d, 0xd8, 0x2e, 0xe3, 0x52, 0xdd, 0x4f, 0x69,
	0x95, 0xc3, 0xa6, 0x0b, 0x4b, 0xd9, 0x43, 0x46, 0xe5, 0x94, 0x67, 0x32, 0x36, 0x9e, 0xcb, 0xd3,
	0x9e, 0xc9, 0x58, 0x79, 0x46, 0xbf, 0x05, 0x10, 0x7a, 0x85, 0xab, 0x8a, 0x71, 0xff, 0xe0, 0xea,
	0x0d, 0x9c, 0x4b, 0x86, 0xf6, 0xe1, 0x6c, 0xd9, 0x0a, 0xda, 0x67, 0x49, 0x36, 0x21, 0x96, 0x8d,
	0xd8, 0xe1, 0x6e, 0xeb, 0x15, 0x4d, 0x2f, 0x3b, 0xe0, 0xe4, 0x3d, 0x66, 0xa3, 0xae, 0xd3, 0x4a,
	0xd6, 0x74, 0x6f, 0xd4, 0x45, 0xaf, 0x02, 0x2a, 0x71, 0x0d, 0x33, 0x49, 0x79, 0x46, 0x49, 0x61,
	0x1f, 0x58, 0x2e, 0xde, 0x71, 0xb9, 0xe0, 0x97, 0xd1, 0xa1, 0xd2, 0xf4, 0xa6, 0xae, 0x7b, 0xe3,
	0xca, 0xb8, 0x45, 0xa5, 0x6a, 0x4d, 0xf4, 0xe3, 0x92, 0xff, 0xe8, 0x98, 0x15, 0xfd, 0xe8, 0x7f,
	0x00, 0xa6, 0x34, 0x8f, 0x18, 0xd7, 0xb5, 0x45, 0xe3, 0xfe, 0x14, 0x36, 0x5d, 0xcd, 0xa6, 0x05,
	0x96, 0x20, 0xdf, 0xaf, 0xe2, 0xed, 0x67, 0xaa, 0xa5, 0x71, 0x53, 0xfd, 0xbb, 0x2f, 0xd9, 0x89,
	0xc6, 0x55, 0x40, 0x93, 0x32, 0x29, 0x8a, 0x91, 0x4d, 0x5b, 0x7b, 0x4e, 0x2f, 0x5d, 0x26, 0x89,
	0xce, 0x19, 0x7d, 0xb5, 0xe4, 0xab, 0x24, 0x4f, 0xf4, 0xab, 0x07, 0x88, 0x5e, 0x18, 0x91, 0xa2,
	0x3c, 0xfd, 0x1b, 0xe6, 0xc0, 0x7e, 0x60, 0x4c, 0x6a, 0x5c, 0xbd, 0x97, 0x0f, 0xdc, 0xcb, 0x92,
	0xbe, 0x70, 0x9f, 0x3b, 0x26, 0xaf, 0x0c, 0x77, 0x94, 0x59, 0xbd, 0xd3, 0x6b, 0x5f, 0x29, 0xdd,
	0xe7, 0x8e, 0x55, 0x75, 0x7d, 0x22, 0xb3, 0x32, 0xcc, 0x80, 0x08, 0xa1, 0x0e, 0x94, 0xde, 0x96,
	0xfa, 0x24, 0xcc, 0xb1, 0xb1, 0xeb, 0xcd, 0x39, 0x0f, 0x2b, 0x94, 0x63, 0x99, 0x0b, 0x3b, 0xc1,
	0xcb, 0x94, 0x9f, 0xe4, 0xc2, 0x99, 0x65, 0x66, 0xbf, 0x6e, 0x28, 0xb3, 0x89, 0x4c, 0x39, 0x5e,
	0xf8, 0x7d, 0x63, 0x8b, 0xf2, 0xb6, 0x2f, 0xed, 0x3b, 0x2b, 0x5a, 0x46, 0x5d, 0xfb, 0x33, 0x00,
	0x00, 0xff, 0xff, 0xae, 0x25, 0xbd, 0xf9, 0x69, 0x12, 0x00, 0x00,
}
