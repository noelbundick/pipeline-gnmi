// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_frr_states_compact.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_standby_frr_summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Count of RSVP FRR States
type RsvpMgmtFrrStatesCompact_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtFrrStatesCompact_KEYS) Reset()         { *m = RsvpMgmtFrrStatesCompact_KEYS{} }
func (m *RsvpMgmtFrrStatesCompact_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFrrStatesCompact_KEYS) ProtoMessage()    {}
func (*RsvpMgmtFrrStatesCompact_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_frr_states_compact_8989952a8590ffee, []int{0}
}
func (m *RsvpMgmtFrrStatesCompact_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFrrStatesCompact_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtFrrStatesCompact_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFrrStatesCompact_KEYS.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFrrStatesCompact_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFrrStatesCompact_KEYS.Merge(dst, src)
}
func (m *RsvpMgmtFrrStatesCompact_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFrrStatesCompact_KEYS.Size(m)
}
func (m *RsvpMgmtFrrStatesCompact_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFrrStatesCompact_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFrrStatesCompact_KEYS proto.InternalMessageInfo

type RsvpMgmtFrrStatesCompact struct {
	// Path state counters
	PathStates *RsvpMgmtFrrStateStatusCounters `protobuf:"bytes,50,opt,name=path_states,json=pathStates" json:"path_states,omitempty"`
	// Rerservation state counters
	ReservationStates    *RsvpMgmtFrrStateStatusCounters `protobuf:"bytes,51,opt,name=reservation_states,json=reservationStates" json:"reservation_states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RsvpMgmtFrrStatesCompact) Reset()         { *m = RsvpMgmtFrrStatesCompact{} }
func (m *RsvpMgmtFrrStatesCompact) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFrrStatesCompact) ProtoMessage()    {}
func (*RsvpMgmtFrrStatesCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_frr_states_compact_8989952a8590ffee, []int{1}
}
func (m *RsvpMgmtFrrStatesCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFrrStatesCompact.Unmarshal(m, b)
}
func (m *RsvpMgmtFrrStatesCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFrrStatesCompact.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFrrStatesCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFrrStatesCompact.Merge(dst, src)
}
func (m *RsvpMgmtFrrStatesCompact) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFrrStatesCompact.Size(m)
}
func (m *RsvpMgmtFrrStatesCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFrrStatesCompact.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFrrStatesCompact proto.InternalMessageInfo

func (m *RsvpMgmtFrrStatesCompact) GetPathStates() *RsvpMgmtFrrStateStatusCounters {
	if m != nil {
		return m.PathStates
	}
	return nil
}

func (m *RsvpMgmtFrrStatesCompact) GetReservationStates() *RsvpMgmtFrrStateStatusCounters {
	if m != nil {
		return m.ReservationStates
	}
	return nil
}

// FRR state counters
type RsvpMgmtFrrStateStatusCounters struct {
	// Total number of instances of this state
	Total uint32 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	// Number of active instances of this state
	ActiveInstances uint32 `protobuf:"varint,2,opt,name=active_instances,json=activeInstances" json:"active_instances,omitempty"`
	// Number of ready instances of this state
	ReadyInstances uint32 `protobuf:"varint,3,opt,name=ready_instances,json=readyInstances" json:"ready_instances,omitempty"`
	// Number of instances of this state awaiting Path messages to be sent out or Resv messages to be received
	ActiveWaitInstances  uint32   `protobuf:"varint,4,opt,name=active_wait_instances,json=activeWaitInstances" json:"active_wait_instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtFrrStateStatusCounters) Reset()         { *m = RsvpMgmtFrrStateStatusCounters{} }
func (m *RsvpMgmtFrrStateStatusCounters) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFrrStateStatusCounters) ProtoMessage()    {}
func (*RsvpMgmtFrrStateStatusCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_frr_states_compact_8989952a8590ffee, []int{2}
}
func (m *RsvpMgmtFrrStateStatusCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFrrStateStatusCounters.Unmarshal(m, b)
}
func (m *RsvpMgmtFrrStateStatusCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFrrStateStatusCounters.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFrrStateStatusCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFrrStateStatusCounters.Merge(dst, src)
}
func (m *RsvpMgmtFrrStateStatusCounters) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFrrStateStatusCounters.Size(m)
}
func (m *RsvpMgmtFrrStateStatusCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFrrStateStatusCounters.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFrrStateStatusCounters proto.InternalMessageInfo

func (m *RsvpMgmtFrrStateStatusCounters) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *RsvpMgmtFrrStateStatusCounters) GetActiveInstances() uint32 {
	if m != nil {
		return m.ActiveInstances
	}
	return 0
}

func (m *RsvpMgmtFrrStateStatusCounters) GetReadyInstances() uint32 {
	if m != nil {
		return m.ReadyInstances
	}
	return 0
}

func (m *RsvpMgmtFrrStateStatusCounters) GetActiveWaitInstances() uint32 {
	if m != nil {
		return m.ActiveWaitInstances
	}
	return 0
}

func init() {
	proto.RegisterType((*RsvpMgmtFrrStatesCompact_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.frr_summary.rsvp_mgmt_frr_states_compact_KEYS")
	proto.RegisterType((*RsvpMgmtFrrStatesCompact)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.frr_summary.rsvp_mgmt_frr_states_compact")
	proto.RegisterType((*RsvpMgmtFrrStateStatusCounters)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.frr_summary.rsvp_mgmt_frr_state_status_counters")
}

func init() {
	proto.RegisterFile("rsvp_mgmt_frr_states_compact.proto", fileDescriptor_rsvp_mgmt_frr_states_compact_8989952a8590ffee)
}

var fileDescriptor_rsvp_mgmt_frr_states_compact_8989952a8590ffee = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x3d, 0x4e, 0xc3, 0x30,
	0x14, 0xc7, 0x95, 0xf2, 0x31, 0xbc, 0x0a, 0x0a, 0x06, 0xa4, 0x0e, 0x0c, 0x25, 0x1d, 0x28, 0x4b,
	0x86, 0xf4, 0x0c, 0x0c, 0x88, 0xad, 0x1d, 0x2a, 0x26, 0xeb, 0xd5, 0x35, 0x60, 0x09, 0xc7, 0xd6,
	0xf3, 0x4b, 0x68, 0x2e, 0xc0, 0x3d, 0x38, 0x0b, 0x17, 0x43, 0x71, 0x5a, 0xc8, 0x80, 0x2a, 0x18,
	0x58, 0xa2, 0xf8, 0xef, 0xdf, 0xff, 0x63, 0x30, 0xa4, 0x14, 0x2a, 0x2f, 0xed, 0x93, 0x65, 0xf9,
	0x48, 0x24, 0x03, 0x23, 0xeb, 0x20, 0x95, 0xb3, 0x1e, 0x15, 0x67, 0x9e, 0x1c, 0x3b, 0x91, 0x2b,
	0x13, 0x94, 0x93, 0xc6, 0x05, 0xb9, 0x26, 0x69, 0xbc, 0x8c, 0x1e, 0xe7, 0x35, 0x65, 0xf1, 0x2f,
	0x30, 0x16, 0xab, 0x65, 0x9d, 0xc5, 0x80, 0xd2, 0x5a, 0xa4, 0x3a, 0x1d, 0xc3, 0xd5, 0xae, 0x64,
	0x79, 0x7f, 0xfb, 0x30, 0x4f, 0xdf, 0x7b, 0x70, 0xb9, 0x8b, 0x12, 0x6b, 0xe8, 0x7b, 0xe4, 0xe7,
	0x8d, 0x3c, 0xcc, 0x47, 0xc9, 0xa4, 0x9f, 0x2f, 0xb2, 0xbf, 0xef, 0xc9, 0x7e, 0xa8, 0x89, 0xdf,
	0xb2, 0x29, 0x2b, 0x0b, 0xd6, 0x14, 0x66, 0xd0, 0x74, 0xcd, 0x63, 0x95, 0x78, 0x4b, 0x40, 0x90,
	0x0e, 0x9a, 0x2a, 0x64, 0xe3, 0x8a, 0xed, 0x82, 0xe9, 0xff, 0x2e, 0x38, 0xed, 0x54, 0xb6, 0x43,
	0xd2, 0x8f, 0x04, 0xc6, 0xbf, 0xb0, 0x8a, 0x73, 0x38, 0x60, 0xc7, 0xf8, 0x32, 0x4c, 0x46, 0xc9,
	0xe4, 0x68, 0xd6, 0x1e, 0xc4, 0x0d, 0x9c, 0xa0, 0x62, 0x53, 0x69, 0x69, 0x8a, 0x66, 0x94, 0xd2,
	0x61, 0xd8, 0x8b, 0xc0, 0xa0, 0xd5, 0xef, 0xb6, 0xb2, 0xb8, 0x86, 0x01, 0x69, 0x5c, 0xd5, 0x1d,
	0x72, 0x2f, 0x92, 0xc7, 0x51, 0xfe, 0x06, 0x73, 0xb8, 0xd8, 0x64, 0xbe, 0xa2, 0xe1, 0x0e, 0xbe,
	0x1f, 0xf1, 0xb3, 0xf6, 0x72, 0x81, 0x86, 0xbf, 0x3c, 0xcb, 0xc3, 0xf8, 0x92, 0xa6, 0x9f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xc6, 0x4f, 0xab, 0xa8, 0x6f, 0x02, 0x00, 0x00,
}
