// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_hello_if_instance_compact.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_standby_hello_interface_instance_briefs_hello_interface_instance_brief

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Compact Info for IF-based RSVP Hello Instance
type RsvpMgmtHelloIfInstanceCompact_KEYS struct {
	SourceAddress        string   `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	DestinationAddress   string   `protobuf:"bytes,2,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtHelloIfInstanceCompact_KEYS) Reset()         { *m = RsvpMgmtHelloIfInstanceCompact_KEYS{} }
func (m *RsvpMgmtHelloIfInstanceCompact_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtHelloIfInstanceCompact_KEYS) ProtoMessage()    {}
func (*RsvpMgmtHelloIfInstanceCompact_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_hello_if_instance_compact_c07fbaf5662a4fc9, []int{0}
}
func (m *RsvpMgmtHelloIfInstanceCompact_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtHelloIfInstanceCompact_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact_KEYS.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtHelloIfInstanceCompact_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact_KEYS.Merge(dst, src)
}
func (m *RsvpMgmtHelloIfInstanceCompact_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact_KEYS.Size(m)
}
func (m *RsvpMgmtHelloIfInstanceCompact_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtHelloIfInstanceCompact_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtHelloIfInstanceCompact_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

type RsvpMgmtHelloIfInstanceCompact struct {
	// Source address
	SourceAddress string `protobuf:"bytes,50,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	// Destination address
	DestinationAddress string `protobuf:"bytes,51,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// Hello instance type
	InstanceType string `protobuf:"bytes,52,opt,name=instance_type,json=instanceType" json:"instance_type,omitempty"`
	// Interface to use
	HelloInterface       string   `protobuf:"bytes,53,opt,name=hello_interface,json=helloInterface" json:"hello_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtHelloIfInstanceCompact) Reset()         { *m = RsvpMgmtHelloIfInstanceCompact{} }
func (m *RsvpMgmtHelloIfInstanceCompact) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtHelloIfInstanceCompact) ProtoMessage()    {}
func (*RsvpMgmtHelloIfInstanceCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_hello_if_instance_compact_c07fbaf5662a4fc9, []int{1}
}
func (m *RsvpMgmtHelloIfInstanceCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact.Unmarshal(m, b)
}
func (m *RsvpMgmtHelloIfInstanceCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtHelloIfInstanceCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact.Merge(dst, src)
}
func (m *RsvpMgmtHelloIfInstanceCompact) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact.Size(m)
}
func (m *RsvpMgmtHelloIfInstanceCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtHelloIfInstanceCompact proto.InternalMessageInfo

func (m *RsvpMgmtHelloIfInstanceCompact) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtHelloIfInstanceCompact) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtHelloIfInstanceCompact) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *RsvpMgmtHelloIfInstanceCompact) GetHelloInterface() string {
	if m != nil {
		return m.HelloInterface
	}
	return ""
}

func init() {
	proto.RegisterType((*RsvpMgmtHelloIfInstanceCompact_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.hello_interface_instance_briefs.hello_interface_instance_brief.rsvp_mgmt_hello_if_instance_compact_KEYS")
	proto.RegisterType((*RsvpMgmtHelloIfInstanceCompact)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.hello_interface_instance_briefs.hello_interface_instance_brief.rsvp_mgmt_hello_if_instance_compact")
}

func init() {
	proto.RegisterFile("rsvp_mgmt_hello_if_instance_compact.proto", fileDescriptor_rsvp_mgmt_hello_if_instance_compact_c07fbaf5662a4fc9)
}

var fileDescriptor_rsvp_mgmt_hello_if_instance_compact_c07fbaf5662a4fc9 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x3f, 0x4b, 0x04, 0x31,
	0x10, 0xc5, 0x59, 0x0b, 0xc1, 0xe0, 0x9d, 0x10, 0x9b, 0x2d, 0xe5, 0x0e, 0xf1, 0x6c, 0x56, 0xf0,
	0xf4, 0x03, 0x58, 0x58, 0x88, 0x9d, 0xda, 0x58, 0x0d, 0xd9, 0xec, 0xac, 0x06, 0x6e, 0x33, 0x61,
	0x66, 0x14, 0xb7, 0xf5, 0xeb, 0xf9, 0xa5, 0xc4, 0xdc, 0x1f, 0x45, 0x14, 0xd7, 0x2e, 0xfc, 0xe6,
	0xbd, 0x79, 0x8f, 0x8c, 0x39, 0x66, 0x79, 0x4e, 0xd0, 0x3d, 0x74, 0x0a, 0x8f, 0xb8, 0x58, 0x10,
	0x84, 0x16, 0x42, 0x14, 0x75, 0xd1, 0x23, 0x78, 0xea, 0x92, 0xf3, 0x5a, 0x25, 0x26, 0x25, 0x8b,
	0x3e, 0x88, 0x27, 0x08, 0x24, 0xf0, 0xc2, 0x10, 0x12, 0x64, 0x2b, 0x25, 0xe4, 0x2a, 0xbf, 0x3e,
	0x4c, 0x4d, 0xdd, 0x57, 0xab, 0x3d, 0x51, 0x91, 0x5b, 0xe7, 0xf1, 0x73, 0x5d, 0xcd, 0x01, 0x5b,
	0xf9, 0x63, 0x3e, 0x79, 0x2d, 0xcc, 0x6c, 0x40, 0x29, 0xb8, 0xbe, 0xbc, 0xbf, 0xb5, 0x87, 0x66,
	0x2c, 0xf4, 0xc4, 0x1e, 0xc1, 0x35, 0x0d, 0xa3, 0x48, 0x59, 0x1c, 0x14, 0xb3, 0x9d, 0x9b, 0xd1,
	0x92, 0x5e, 0x2c, 0xa1, 0x3d, 0x31, 0xfb, 0x0d, 0x8a, 0x86, 0xe8, 0x34, 0x50, 0xdc, 0x68, 0xb7,
	0xb2, 0xd6, 0x7e, 0x19, 0xad, 0x0c, 0x93, 0xb7, 0xc2, 0x4c, 0x07, 0x94, 0xf8, 0x21, 0xff, 0xf4,
	0x1f, 0xf9, 0xf3, 0xdf, 0xf2, 0xed, 0xd4, 0x8c, 0x36, 0x59, 0xda, 0x27, 0x2c, 0xcf, 0xb2, 0x74,
	0x77, 0x0d, 0xef, 0xfa, 0x84, 0xf6, 0xc8, 0xec, 0x7d, 0xfb, 0xcb, 0xf2, 0x3c, 0xcb, 0xc6, 0x19,
	0x5f, 0xad, 0x69, 0xbd, 0x9d, 0x0f, 0x38, 0x7f, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x7b, 0x71,
	0x81, 0xed, 0x01, 0x00, 0x00,
}
