// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_rsvp_global_counters.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_standby_open_config_global_counters

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MPLS RSVP global counters
type MplsRsvpGlobalCounters_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsRsvpGlobalCounters_KEYS) Reset()         { *m = MplsRsvpGlobalCounters_KEYS{} }
func (m *MplsRsvpGlobalCounters_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsRsvpGlobalCounters_KEYS) ProtoMessage()    {}
func (*MplsRsvpGlobalCounters_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_rsvp_global_counters_4acf5b942da1f3e7, []int{0}
}
func (m *MplsRsvpGlobalCounters_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsRsvpGlobalCounters_KEYS.Unmarshal(m, b)
}
func (m *MplsRsvpGlobalCounters_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsRsvpGlobalCounters_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsRsvpGlobalCounters_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsRsvpGlobalCounters_KEYS.Merge(dst, src)
}
func (m *MplsRsvpGlobalCounters_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsRsvpGlobalCounters_KEYS.Size(m)
}
func (m *MplsRsvpGlobalCounters_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsRsvpGlobalCounters_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsRsvpGlobalCounters_KEYS proto.InternalMessageInfo

type MplsRsvpGlobalCounters struct {
	// Global count of Path Timeouts
	PathTimeouts uint64 `protobuf:"varint,50,opt,name=path_timeouts,json=pathTimeouts" json:"path_timeouts,omitempty"`
	// Global count of reservation timeouts
	ReservationTimeouts uint64 `protobuf:"varint,51,opt,name=reservation_timeouts,json=reservationTimeouts" json:"reservation_timeouts,omitempty"`
	// Global count of rate limited messages
	RateLimitedMessages uint64 `protobuf:"varint,52,opt,name=rate_limited_messages,json=rateLimitedMessages" json:"rate_limited_messages,omitempty"`
	// Global count of path messages received
	InPathMessages uint64 `protobuf:"varint,53,opt,name=in_path_messages,json=inPathMessages" json:"in_path_messages,omitempty"`
	// Global count of path error messages received
	InPathErrorMessages uint64 `protobuf:"varint,54,opt,name=in_path_error_messages,json=inPathErrorMessages" json:"in_path_error_messages,omitempty"`
	// Global count of path tear messages received
	InPathTearMessages uint64 `protobuf:"varint,55,opt,name=in_path_tear_messages,json=inPathTearMessages" json:"in_path_tear_messages,omitempty"`
	// Global count of reservation messages received
	InReservationMessages uint64 `protobuf:"varint,56,opt,name=in_reservation_messages,json=inReservationMessages" json:"in_reservation_messages,omitempty"`
	// Global count of reservation error messages received
	InReservationErrorMessages uint64 `protobuf:"varint,57,opt,name=in_reservation_error_messages,json=inReservationErrorMessages" json:"in_reservation_error_messages,omitempty"`
	// Global count of reservation tear messages received
	InReservationTearMessages uint64 `protobuf:"varint,58,opt,name=in_reservation_tear_messages,json=inReservationTearMessages" json:"in_reservation_tear_messages,omitempty"`
	// Global count of hello messages received
	InHelloMessages uint64 `protobuf:"varint,59,opt,name=in_hello_messages,json=inHelloMessages" json:"in_hello_messages,omitempty"`
	// Global count of srefresh messages received
	InSrefreshMessages uint64 `protobuf:"varint,60,opt,name=in_srefresh_messages,json=inSrefreshMessages" json:"in_srefresh_messages,omitempty"`
	// Global count of ack messages received
	InAckMessages uint64 `protobuf:"varint,61,opt,name=in_ack_messages,json=inAckMessages" json:"in_ack_messages,omitempty"`
	// Global count of path messages send
	OutPathMessages uint64 `protobuf:"varint,62,opt,name=out_path_messages,json=outPathMessages" json:"out_path_messages,omitempty"`
	// Global count of path error messages send
	OutPathErrorMessages uint64 `protobuf:"varint,63,opt,name=out_path_error_messages,json=outPathErrorMessages" json:"out_path_error_messages,omitempty"`
	// Global count of path tear messages send
	OutPathTearMessages uint64 `protobuf:"varint,64,opt,name=out_path_tear_messages,json=outPathTearMessages" json:"out_path_tear_messages,omitempty"`
	// Global count of reservation messages send
	OutReservationMessages uint64 `protobuf:"varint,65,opt,name=out_reservation_messages,json=outReservationMessages" json:"out_reservation_messages,omitempty"`
	// Global count of reservation error messages send
	OutReservationErrorMessages uint64 `protobuf:"varint,66,opt,name=out_reservation_error_messages,json=outReservationErrorMessages" json:"out_reservation_error_messages,omitempty"`
	// Global count of reservation tear messages send
	OutReservationTearMessages uint64 `protobuf:"varint,67,opt,name=out_reservation_tear_messages,json=outReservationTearMessages" json:"out_reservation_tear_messages,omitempty"`
	// Global count of hello messages send
	OutHelloMessages uint64 `protobuf:"varint,68,opt,name=out_hello_messages,json=outHelloMessages" json:"out_hello_messages,omitempty"`
	// Global count of srefresh messages send
	OutSrefreshMessages uint64 `protobuf:"varint,69,opt,name=out_srefresh_messages,json=outSrefreshMessages" json:"out_srefresh_messages,omitempty"`
	// Global count of ack messages send
	OutAckMessages       uint64   `protobuf:"varint,70,opt,name=out_ack_messages,json=outAckMessages" json:"out_ack_messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsRsvpGlobalCounters) Reset()         { *m = MplsRsvpGlobalCounters{} }
func (m *MplsRsvpGlobalCounters) String() string { return proto.CompactTextString(m) }
func (*MplsRsvpGlobalCounters) ProtoMessage()    {}
func (*MplsRsvpGlobalCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_rsvp_global_counters_4acf5b942da1f3e7, []int{1}
}
func (m *MplsRsvpGlobalCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsRsvpGlobalCounters.Unmarshal(m, b)
}
func (m *MplsRsvpGlobalCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsRsvpGlobalCounters.Marshal(b, m, deterministic)
}
func (dst *MplsRsvpGlobalCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsRsvpGlobalCounters.Merge(dst, src)
}
func (m *MplsRsvpGlobalCounters) XXX_Size() int {
	return xxx_messageInfo_MplsRsvpGlobalCounters.Size(m)
}
func (m *MplsRsvpGlobalCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsRsvpGlobalCounters.DiscardUnknown(m)
}

var xxx_messageInfo_MplsRsvpGlobalCounters proto.InternalMessageInfo

func (m *MplsRsvpGlobalCounters) GetPathTimeouts() uint64 {
	if m != nil {
		return m.PathTimeouts
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetReservationTimeouts() uint64 {
	if m != nil {
		return m.ReservationTimeouts
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetRateLimitedMessages() uint64 {
	if m != nil {
		return m.RateLimitedMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInPathMessages() uint64 {
	if m != nil {
		return m.InPathMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInPathErrorMessages() uint64 {
	if m != nil {
		return m.InPathErrorMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInPathTearMessages() uint64 {
	if m != nil {
		return m.InPathTearMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInReservationMessages() uint64 {
	if m != nil {
		return m.InReservationMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInReservationErrorMessages() uint64 {
	if m != nil {
		return m.InReservationErrorMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInReservationTearMessages() uint64 {
	if m != nil {
		return m.InReservationTearMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInHelloMessages() uint64 {
	if m != nil {
		return m.InHelloMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInSrefreshMessages() uint64 {
	if m != nil {
		return m.InSrefreshMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetInAckMessages() uint64 {
	if m != nil {
		return m.InAckMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutPathMessages() uint64 {
	if m != nil {
		return m.OutPathMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutPathErrorMessages() uint64 {
	if m != nil {
		return m.OutPathErrorMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutPathTearMessages() uint64 {
	if m != nil {
		return m.OutPathTearMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutReservationMessages() uint64 {
	if m != nil {
		return m.OutReservationMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutReservationErrorMessages() uint64 {
	if m != nil {
		return m.OutReservationErrorMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutReservationTearMessages() uint64 {
	if m != nil {
		return m.OutReservationTearMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutHelloMessages() uint64 {
	if m != nil {
		return m.OutHelloMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutSrefreshMessages() uint64 {
	if m != nil {
		return m.OutSrefreshMessages
	}
	return 0
}

func (m *MplsRsvpGlobalCounters) GetOutAckMessages() uint64 {
	if m != nil {
		return m.OutAckMessages
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsRsvpGlobalCounters_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.open_config.global_counters.mpls_rsvp_global_counters_KEYS")
	proto.RegisterType((*MplsRsvpGlobalCounters)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.open_config.global_counters.mpls_rsvp_global_counters")
}

func init() {
	proto.RegisterFile("mpls_rsvp_global_counters.proto", fileDescriptor_mpls_rsvp_global_counters_4acf5b942da1f3e7)
}

var fileDescriptor_mpls_rsvp_global_counters_4acf5b942da1f3e7 = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0x5f, 0x4f, 0x13, 0x41,
	0x14, 0xc5, 0x63, 0x62, 0x8c, 0xb9, 0x11, 0xc1, 0xb5, 0x85, 0xa2, 0x82, 0x04, 0x13, 0xd3, 0x18,
	0xd3, 0x48, 0x2b, 0x88, 0x7f, 0xb1, 0x60, 0x8d, 0x89, 0x9a, 0x18, 0xe0, 0xc5, 0xa7, 0xc9, 0x74,
	0x19, 0xda, 0x1b, 0x76, 0xe7, 0x6e, 0x66, 0x66, 0x89, 0x7e, 0x5c, 0xbf, 0x89, 0xd9, 0x99, 0xed,
	0xec, 0xce, 0x00, 0x6f, 0xcd, 0xdc, 0xf3, 0x3b, 0x3d, 0x73, 0xcf, 0xb4, 0xf0, 0x34, 0x2f, 0x32,
	0xcd, 0x94, 0xbe, 0x2c, 0xd8, 0x2c, 0xa3, 0x29, 0xcf, 0x58, 0x4a, 0xa5, 0x34, 0x42, 0xe9, 0x41,
	0xa1, 0xc8, 0x50, 0x72, 0x98, 0xa2, 0x4e, 0x89, 0x21, 0x69, 0xf6, 0x47, 0x31, 0x2c, 0x9c, 0x96,
	0x0a, 0xa1, 0x06, 0xf6, 0x93, 0x36, 0x5c, 0x9e, 0x4d, 0xff, 0x0e, 0xa8, 0x10, 0x92, 0xa5, 0x24,
	0xcf, 0x71, 0x36, 0x88, 0x9c, 0xb6, 0xb7, 0x60, 0xf3, 0xc6, 0xaf, 0x61, 0xdf, 0x27, 0xbf, 0x4f,
	0xb6, 0xff, 0xdd, 0x85, 0xf5, 0x1b, 0x25, 0xc9, 0x33, 0x58, 0x2a, 0xb8, 0x99, 0x33, 0x83, 0xb9,
	0xa0, 0xd2, 0xe8, 0xde, 0x70, 0xeb, 0x56, 0xff, 0xf6, 0xf1, 0xbd, 0xea, 0xf0, 0xb4, 0x3e, 0x4b,
	0x76, 0xa0, 0xa3, 0x84, 0x16, 0xea, 0x92, 0x1b, 0x24, 0xd9, 0x68, 0x47, 0x56, 0xfb, 0xb0, 0x35,
	0xf3, 0xc8, 0x10, 0xba, 0x8a, 0x1b, 0xc1, 0x32, 0xcc, 0xd1, 0x88, 0x33, 0x96, 0x0b, 0xad, 0xf9,
	0x4c, 0xe8, 0xde, 0xeb, 0x9a, 0xe1, 0x46, 0xfc, 0x70, 0xb3, 0x9f, 0xf5, 0x28, 0xe9, 0xc3, 0x0a,
	0x4a, 0x66, 0xe3, 0x78, 0xf9, 0xae, 0x95, 0xdf, 0x47, 0xf9, 0x8b, 0x9b, 0xb9, 0x57, 0x8e, 0x60,
	0x75, 0xa1, 0x14, 0x4a, 0x91, 0x6a, 0xf4, 0x7b, 0xce, 0xde, 0xe9, 0x27, 0xd5, 0xcc, 0x43, 0x3b,
	0xd0, 0x5d, 0x40, 0x46, 0xf0, 0x16, 0xf3, 0xc6, 0x32, 0x89, 0x63, 0x4e, 0x05, 0x6f, 0x90, 0x3d,
	0x58, 0x43, 0xc9, 0xda, 0x77, 0xf7, 0xd0, 0xbe, 0x85, 0xba, 0x28, 0x8f, 0x9b, 0xa9, 0xe7, 0xc6,
	0xb0, 0x11, 0x71, 0x51, 0xcc, 0xb7, 0x96, 0x7e, 0x14, 0xd0, 0x61, 0xda, 0x03, 0x78, 0x12, 0x59,
	0x84, 0xa1, 0xdf, 0x59, 0x87, 0xf5, 0xc0, 0x21, 0xc8, 0xfe, 0x02, 0x1e, 0xa0, 0x64, 0x73, 0x91,
	0x65, 0xd4, 0x50, 0xef, 0x2d, 0xb5, 0x8c, 0xf2, 0x5b, 0x75, 0xee, 0xb5, 0xaf, 0xa0, 0x83, 0x92,
	0x69, 0x25, 0xce, 0x95, 0xd0, 0xad, 0xed, 0x7f, 0x58, 0x6c, 0xe6, 0xa4, 0x1e, 0x79, 0xe2, 0x39,
	0x2c, 0xa3, 0x64, 0x3c, 0xbd, 0x68, 0xc4, 0x1f, 0xad, 0x78, 0x09, 0xe5, 0x38, 0xbd, 0x68, 0xa7,
	0xa0, 0xd2, 0x44, 0xa5, 0x7e, 0x72, 0x29, 0xa8, 0x34, 0x41, 0xab, 0xbb, 0xb0, 0xe6, 0xb5, 0xd1,
	0xbe, 0x0e, 0x2c, 0xd1, 0xa9, 0x89, 0x70, 0x53, 0x23, 0x58, 0xf5, 0x58, 0xb8, 0xa3, 0xcf, 0xee,
	0x31, 0xd4, 0x54, 0xb0, 0x9d, 0x7d, 0xe8, 0x55, 0xd0, 0xb5, 0xd5, 0x8e, 0x2d, 0x56, 0x99, 0x5e,
	0xd7, 0xed, 0x11, 0x6c, 0xc6, 0x64, 0x14, 0xf6, 0xd0, 0xf2, 0x8f, 0x43, 0x3e, 0xcc, 0x3c, 0x86,
	0x8d, 0xd8, 0x24, 0x8c, 0x7e, 0xe4, 0x1e, 0x48, 0xe8, 0x11, 0xdc, 0xe0, 0x25, 0x24, 0x95, 0x45,
	0x54, 0xf0, 0x17, 0xcb, 0xad, 0x50, 0x69, 0xc2, 0x86, 0x87, 0xd0, 0xad, 0xd4, 0x57, 0x2b, 0x9e,
	0xf8, 0x1d, 0x5d, 0xe9, 0xb8, 0x0f, 0x95, 0x4f, 0x58, 0xf2, 0x57, 0xf7, 0x7b, 0xa4, 0xd2, 0xb4,
	0x5a, 0x9e, 0xde, 0xb1, 0x7f, 0x68, 0xa3, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x67, 0x74, 0x50,
	0x65, 0xf3, 0x04, 0x00, 0x00,
}
