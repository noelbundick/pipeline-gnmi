// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_path_detail.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_standby_psb_detaileds_psb_detailed

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Detailed Form of RSVP Path Info
type RsvpMgmtPathDetail_KEYS struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	DestinationPort      uint32   `protobuf:"varint,2,opt,name=destination_port,json=destinationPort" json:"destination_port,omitempty"`
	Protocol             uint32   `protobuf:"varint,3,opt,name=protocol" json:"protocol,omitempty"`
	ExtendedTunnelId     string   `protobuf:"bytes,4,opt,name=extended_tunnel_id,json=extendedTunnelId" json:"extended_tunnel_id,omitempty"`
	SessionType          string   `protobuf:"bytes,5,opt,name=session_type,json=sessionType" json:"session_type,omitempty"`
	P2MpId               uint32   `protobuf:"varint,6,opt,name=p2_mp_id,json=p2MpId" json:"p2_mp_id,omitempty"`
	SourceAddress        string   `protobuf:"bytes,7,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	SourcePort           uint32   `protobuf:"varint,8,opt,name=source_port,json=sourcePort" json:"source_port,omitempty"`
	SubGroupOrigin       string   `protobuf:"bytes,9,opt,name=sub_group_origin,json=subGroupOrigin" json:"sub_group_origin,omitempty"`
	SubGroupId           uint32   `protobuf:"varint,10,opt,name=sub_group_id,json=subGroupId" json:"sub_group_id,omitempty"`
	VrfName              string   `protobuf:"bytes,11,opt,name=vrf_name,json=vrfName" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPathDetail_KEYS) Reset()         { *m = RsvpMgmtPathDetail_KEYS{} }
func (m *RsvpMgmtPathDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPathDetail_KEYS) ProtoMessage()    {}
func (*RsvpMgmtPathDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{0}
}
func (m *RsvpMgmtPathDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPathDetail_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtPathDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPathDetail_KEYS.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtPathDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPathDetail_KEYS.Merge(dst, src)
}
func (m *RsvpMgmtPathDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPathDetail_KEYS.Size(m)
}
func (m *RsvpMgmtPathDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPathDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPathDetail_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtPathDetail_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetSubGroupOrigin() string {
	if m != nil {
		return m.SubGroupOrigin
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type RsvpMgmtPathDetail struct {
	// RSVP Session Information
	Session *RsvpMgmtSessionInfo `protobuf:"bytes,50,opt,name=session" json:"session,omitempty"`
	// RSVP S2L Sub-LSP information
	S2LSubLsp *RsvpMgmtS2LSubLspIpv4 `protobuf:"bytes,51,opt,name=s2_l_sub_lsp,json=s2LSubLsp" json:"s2_l_sub_lsp,omitempty"`
	// RSVP Template
	Template *RsvpMgmtFilterInfo `protobuf:"bytes,52,opt,name=template" json:"template,omitempty"`
	// RSVP Session Attribute
	SessionAttribute *RsvpMgmtSessionAttribute `protobuf:"bytes,53,opt,name=session_attribute,json=sessionAttribute" json:"session_attribute,omitempty"`
	// RSVP Traffic Spec Info
	TrafficSpec *RsvpMgmtTrafficSpec `protobuf:"bytes,54,opt,name=traffic_spec,json=trafficSpec" json:"traffic_spec,omitempty"`
	// RSVP Generic Traffic Spec Info
	GenericTrafficSpec *RsvpMgmtGenTrafficSpec `protobuf:"bytes,55,opt,name=generic_traffic_spec,json=genericTrafficSpec" json:"generic_traffic_spec,omitempty"`
	// Path Input Interface
	InputInterface string `protobuf:"bytes,56,opt,name=input_interface,json=inputInterface" json:"input_interface,omitempty"`
	// Path Flags
	PathFlags *RsvpMgmtPathFlags `protobuf:"bytes,57,opt,name=path_flags,json=pathFlags" json:"path_flags,omitempty"`
	// Path Backup Tunnel
	BackupTunnelName string `protobuf:"bytes,58,opt,name=backup_tunnel_name,json=backupTunnelName" json:"backup_tunnel_name,omitempty"`
	// Path Hop Info
	Hop *RsvpMgmtHopInfo `protobuf:"bytes,59,opt,name=hop" json:"hop,omitempty"`
	// Policy Sources Info
	PolicySourceInfo *RsvpMgmtPolicySources `protobuf:"bytes,60,opt,name=policy_source_info,json=policySourceInfo" json:"policy_source_info,omitempty"`
	// RSVP Header Info
	Header *RsvpMgmtHeaderInfo `protobuf:"bytes,61,opt,name=header" json:"header,omitempty"`
	// Expiry Time
	ExpiryTime *RsvpMgmtTimespec `protobuf:"bytes,62,opt,name=expiry_time,json=expiryTime" json:"expiry_time,omitempty"`
	// Policy Flags
	PolicyFlags *RsvpMgmtPolicyFlags `protobuf:"bytes,63,opt,name=policy_flags,json=policyFlags" json:"policy_flags,omitempty"`
	// Policy Query Flags
	PolicyQueryFlags *RsvpMgmtPolicyQueryFlags `protobuf:"bytes,64,opt,name=policy_query_flags,json=policyQueryFlags" json:"policy_query_flags,omitempty"`
	// Path Forwarding Contexts
	Pfc []*RsvpPathForwardingContext `protobuf:"bytes,65,rep,name=pfc" json:"pfc,omitempty"`
	// Label Information
	LabelInfo *RsvpMgmtLabelInfo `protobuf:"bytes,66,opt,name=label_info,json=labelInfo" json:"label_info,omitempty"`
	// DS-TE Class-Type
	ClassType *RsvpMgmtCtInfo `protobuf:"bytes,67,opt,name=class_type,json=classType" json:"class_type,omitempty"`
	// Incoming ERO validity
	IsInEroValid bool `protobuf:"varint,68,opt,name=is_in_ero_valid,json=isInEroValid" json:"is_in_ero_valid,omitempty"`
	// Incoming Explicit Route Sub Objects
	InEro []*RsvpMgmtEroSubobj `protobuf:"bytes,69,rep,name=in_ero,json=inEro" json:"in_ero,omitempty"`
	// Outgoing ERO validity
	IsOutEroValid bool `protobuf:"varint,70,opt,name=is_out_ero_valid,json=isOutEroValid" json:"is_out_ero_valid,omitempty"`
	// Outgoing Explicit Route Sub Objects
	OutEro               []*RsvpMgmtEroSubobj `protobuf:"bytes,71,rep,name=out_ero,json=outEro" json:"out_ero,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RsvpMgmtPathDetail) Reset()         { *m = RsvpMgmtPathDetail{} }
func (m *RsvpMgmtPathDetail) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPathDetail) ProtoMessage()    {}
func (*RsvpMgmtPathDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{1}
}
func (m *RsvpMgmtPathDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPathDetail.Unmarshal(m, b)
}
func (m *RsvpMgmtPathDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPathDetail.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtPathDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPathDetail.Merge(dst, src)
}
func (m *RsvpMgmtPathDetail) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPathDetail.Size(m)
}
func (m *RsvpMgmtPathDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPathDetail.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPathDetail proto.InternalMessageInfo

func (m *RsvpMgmtPathDetail) GetSession() *RsvpMgmtSessionInfo {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetS2LSubLsp() *RsvpMgmtS2LSubLspIpv4 {
	if m != nil {
		return m.S2LSubLsp
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetTemplate() *RsvpMgmtFilterInfo {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetSessionAttribute() *RsvpMgmtSessionAttribute {
	if m != nil {
		return m.SessionAttribute
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetTrafficSpec() *RsvpMgmtTrafficSpec {
	if m != nil {
		return m.TrafficSpec
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetGenericTrafficSpec() *RsvpMgmtGenTrafficSpec {
	if m != nil {
		return m.GenericTrafficSpec
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetInputInterface() string {
	if m != nil {
		return m.InputInterface
	}
	return ""
}

func (m *RsvpMgmtPathDetail) GetPathFlags() *RsvpMgmtPathFlags {
	if m != nil {
		return m.PathFlags
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetBackupTunnelName() string {
	if m != nil {
		return m.BackupTunnelName
	}
	return ""
}

func (m *RsvpMgmtPathDetail) GetHop() *RsvpMgmtHopInfo {
	if m != nil {
		return m.Hop
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetPolicySourceInfo() *RsvpMgmtPolicySources {
	if m != nil {
		return m.PolicySourceInfo
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetHeader() *RsvpMgmtHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetExpiryTime() *RsvpMgmtTimespec {
	if m != nil {
		return m.ExpiryTime
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetPolicyFlags() *RsvpMgmtPolicyFlags {
	if m != nil {
		return m.PolicyFlags
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetPolicyQueryFlags() *RsvpMgmtPolicyQueryFlags {
	if m != nil {
		return m.PolicyQueryFlags
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetPfc() []*RsvpPathForwardingContext {
	if m != nil {
		return m.Pfc
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetLabelInfo() *RsvpMgmtLabelInfo {
	if m != nil {
		return m.LabelInfo
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetClassType() *RsvpMgmtCtInfo {
	if m != nil {
		return m.ClassType
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetIsInEroValid() bool {
	if m != nil {
		return m.IsInEroValid
	}
	return false
}

func (m *RsvpMgmtPathDetail) GetInEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.InEro
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetIsOutEroValid() bool {
	if m != nil {
		return m.IsOutEroValid
	}
	return false
}

func (m *RsvpMgmtPathDetail) GetOutEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.OutEro
	}
	return nil
}

// RSVP S2L Sub-LSP
type RsvpMgmtS2LSubLspIpv4 struct {
	// S2L Sub-LSP Destination Address
	S2LDestinationAddress string   `protobuf:"bytes,1,opt,name=s2_l_destination_address,json=s2LDestinationAddress" json:"s2_l_destination_address,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *RsvpMgmtS2LSubLspIpv4) Reset()         { *m = RsvpMgmtS2LSubLspIpv4{} }
func (m *RsvpMgmtS2LSubLspIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtS2LSubLspIpv4) ProtoMessage()    {}
func (*RsvpMgmtS2LSubLspIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{2}
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtS2LSubLspIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Merge(dst, src)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Size(m)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtS2LSubLspIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtS2LSubLspIpv4) GetS2LDestinationAddress() string {
	if m != nil {
		return m.S2LDestinationAddress
	}
	return ""
}

// RSVP Filter
type RsvpMgmtFilterIpv4 struct {
	// Source Address
	SourceAddress string `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	// Source Port
	SourcePort           uint32   `protobuf:"varint,2,opt,name=source_port,json=sourcePort" json:"source_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtFilterIpv4) Reset()         { *m = RsvpMgmtFilterIpv4{} }
func (m *RsvpMgmtFilterIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterIpv4) ProtoMessage()    {}
func (*RsvpMgmtFilterIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{3}
}
func (m *RsvpMgmtFilterIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFilterIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterIpv4.Merge(dst, src)
}
func (m *RsvpMgmtFilterIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Size(m)
}
func (m *RsvpMgmtFilterIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtFilterIpv4) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtFilterIpv4) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

// RSVP P2MP IPv4 FilterSpec
type RsvpMgmtFilterP2MpIpv4 struct {
	// Source Address
	SourceAddress string `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	// Source Port
	SourcePort uint32 `protobuf:"varint,2,opt,name=source_port,json=sourcePort" json:"source_port,omitempty"`
	// Point to Multipoint SubGroup Origin
	P2MpSubGroupOrigin string `protobuf:"bytes,3,opt,name=p2_mp_sub_group_origin,json=p2MpSubGroupOrigin" json:"p2_mp_sub_group_origin,omitempty"`
	// Point to Multipoint Subgroup ID
	SubGroupId           uint32   `protobuf:"varint,4,opt,name=sub_group_id,json=subGroupId" json:"sub_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtFilterP2MpIpv4) Reset()         { *m = RsvpMgmtFilterP2MpIpv4{} }
func (m *RsvpMgmtFilterP2MpIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterP2MpIpv4) ProtoMessage()    {}
func (*RsvpMgmtFilterP2MpIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{4}
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFilterP2MpIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Merge(dst, src)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Size(m)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterP2MpIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtFilterP2MpIpv4) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtFilterP2MpIpv4) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *RsvpMgmtFilterP2MpIpv4) GetP2MpSubGroupOrigin() string {
	if m != nil {
		return m.P2MpSubGroupOrigin
	}
	return ""
}

func (m *RsvpMgmtFilterP2MpIpv4) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

// Union of the different RSVP filterspec types
type RsvpFilterUnion struct {
	FilterType string `protobuf:"bytes,1,opt,name=filter_type,json=filterType" json:"filter_type,omitempty"`
	// UDP IPV4 FilterSpec
	UdpIpv4Session *RsvpMgmtFilterIpv4 `protobuf:"bytes,2,opt,name=udp_ipv4_session,json=udpIpv4Session" json:"udp_ipv4_session,omitempty"`
	// IPv4 P2MP LSP FilterSpec
	P2MpIpv4Session      *RsvpMgmtFilterP2MpIpv4 `protobuf:"bytes,3,opt,name=p2_mp_ipv4_session,json=p2MpIpv4Session" json:"p2_mp_ipv4_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RsvpFilterUnion) Reset()         { *m = RsvpFilterUnion{} }
func (m *RsvpFilterUnion) String() string { return proto.CompactTextString(m) }
func (*RsvpFilterUnion) ProtoMessage()    {}
func (*RsvpFilterUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{5}
}
func (m *RsvpFilterUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpFilterUnion.Unmarshal(m, b)
}
func (m *RsvpFilterUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpFilterUnion.Marshal(b, m, deterministic)
}
func (dst *RsvpFilterUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpFilterUnion.Merge(dst, src)
}
func (m *RsvpFilterUnion) XXX_Size() int {
	return xxx_messageInfo_RsvpFilterUnion.Size(m)
}
func (m *RsvpFilterUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpFilterUnion.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpFilterUnion proto.InternalMessageInfo

func (m *RsvpFilterUnion) GetFilterType() string {
	if m != nil {
		return m.FilterType
	}
	return ""
}

func (m *RsvpFilterUnion) GetUdpIpv4Session() *RsvpMgmtFilterIpv4 {
	if m != nil {
		return m.UdpIpv4Session
	}
	return nil
}

func (m *RsvpFilterUnion) GetP2MpIpv4Session() *RsvpMgmtFilterP2MpIpv4 {
	if m != nil {
		return m.P2MpIpv4Session
	}
	return nil
}

// RSVP FilterSpec Info
type RsvpMgmtFilterInfo struct {
	// RSVP Filter
	RsvpFilter           *RsvpFilterUnion `protobuf:"bytes,1,opt,name=rsvp_filter,json=rsvpFilter" json:"rsvp_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RsvpMgmtFilterInfo) Reset()         { *m = RsvpMgmtFilterInfo{} }
func (m *RsvpMgmtFilterInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterInfo) ProtoMessage()    {}
func (*RsvpMgmtFilterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{6}
}
func (m *RsvpMgmtFilterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtFilterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterInfo.Merge(dst, src)
}
func (m *RsvpMgmtFilterInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Size(m)
}
func (m *RsvpMgmtFilterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterInfo proto.InternalMessageInfo

func (m *RsvpMgmtFilterInfo) GetRsvpFilter() *RsvpFilterUnion {
	if m != nil {
		return m.RsvpFilter
	}
	return nil
}

// RSVP UDP IPv4 Session
type RsvpMgmtSessionUdpIpv4 struct {
	// Destination address
	DestinationAddress string `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// Protocol type (originally defined in RFC 790, further values in subsequent RFCs)
	Protocol uint32 `protobuf:"varint,2,opt,name=protocol" json:"protocol,omitempty"`
	// The Session Destination Port
	DestinationPort      uint32   `protobuf:"varint,3,opt,name=destination_port,json=destinationPort" json:"destination_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionUdpIpv4) Reset()         { *m = RsvpMgmtSessionUdpIpv4{} }
func (m *RsvpMgmtSessionUdpIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionUdpIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionUdpIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{7}
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionUdpIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Merge(dst, src)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Size(m)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionUdpIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionUdpIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionUdpIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionUdpIpv4) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *RsvpMgmtSessionUdpIpv4) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

// RSVP LSP-Tunnel-IPv4 Session
type RsvpMgmtSessionLspTunnelIpv4 struct {
	// Destination address
	DestinationAddress string `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// The Session Tunnel ID
	TunnelId uint32 `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	// The Session Extended Tunnel ID
	ExtendedTunnelId     string   `protobuf:"bytes,3,opt,name=extended_tunnel_id,json=extendedTunnelId" json:"extended_tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionLspTunnelIpv4) Reset()         { *m = RsvpMgmtSessionLspTunnelIpv4{} }
func (m *RsvpMgmtSessionLspTunnelIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionLspTunnelIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionLspTunnelIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{8}
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionLspTunnelIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Merge(dst, src)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Size(m)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionLspTunnelIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionLspTunnelIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionLspTunnelIpv4) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

// RSVP UNI IPv4 Session
type RsvpMgmtSessionUniIpv4 struct {
	// Destination address
	DestinationAddress string `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// The Session Tunnel ID
	TunnelId uint32 `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	// The Session Extended Address
	ExtendedAddress      string   `protobuf:"bytes,3,opt,name=extended_address,json=extendedAddress" json:"extended_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionUniIpv4) Reset()         { *m = RsvpMgmtSessionUniIpv4{} }
func (m *RsvpMgmtSessionUniIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionUniIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionUniIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{9}
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionUniIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionUniIpv4.Merge(dst, src)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Size(m)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionUniIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionUniIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionUniIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionUniIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionUniIpv4) GetExtendedAddress() string {
	if m != nil {
		return m.ExtendedAddress
	}
	return ""
}

// RSVP P2MP-LSP-Tunnel-IPv4 Session
type RsvpMgmtSessionP2MpLspTunnelIpv4 struct {
	// The Point to Multipoint ID
	P2MpId uint32 `protobuf:"varint,1,opt,name=p2_mp_id,json=p2MpId" json:"p2_mp_id,omitempty"`
	// The Session Tunnel ID
	TunnelId uint32 `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	// The Session Extended Tunnel ID
	ExtendedTunnelId     string   `protobuf:"bytes,3,opt,name=extended_tunnel_id,json=extendedTunnelId" json:"extended_tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) Reset()         { *m = RsvpMgmtSessionP2MpLspTunnelIpv4{} }
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionP2MpLspTunnelIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionP2MpLspTunnelIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{10}
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Merge(dst, src)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Size(m)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

// Union of the different RSVP session types
type RsvpSessionUnion struct {
	SessionType string `protobuf:"bytes,1,opt,name=session_type,json=sessionType" json:"session_type,omitempty"`
	// UDP IPv4 session
	Ipv4 *RsvpMgmtSessionUdpIpv4 `protobuf:"bytes,2,opt,name=ipv4" json:"ipv4,omitempty"`
	// IPv4 LSP session
	Ipv4LspSession *RsvpMgmtSessionLspTunnelIpv4 `protobuf:"bytes,3,opt,name=ipv4_lsp_session,json=ipv4LspSession" json:"ipv4_lsp_session,omitempty"`
	// IPv4 UNI session
	Ipv4UniSession *RsvpMgmtSessionUniIpv4 `protobuf:"bytes,4,opt,name=ipv4_uni_session,json=ipv4UniSession" json:"ipv4_uni_session,omitempty"`
	// IPv4 P2MP LSP session
	Ipv4P2MpLspSession   *RsvpMgmtSessionP2MpLspTunnelIpv4 `protobuf:"bytes,5,opt,name=ipv4_p2_mp_lsp_session,json=ipv4P2MpLspSession" json:"ipv4_p2_mp_lsp_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RsvpSessionUnion) Reset()         { *m = RsvpSessionUnion{} }
func (m *RsvpSessionUnion) String() string { return proto.CompactTextString(m) }
func (*RsvpSessionUnion) ProtoMessage()    {}
func (*RsvpSessionUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{11}
}
func (m *RsvpSessionUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpSessionUnion.Unmarshal(m, b)
}
func (m *RsvpSessionUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpSessionUnion.Marshal(b, m, deterministic)
}
func (dst *RsvpSessionUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpSessionUnion.Merge(dst, src)
}
func (m *RsvpSessionUnion) XXX_Size() int {
	return xxx_messageInfo_RsvpSessionUnion.Size(m)
}
func (m *RsvpSessionUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpSessionUnion.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpSessionUnion proto.InternalMessageInfo

func (m *RsvpSessionUnion) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *RsvpSessionUnion) GetIpv4() *RsvpMgmtSessionUdpIpv4 {
	if m != nil {
		return m.Ipv4
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4LspSession() *RsvpMgmtSessionLspTunnelIpv4 {
	if m != nil {
		return m.Ipv4LspSession
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4UniSession() *RsvpMgmtSessionUniIpv4 {
	if m != nil {
		return m.Ipv4UniSession
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4P2MpLspSession() *RsvpMgmtSessionP2MpLspTunnelIpv4 {
	if m != nil {
		return m.Ipv4P2MpLspSession
	}
	return nil
}

// RSVP Session Info
type RsvpMgmtSessionInfo struct {
	// RSVP Session
	RsvpSession          *RsvpSessionUnion `protobuf:"bytes,1,opt,name=rsvp_session,json=rsvpSession" json:"rsvp_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RsvpMgmtSessionInfo) Reset()         { *m = RsvpMgmtSessionInfo{} }
func (m *RsvpMgmtSessionInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionInfo) ProtoMessage()    {}
func (*RsvpMgmtSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{12}
}
func (m *RsvpMgmtSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionInfo.Merge(dst, src)
}
func (m *RsvpMgmtSessionInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Size(m)
}
func (m *RsvpMgmtSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionInfo proto.InternalMessageInfo

func (m *RsvpMgmtSessionInfo) GetRsvpSession() *RsvpSessionUnion {
	if m != nil {
		return m.RsvpSession
	}
	return nil
}

// RSVP Policy Sources
type RsvpMgmtPolicySources struct {
	// Policy Source is TE Link
	IsTeLink bool `protobuf:"varint,1,opt,name=is_te_link,json=isTeLink" json:"is_te_link,omitempty"`
	// Policy Source is Local
	IsLocal bool `protobuf:"varint,2,opt,name=is_local,json=isLocal" json:"is_local,omitempty"`
	// Policy Source is COPS
	IsCops bool `protobuf:"varint,3,opt,name=is_cops,json=isCops" json:"is_cops,omitempty"`
	// Policy Source is Default
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault" json:"is_default,omitempty"`
	// Policy Source is Cable
	IsCable              bool     `protobuf:"varint,5,opt,name=is_cable,json=isCable" json:"is_cable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPolicySources) Reset()         { *m = RsvpMgmtPolicySources{} }
func (m *RsvpMgmtPolicySources) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPolicySources) ProtoMessage()    {}
func (*RsvpMgmtPolicySources) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{13}
}
func (m *RsvpMgmtPolicySources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPolicySources.Unmarshal(m, b)
}
func (m *RsvpMgmtPolicySources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPolicySources.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtPolicySources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPolicySources.Merge(dst, src)
}
func (m *RsvpMgmtPolicySources) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPolicySources.Size(m)
}
func (m *RsvpMgmtPolicySources) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPolicySources.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPolicySources proto.InternalMessageInfo

func (m *RsvpMgmtPolicySources) GetIsTeLink() bool {
	if m != nil {
		return m.IsTeLink
	}
	return false
}

func (m *RsvpMgmtPolicySources) GetIsLocal() bool {
	if m != nil {
		return m.IsLocal
	}
	return false
}

func (m *RsvpMgmtPolicySources) GetIsCops() bool {
	if m != nil {
		return m.IsCops
	}
	return false
}

func (m *RsvpMgmtPolicySources) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

func (m *RsvpMgmtPolicySources) GetIsCable() bool {
	if m != nil {
		return m.IsCable
	}
	return false
}

// RSVP Policy Flags
type RsvpMgmtPolicyFlags struct {
	// Accepted
	IsAccepted bool `protobuf:"varint,1,opt,name=is_accepted,json=isAccepted" json:"is_accepted,omitempty"`
	// Installed
	IsInstalled bool `protobuf:"varint,2,opt,name=is_installed,json=isInstalled" json:"is_installed,omitempty"`
	// Forwarding
	IsForwarding         bool     `protobuf:"varint,3,opt,name=is_forwarding,json=isForwarding" json:"is_forwarding,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPolicyFlags) Reset()         { *m = RsvpMgmtPolicyFlags{} }
func (m *RsvpMgmtPolicyFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPolicyFlags) ProtoMessage()    {}
func (*RsvpMgmtPolicyFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{14}
}
func (m *RsvpMgmtPolicyFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPolicyFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtPolicyFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPolicyFlags.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtPolicyFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPolicyFlags.Merge(dst, src)
}
func (m *RsvpMgmtPolicyFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPolicyFlags.Size(m)
}
func (m *RsvpMgmtPolicyFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPolicyFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPolicyFlags proto.InternalMessageInfo

func (m *RsvpMgmtPolicyFlags) GetIsAccepted() bool {
	if m != nil {
		return m.IsAccepted
	}
	return false
}

func (m *RsvpMgmtPolicyFlags) GetIsInstalled() bool {
	if m != nil {
		return m.IsInstalled
	}
	return false
}

func (m *RsvpMgmtPolicyFlags) GetIsForwarding() bool {
	if m != nil {
		return m.IsForwarding
	}
	return false
}

// RSVP Policy Query Flags
type RsvpMgmtPolicyQueryFlags struct {
	// Needed
	IsNeeded bool `protobuf:"varint,1,opt,name=is_needed,json=isNeeded" json:"is_needed,omitempty"`
	// Report Required
	IsReportRequired bool `protobuf:"varint,2,opt,name=is_report_required,json=isReportRequired" json:"is_report_required,omitempty"`
	// Resynchronization
	IsResync bool `protobuf:"varint,3,opt,name=is_resync,json=isResync" json:"is_resync,omitempty"`
	// Bypass
	IsBypass             bool     `protobuf:"varint,4,opt,name=is_bypass,json=isBypass" json:"is_bypass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPolicyQueryFlags) Reset()         { *m = RsvpMgmtPolicyQueryFlags{} }
func (m *RsvpMgmtPolicyQueryFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPolicyQueryFlags) ProtoMessage()    {}
func (*RsvpMgmtPolicyQueryFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{15}
}
func (m *RsvpMgmtPolicyQueryFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPolicyQueryFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtPolicyQueryFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPolicyQueryFlags.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtPolicyQueryFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPolicyQueryFlags.Merge(dst, src)
}
func (m *RsvpMgmtPolicyQueryFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPolicyQueryFlags.Size(m)
}
func (m *RsvpMgmtPolicyQueryFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPolicyQueryFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPolicyQueryFlags proto.InternalMessageInfo

func (m *RsvpMgmtPolicyQueryFlags) GetIsNeeded() bool {
	if m != nil {
		return m.IsNeeded
	}
	return false
}

func (m *RsvpMgmtPolicyQueryFlags) GetIsReportRequired() bool {
	if m != nil {
		return m.IsReportRequired
	}
	return false
}

func (m *RsvpMgmtPolicyQueryFlags) GetIsResync() bool {
	if m != nil {
		return m.IsResync
	}
	return false
}

func (m *RsvpMgmtPolicyQueryFlags) GetIsBypass() bool {
	if m != nil {
		return m.IsBypass
	}
	return false
}

// RSVP Time Spec
type RsvpMgmtTimespec struct {
	// Time Value in Seconds
	Seconds int32 `protobuf:"zigzag32,1,opt,name=seconds" json:"seconds,omitempty"`
	// Time Value in Nano-seconds
	Nanoseconds          int32    `protobuf:"zigzag32,2,opt,name=nanoseconds" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTimespec) Reset()         { *m = RsvpMgmtTimespec{} }
func (m *RsvpMgmtTimespec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTimespec) ProtoMessage()    {}
func (*RsvpMgmtTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{16}
}
func (m *RsvpMgmtTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTimespec.Unmarshal(m, b)
}
func (m *RsvpMgmtTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTimespec.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTimespec.Merge(dst, src)
}
func (m *RsvpMgmtTimespec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTimespec.Size(m)
}
func (m *RsvpMgmtTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTimespec proto.InternalMessageInfo

func (m *RsvpMgmtTimespec) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *RsvpMgmtTimespec) GetNanoseconds() int32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

// Hop Info
type RsvpMgmtHopInfo struct {
	// IP address of the neighbor
	NeighborAddress string `protobuf:"bytes,1,opt,name=neighbor_address,json=neighborAddress" json:"neighbor_address,omitempty"`
	// Neighbor Logical Interface Name
	NeighborLogicalInterfaceName string   `protobuf:"bytes,2,opt,name=neighbor_logical_interface_name,json=neighborLogicalInterfaceName" json:"neighbor_logical_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *RsvpMgmtHopInfo) Reset()         { *m = RsvpMgmtHopInfo{} }
func (m *RsvpMgmtHopInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtHopInfo) ProtoMessage()    {}
func (*RsvpMgmtHopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{17}
}
func (m *RsvpMgmtHopInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtHopInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtHopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtHopInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtHopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtHopInfo.Merge(dst, src)
}
func (m *RsvpMgmtHopInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtHopInfo.Size(m)
}
func (m *RsvpMgmtHopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtHopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtHopInfo proto.InternalMessageInfo

func (m *RsvpMgmtHopInfo) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *RsvpMgmtHopInfo) GetNeighborLogicalInterfaceName() string {
	if m != nil {
		return m.NeighborLogicalInterfaceName
	}
	return ""
}

// RSVP Traffic Spec Info
type RsvpMgmtTrafficSpec struct {
	// Traffic Average Rate in bytes per second
	TrafficAverageRate uint64 `protobuf:"varint,1,opt,name=traffic_average_rate,json=trafficAverageRate" json:"traffic_average_rate,omitempty"`
	// Traffic Maximum Burst
	TrafficMaxBurst uint64 `protobuf:"varint,2,opt,name=traffic_max_burst,json=trafficMaxBurst" json:"traffic_max_burst,omitempty"`
	// Traffic Peak Rate in bytes per second
	TrafficPeakRate uint64 `protobuf:"varint,3,opt,name=traffic_peak_rate,json=trafficPeakRate" json:"traffic_peak_rate,omitempty"`
	// Traffic Minimum Unit
	TrafficMinUnit uint32 `protobuf:"varint,4,opt,name=traffic_min_unit,json=trafficMinUnit" json:"traffic_min_unit,omitempty"`
	// Traffic Maximum Unit
	TrafficMaxUnit       uint32   `protobuf:"varint,5,opt,name=traffic_max_unit,json=trafficMaxUnit" json:"traffic_max_unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTrafficSpec) Reset()         { *m = RsvpMgmtTrafficSpec{} }
func (m *RsvpMgmtTrafficSpec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTrafficSpec) ProtoMessage()    {}
func (*RsvpMgmtTrafficSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{18}
}
func (m *RsvpMgmtTrafficSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Unmarshal(m, b)
}
func (m *RsvpMgmtTrafficSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtTrafficSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTrafficSpec.Merge(dst, src)
}
func (m *RsvpMgmtTrafficSpec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Size(m)
}
func (m *RsvpMgmtTrafficSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTrafficSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTrafficSpec proto.InternalMessageInfo

func (m *RsvpMgmtTrafficSpec) GetTrafficAverageRate() uint64 {
	if m != nil {
		return m.TrafficAverageRate
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMaxBurst() uint64 {
	if m != nil {
		return m.TrafficMaxBurst
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficPeakRate() uint64 {
	if m != nil {
		return m.TrafficPeakRate
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMinUnit() uint32 {
	if m != nil {
		return m.TrafficMinUnit
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMaxUnit() uint32 {
	if m != nil {
		return m.TrafficMaxUnit
	}
	return 0
}

// RSVP G709 OTN Sender Tspec Info
type RsvpMgmtTspecG709Otn struct {
	// G709 OTN Traffic Signal Type (Refer G709 v3)
	TrafficSignalType uint32 `protobuf:"varint,1,opt,name=traffic_signal_type,json=trafficSignalType" json:"traffic_signal_type,omitempty"`
	// G709 OTN Traffic NVC
	TrafficNvc uint32 `protobuf:"varint,2,opt,name=traffic_nvc,json=trafficNvc" json:"traffic_nvc,omitempty"`
	// G709 OTN Traffic Multiplier
	TrafficMultiplier uint32 `protobuf:"varint,3,opt,name=traffic_multiplier,json=trafficMultiplier" json:"traffic_multiplier,omitempty"`
	// G709 OTN Traffic Bit Rate
	TrafficBitRate       uint64   `protobuf:"varint,4,opt,name=traffic_bit_rate,json=trafficBitRate" json:"traffic_bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTspecG709Otn) Reset()         { *m = RsvpMgmtTspecG709Otn{} }
func (m *RsvpMgmtTspecG709Otn) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTspecG709Otn) ProtoMessage()    {}
func (*RsvpMgmtTspecG709Otn) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{19}
}
func (m *RsvpMgmtTspecG709Otn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Unmarshal(m, b)
}
func (m *RsvpMgmtTspecG709Otn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtTspecG709Otn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTspecG709Otn.Merge(dst, src)
}
func (m *RsvpMgmtTspecG709Otn) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Size(m)
}
func (m *RsvpMgmtTspecG709Otn) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTspecG709Otn.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTspecG709Otn proto.InternalMessageInfo

func (m *RsvpMgmtTspecG709Otn) GetTrafficSignalType() uint32 {
	if m != nil {
		return m.TrafficSignalType
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficNvc() uint32 {
	if m != nil {
		return m.TrafficNvc
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficMultiplier() uint32 {
	if m != nil {
		return m.TrafficMultiplier
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficBitRate() uint64 {
	if m != nil {
		return m.TrafficBitRate
	}
	return 0
}

// Union of different RSVP Generic Sender Tspec types
type RsvpMgmtGenTrafficSpec struct {
	TspecType string `protobuf:"bytes,1,opt,name=tspec_type,json=tspecType" json:"tspec_type,omitempty"`
	// G709 OTN Sender Tspec
	G709OtnTspec *RsvpMgmtTspecG709Otn `protobuf:"bytes,2,opt,name=g709_otn_tspec,json=g709OtnTspec" json:"g709_otn_tspec,omitempty"`
	// Integrated Services Sender Tspec
	IntsrvTspec          *RsvpMgmtTrafficSpec `protobuf:"bytes,3,opt,name=intsrv_tspec,json=intsrvTspec" json:"intsrv_tspec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RsvpMgmtGenTrafficSpec) Reset()         { *m = RsvpMgmtGenTrafficSpec{} }
func (m *RsvpMgmtGenTrafficSpec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGenTrafficSpec) ProtoMessage()    {}
func (*RsvpMgmtGenTrafficSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{20}
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Unmarshal(m, b)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtGenTrafficSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGenTrafficSpec.Merge(dst, src)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Size(m)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGenTrafficSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGenTrafficSpec proto.InternalMessageInfo

func (m *RsvpMgmtGenTrafficSpec) GetTspecType() string {
	if m != nil {
		return m.TspecType
	}
	return ""
}

func (m *RsvpMgmtGenTrafficSpec) GetG709OtnTspec() *RsvpMgmtTspecG709Otn {
	if m != nil {
		return m.G709OtnTspec
	}
	return nil
}

func (m *RsvpMgmtGenTrafficSpec) GetIntsrvTspec() *RsvpMgmtTrafficSpec {
	if m != nil {
		return m.IntsrvTspec
	}
	return nil
}

// RSVP Path Flags
type RsvpMgmtPathFlags struct {
	// Non-RSVP Hop Upstream
	IsNonRsvpHopUpstream bool `protobuf:"varint,1,opt,name=is_non_rsvp_hop_upstream,json=isNonRsvpHopUpstream" json:"is_non_rsvp_hop_upstream,omitempty"`
	// Local Sender
	IsLocalSender bool `protobuf:"varint,2,opt,name=is_local_sender,json=isLocalSender" json:"is_local_sender,omitempty"`
	// MessageID Valid
	IsMessageIdValid bool `protobuf:"varint,3,opt,name=is_message_id_valid,json=isMessageIdValid" json:"is_message_id_valid,omitempty"`
	// Rerouted
	IsLocalRepair bool `protobuf:"varint,4,opt,name=is_local_repair,json=isLocalRepair" json:"is_local_repair,omitempty"`
	// Bidirectional
	IsBidirectional bool `protobuf:"varint,5,opt,name=is_bidirectional,json=isBidirectional" json:"is_bidirectional,omitempty"`
	// Locked Out
	IsLockout            bool     `protobuf:"varint,6,opt,name=is_lockout,json=isLockout" json:"is_lockout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPathFlags) Reset()         { *m = RsvpMgmtPathFlags{} }
func (m *RsvpMgmtPathFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPathFlags) ProtoMessage()    {}
func (*RsvpMgmtPathFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{21}
}
func (m *RsvpMgmtPathFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPathFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtPathFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPathFlags.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtPathFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPathFlags.Merge(dst, src)
}
func (m *RsvpMgmtPathFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPathFlags.Size(m)
}
func (m *RsvpMgmtPathFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPathFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPathFlags proto.InternalMessageInfo

func (m *RsvpMgmtPathFlags) GetIsNonRsvpHopUpstream() bool {
	if m != nil {
		return m.IsNonRsvpHopUpstream
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsLocalSender() bool {
	if m != nil {
		return m.IsLocalSender
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsMessageIdValid() bool {
	if m != nil {
		return m.IsMessageIdValid
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsLocalRepair() bool {
	if m != nil {
		return m.IsLocalRepair
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsBidirectional() bool {
	if m != nil {
		return m.IsBidirectional
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsLockout() bool {
	if m != nil {
		return m.IsLockout
	}
	return false
}

// RSVP Session Attribute Flags
type RsvpMgmtSessionAttributeFlags struct {
	// Local Protection
	IsLocalProtect bool `protobuf:"varint,1,opt,name=is_local_protect,json=isLocalProtect" json:"is_local_protect,omitempty"`
	// Node Protection
	IsNodeProtect bool `protobuf:"varint,2,opt,name=is_node_protect,json=isNodeProtect" json:"is_node_protect,omitempty"`
	// Bandwidth Protection
	IsBandwidthProtect bool `protobuf:"varint,3,opt,name=is_bandwidth_protect,json=isBandwidthProtect" json:"is_bandwidth_protect,omitempty"`
	// Records Labels
	IsRecordLabels bool `protobuf:"varint,4,opt,name=is_record_labels,json=isRecordLabels" json:"is_record_labels,omitempty"`
	// Shared Explicit Requested
	IsSharedExplicitRequested bool     `protobuf:"varint,5,opt,name=is_shared_explicit_requested,json=isSharedExplicitRequested" json:"is_shared_explicit_requested,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RsvpMgmtSessionAttributeFlags) Reset()         { *m = RsvpMgmtSessionAttributeFlags{} }
func (m *RsvpMgmtSessionAttributeFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionAttributeFlags) ProtoMessage()    {}
func (*RsvpMgmtSessionAttributeFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{22}
}
func (m *RsvpMgmtSessionAttributeFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionAttributeFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionAttributeFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionAttributeFlags.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionAttributeFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionAttributeFlags.Merge(dst, src)
}
func (m *RsvpMgmtSessionAttributeFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionAttributeFlags.Size(m)
}
func (m *RsvpMgmtSessionAttributeFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionAttributeFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionAttributeFlags proto.InternalMessageInfo

func (m *RsvpMgmtSessionAttributeFlags) GetIsLocalProtect() bool {
	if m != nil {
		return m.IsLocalProtect
	}
	return false
}

func (m *RsvpMgmtSessionAttributeFlags) GetIsNodeProtect() bool {
	if m != nil {
		return m.IsNodeProtect
	}
	return false
}

func (m *RsvpMgmtSessionAttributeFlags) GetIsBandwidthProtect() bool {
	if m != nil {
		return m.IsBandwidthProtect
	}
	return false
}

func (m *RsvpMgmtSessionAttributeFlags) GetIsRecordLabels() bool {
	if m != nil {
		return m.IsRecordLabels
	}
	return false
}

func (m *RsvpMgmtSessionAttributeFlags) GetIsSharedExplicitRequested() bool {
	if m != nil {
		return m.IsSharedExplicitRequested
	}
	return false
}

// RSVP Session Attributes
type RsvpMgmtSessionAttribute struct {
	// Setup Priority
	SetupPriority uint32 `protobuf:"varint,1,opt,name=setup_priority,json=setupPriority" json:"setup_priority,omitempty"`
	// Reservation Priority
	ReservationPriority uint32 `protobuf:"varint,2,opt,name=reservation_priority,json=reservationPriority" json:"reservation_priority,omitempty"`
	// Session Attributes
	SessAttributeFlags   *RsvpMgmtSessionAttributeFlags `protobuf:"bytes,3,opt,name=sess_attribute_flags,json=sessAttributeFlags" json:"sess_attribute_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RsvpMgmtSessionAttribute) Reset()         { *m = RsvpMgmtSessionAttribute{} }
func (m *RsvpMgmtSessionAttribute) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionAttribute) ProtoMessage()    {}
func (*RsvpMgmtSessionAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{23}
}
func (m *RsvpMgmtSessionAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionAttribute.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionAttribute.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtSessionAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionAttribute.Merge(dst, src)
}
func (m *RsvpMgmtSessionAttribute) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionAttribute.Size(m)
}
func (m *RsvpMgmtSessionAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionAttribute proto.InternalMessageInfo

func (m *RsvpMgmtSessionAttribute) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *RsvpMgmtSessionAttribute) GetReservationPriority() uint32 {
	if m != nil {
		return m.ReservationPriority
	}
	return 0
}

func (m *RsvpMgmtSessionAttribute) GetSessAttributeFlags() *RsvpMgmtSessionAttributeFlags {
	if m != nil {
		return m.SessAttributeFlags
	}
	return nil
}

// RSVP/IP Header Info
type RsvpMgmtHeaderInfo struct {
	// RSVP Version
	RsvpVersion uint32 `protobuf:"varint,1,opt,name=rsvp_version,json=rsvpVersion" json:"rsvp_version,omitempty"`
	// RSVP Header Flags (defined in RFC2205 Section 3.1.1)
	RsvpHeaderFlags uint32 `protobuf:"varint,2,opt,name=rsvp_header_flags,json=rsvpHeaderFlags" json:"rsvp_header_flags,omitempty"`
	// RSVP TTL
	RsvpTtl uint32 `protobuf:"varint,3,opt,name=rsvp_ttl,json=rsvpTtl" json:"rsvp_ttl,omitempty"`
	// RSVP Message Type
	RsvpMessageType uint32 `protobuf:"varint,4,opt,name=rsvp_message_type,json=rsvpMessageType" json:"rsvp_message_type,omitempty"`
	// IP Type of Service
	IpTos uint32 `protobuf:"varint,5,opt,name=ip_tos,json=ipTos" json:"ip_tos,omitempty"`
	// IP TTL
	IpTtl uint32 `protobuf:"varint,6,opt,name=ip_ttl,json=ipTtl" json:"ip_ttl,omitempty"`
	// IP Source Address
	IpSourceAddress      string   `protobuf:"bytes,7,opt,name=ip_source_address,json=ipSourceAddress" json:"ip_source_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtHeaderInfo) Reset()         { *m = RsvpMgmtHeaderInfo{} }
func (m *RsvpMgmtHeaderInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtHeaderInfo) ProtoMessage()    {}
func (*RsvpMgmtHeaderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{24}
}
func (m *RsvpMgmtHeaderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtHeaderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtHeaderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtHeaderInfo.Merge(dst, src)
}
func (m *RsvpMgmtHeaderInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Size(m)
}
func (m *RsvpMgmtHeaderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtHeaderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtHeaderInfo proto.InternalMessageInfo

func (m *RsvpMgmtHeaderInfo) GetRsvpVersion() uint32 {
	if m != nil {
		return m.RsvpVersion
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpHeaderFlags() uint32 {
	if m != nil {
		return m.RsvpHeaderFlags
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpTtl() uint32 {
	if m != nil {
		return m.RsvpTtl
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpMessageType() uint32 {
	if m != nil {
		return m.RsvpMessageType
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpTos() uint32 {
	if m != nil {
		return m.IpTos
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpTtl() uint32 {
	if m != nil {
		return m.IpTtl
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpSourceAddress() string {
	if m != nil {
		return m.IpSourceAddress
	}
	return ""
}

// RSVP Path Forwarding Context
type RsvpPathForwardingContext struct {
	// Output interface
	OutputInterface string `protobuf:"bytes,1,opt,name=output_interface,json=outputInterface" json:"output_interface,omitempty"`
	// Policy Flags
	PolicyFlags *RsvpMgmtPolicyFlags `protobuf:"bytes,2,opt,name=policy_flags,json=policyFlags" json:"policy_flags,omitempty"`
	// Policy Query Flags
	PolicyQueryFlags     *RsvpMgmtPolicyQueryFlags `protobuf:"bytes,3,opt,name=policy_query_flags,json=policyQueryFlags" json:"policy_query_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RsvpPathForwardingContext) Reset()         { *m = RsvpPathForwardingContext{} }
func (m *RsvpPathForwardingContext) String() string { return proto.CompactTextString(m) }
func (*RsvpPathForwardingContext) ProtoMessage()    {}
func (*RsvpPathForwardingContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{25}
}
func (m *RsvpPathForwardingContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpPathForwardingContext.Unmarshal(m, b)
}
func (m *RsvpPathForwardingContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpPathForwardingContext.Marshal(b, m, deterministic)
}
func (dst *RsvpPathForwardingContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpPathForwardingContext.Merge(dst, src)
}
func (m *RsvpPathForwardingContext) XXX_Size() int {
	return xxx_messageInfo_RsvpPathForwardingContext.Size(m)
}
func (m *RsvpPathForwardingContext) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpPathForwardingContext.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpPathForwardingContext proto.InternalMessageInfo

func (m *RsvpPathForwardingContext) GetOutputInterface() string {
	if m != nil {
		return m.OutputInterface
	}
	return ""
}

func (m *RsvpPathForwardingContext) GetPolicyFlags() *RsvpMgmtPolicyFlags {
	if m != nil {
		return m.PolicyFlags
	}
	return nil
}

func (m *RsvpPathForwardingContext) GetPolicyQueryFlags() *RsvpMgmtPolicyQueryFlags {
	if m != nil {
		return m.PolicyQueryFlags
	}
	return nil
}

// RSVP Generalized Label
type RsvpMgmtGeneralizedLabel struct {
	// Generalized Label Value
	Value                []uint32 `protobuf:"varint,1,rep,packed,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtGeneralizedLabel) Reset()         { *m = RsvpMgmtGeneralizedLabel{} }
func (m *RsvpMgmtGeneralizedLabel) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGeneralizedLabel) ProtoMessage()    {}
func (*RsvpMgmtGeneralizedLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{26}
}
func (m *RsvpMgmtGeneralizedLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGeneralizedLabel.Unmarshal(m, b)
}
func (m *RsvpMgmtGeneralizedLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGeneralizedLabel.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtGeneralizedLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGeneralizedLabel.Merge(dst, src)
}
func (m *RsvpMgmtGeneralizedLabel) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGeneralizedLabel.Size(m)
}
func (m *RsvpMgmtGeneralizedLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGeneralizedLabel.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGeneralizedLabel proto.InternalMessageInfo

func (m *RsvpMgmtGeneralizedLabel) GetValue() []uint32 {
	if m != nil {
		return m.Value
	}
	return nil
}

// Union of different RSVP Generic Label types
type RsvpMgmtGenericLabel struct {
	GenericLabelType string `protobuf:"bytes,1,opt,name=generic_label_type,json=genericLabelType" json:"generic_label_type,omitempty"`
	// Generalized Label
	GeneralizedLabel     *RsvpMgmtGeneralizedLabel `protobuf:"bytes,2,opt,name=generalized_label,json=generalizedLabel" json:"generalized_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RsvpMgmtGenericLabel) Reset()         { *m = RsvpMgmtGenericLabel{} }
func (m *RsvpMgmtGenericLabel) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGenericLabel) ProtoMessage()    {}
func (*RsvpMgmtGenericLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{27}
}
func (m *RsvpMgmtGenericLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGenericLabel.Unmarshal(m, b)
}
func (m *RsvpMgmtGenericLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGenericLabel.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtGenericLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGenericLabel.Merge(dst, src)
}
func (m *RsvpMgmtGenericLabel) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGenericLabel.Size(m)
}
func (m *RsvpMgmtGenericLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGenericLabel.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGenericLabel proto.InternalMessageInfo

func (m *RsvpMgmtGenericLabel) GetGenericLabelType() string {
	if m != nil {
		return m.GenericLabelType
	}
	return ""
}

func (m *RsvpMgmtGenericLabel) GetGeneralizedLabel() *RsvpMgmtGeneralizedLabel {
	if m != nil {
		return m.GeneralizedLabel
	}
	return nil
}

// Label Information
type RsvpMgmtLabelInfo struct {
	// Is the label information valid
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid" json:"is_valid,omitempty"`
	// Local Downstream Label
	LocalDownstreamLabel uint32 `protobuf:"varint,2,opt,name=local_downstream_label,json=localDownstreamLabel" json:"local_downstream_label,omitempty"`
	// Generic Local Downstream Label
	GenericLocalDownstreamLabel *RsvpMgmtGenericLabel `protobuf:"bytes,3,opt,name=generic_local_downstream_label,json=genericLocalDownstreamLabel" json:"generic_local_downstream_label,omitempty"`
	// Outgoing Downstream Label
	OutgoingDownstreamLabel uint32 `protobuf:"varint,4,opt,name=outgoing_downstream_label,json=outgoingDownstreamLabel" json:"outgoing_downstream_label,omitempty"`
	// Generic Outgoing Downstream Label
	GenericOutgoingDownstreamLabel *RsvpMgmtGenericLabel `protobuf:"bytes,5,opt,name=generic_outgoing_downstream_label,json=genericOutgoingDownstreamLabel" json:"generic_outgoing_downstream_label,omitempty"`
	// MergePoint Label
	MergePointLabel uint32 `protobuf:"varint,6,opt,name=merge_point_label,json=mergePointLabel" json:"merge_point_label,omitempty"`
	// Generic MergePoint Label
	GenericMergePointLabel *RsvpMgmtGenericLabel `protobuf:"bytes,7,opt,name=generic_merge_point_label,json=genericMergePointLabel" json:"generic_merge_point_label,omitempty"`
	// Outgoing Upstream Label
	OutgoingUpstreamLabel uint32 `protobuf:"varint,8,opt,name=outgoing_upstream_label,json=outgoingUpstreamLabel" json:"outgoing_upstream_label,omitempty"`
	// Generic Outgoing Upstream Label
	GenericOutgoingUpstreamLabel *RsvpMgmtGenericLabel `protobuf:"bytes,9,opt,name=generic_outgoing_upstream_label,json=genericOutgoingUpstreamLabel" json:"generic_outgoing_upstream_label,omitempty"`
	// Local Upstream Label
	LocalUpstreamLabel uint32 `protobuf:"varint,10,opt,name=local_upstream_label,json=localUpstreamLabel" json:"local_upstream_label,omitempty"`
	// Generic Local Upstream Label
	GenericLocalUpstreamLabel *RsvpMgmtGenericLabel `protobuf:"bytes,11,opt,name=generic_local_upstream_label,json=genericLocalUpstreamLabel" json:"generic_local_upstream_label,omitempty"`
	// Recovery Label
	RecoveryLabel uint32 `protobuf:"varint,12,opt,name=recovery_label,json=recoveryLabel" json:"recovery_label,omitempty"`
	// LSP Wrap Label
	LspWrapLabel uint32 `protobuf:"varint,13,opt,name=lsp_wrap_label,json=lspWrapLabel" json:"lsp_wrap_label,omitempty"`
	// Generic Recovery Label
	GenericRecoveryLabel *RsvpMgmtGenericLabel `protobuf:"bytes,14,opt,name=generic_recovery_label,json=genericRecoveryLabel" json:"generic_recovery_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RsvpMgmtLabelInfo) Reset()         { *m = RsvpMgmtLabelInfo{} }
func (m *RsvpMgmtLabelInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtLabelInfo) ProtoMessage()    {}
func (*RsvpMgmtLabelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{28}
}
func (m *RsvpMgmtLabelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtLabelInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtLabelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtLabelInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtLabelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtLabelInfo.Merge(dst, src)
}
func (m *RsvpMgmtLabelInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtLabelInfo.Size(m)
}
func (m *RsvpMgmtLabelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtLabelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtLabelInfo proto.InternalMessageInfo

func (m *RsvpMgmtLabelInfo) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *RsvpMgmtLabelInfo) GetLocalDownstreamLabel() uint32 {
	if m != nil {
		return m.LocalDownstreamLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericLocalDownstreamLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericLocalDownstreamLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetOutgoingDownstreamLabel() uint32 {
	if m != nil {
		return m.OutgoingDownstreamLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericOutgoingDownstreamLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericOutgoingDownstreamLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetMergePointLabel() uint32 {
	if m != nil {
		return m.MergePointLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericMergePointLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericMergePointLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetOutgoingUpstreamLabel() uint32 {
	if m != nil {
		return m.OutgoingUpstreamLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericOutgoingUpstreamLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericOutgoingUpstreamLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetLocalUpstreamLabel() uint32 {
	if m != nil {
		return m.LocalUpstreamLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericLocalUpstreamLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericLocalUpstreamLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetRecoveryLabel() uint32 {
	if m != nil {
		return m.RecoveryLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetLspWrapLabel() uint32 {
	if m != nil {
		return m.LspWrapLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericRecoveryLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericRecoveryLabel
	}
	return nil
}

// Class-Type Information
type RsvpMgmtCtInfo struct {
	// Is the Class-Type information valid
	IsClassTypeInfoValid bool `protobuf:"varint,1,opt,name=is_class_type_info_valid,json=isClassTypeInfoValid" json:"is_class_type_info_valid,omitempty"`
	// DS-TE Class-Type
	ClassType            uint32   `protobuf:"varint,2,opt,name=class_type,json=classType" json:"class_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtCtInfo) Reset()         { *m = RsvpMgmtCtInfo{} }
func (m *RsvpMgmtCtInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtCtInfo) ProtoMessage()    {}
func (*RsvpMgmtCtInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{29}
}
func (m *RsvpMgmtCtInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtCtInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtCtInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtCtInfo.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtCtInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtCtInfo.Merge(dst, src)
}
func (m *RsvpMgmtCtInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtCtInfo.Size(m)
}
func (m *RsvpMgmtCtInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtCtInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtCtInfo proto.InternalMessageInfo

func (m *RsvpMgmtCtInfo) GetIsClassTypeInfoValid() bool {
	if m != nil {
		return m.IsClassTypeInfoValid
	}
	return false
}

func (m *RsvpMgmtCtInfo) GetClassType() uint32 {
	if m != nil {
		return m.ClassType
	}
	return 0
}

// RSVP ERO IPV4 subobject
type RsvpMgmtEroIpv4Subobj struct {
	// ERO Entry Is Strict
	IsStrictRoute bool `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute" json:"is_strict_route,omitempty"`
	// The ERO IPV4 Address
	EroAddress string `protobuf:"bytes,2,opt,name=ero_address,json=eroAddress" json:"ero_address,omitempty"`
	// ERO Prefix Length
	PrefixLength         uint32   `protobuf:"varint,3,opt,name=prefix_length,json=prefixLength" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroIpv4Subobj) Reset()         { *m = RsvpMgmtEroIpv4Subobj{} }
func (m *RsvpMgmtEroIpv4Subobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroIpv4Subobj) ProtoMessage()    {}
func (*RsvpMgmtEroIpv4Subobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{30}
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtEroIpv4Subobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Merge(dst, src)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Size(m)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroIpv4Subobj proto.InternalMessageInfo

func (m *RsvpMgmtEroIpv4Subobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroIpv4Subobj) GetEroAddress() string {
	if m != nil {
		return m.EroAddress
	}
	return ""
}

func (m *RsvpMgmtEroIpv4Subobj) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

// RSVP ERO UNNUM subobject
type RsvpMgmtEroUnnumSubobj struct {
	// ERO Entry Is Strict
	IsStrictRoute bool `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute" json:"is_strict_route,omitempty"`
	// The Interface ID in ERO
	EroInterfaceId uint32 `protobuf:"varint,2,opt,name=ero_interface_id,json=eroInterfaceId" json:"ero_interface_id,omitempty"`
	// The Router ID in ERO
	EroRouterId string `protobuf:"bytes,3,opt,name=ero_router_id,json=eroRouterId" json:"ero_router_id,omitempty"`
	// Status of ERO
	Status               string   `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroUnnumSubobj) Reset()         { *m = RsvpMgmtEroUnnumSubobj{} }
func (m *RsvpMgmtEroUnnumSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroUnnumSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroUnnumSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{31}
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtEroUnnumSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Merge(dst, src)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Size(m)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroUnnumSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroUnnumSubobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroInterfaceId() uint32 {
	if m != nil {
		return m.EroInterfaceId
	}
	return 0
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroRouterId() string {
	if m != nil {
		return m.EroRouterId
	}
	return ""
}

func (m *RsvpMgmtEroUnnumSubobj) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// Union of the different RSVP ERO types
type RsvpMgmtEroSubobj struct {
	EroType string `protobuf:"bytes,1,opt,name=ero_type,json=eroType" json:"ero_type,omitempty"`
	// IPV4 ERO Sub Object
	Ipv4EroSubObject *RsvpMgmtEroIpv4Subobj `protobuf:"bytes,2,opt,name=ipv4_ero_sub_object,json=ipv4EroSubObject" json:"ipv4_ero_sub_object,omitempty"`
	// Unnumbered ERO Sub Object
	UnnumberedEroSubObject *RsvpMgmtEroUnnumSubobj `protobuf:"bytes,3,opt,name=unnumbered_ero_sub_object,json=unnumberedEroSubObject" json:"unnumbered_ero_sub_object,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *RsvpMgmtEroSubobj) Reset()         { *m = RsvpMgmtEroSubobj{} }
func (m *RsvpMgmtEroSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a, []int{32}
}
func (m *RsvpMgmtEroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Marshal(b, m, deterministic)
}
func (dst *RsvpMgmtEroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroSubobj.Merge(dst, src)
}
func (m *RsvpMgmtEroSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Size(m)
}
func (m *RsvpMgmtEroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroSubobj) GetEroType() string {
	if m != nil {
		return m.EroType
	}
	return ""
}

func (m *RsvpMgmtEroSubobj) GetIpv4EroSubObject() *RsvpMgmtEroIpv4Subobj {
	if m != nil {
		return m.Ipv4EroSubObject
	}
	return nil
}

func (m *RsvpMgmtEroSubobj) GetUnnumberedEroSubObject() *RsvpMgmtEroUnnumSubobj {
	if m != nil {
		return m.UnnumberedEroSubObject
	}
	return nil
}

func init() {
	proto.RegisterType((*RsvpMgmtPathDetail_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_path_detail_KEYS")
	proto.RegisterType((*RsvpMgmtPathDetail)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_path_detail")
	proto.RegisterType((*RsvpMgmtS2LSubLspIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_s2l_sub_lsp_ipv4")
	proto.RegisterType((*RsvpMgmtFilterIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_filter_ipv4")
	proto.RegisterType((*RsvpMgmtFilterP2MpIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_filter_p2mp_ipv4")
	proto.RegisterType((*RsvpFilterUnion)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_filter_union")
	proto.RegisterType((*RsvpMgmtFilterInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_filter_info")
	proto.RegisterType((*RsvpMgmtSessionUdpIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_udp_ipv4")
	proto.RegisterType((*RsvpMgmtSessionLspTunnelIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_lsp_tunnel_ipv4")
	proto.RegisterType((*RsvpMgmtSessionUniIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_uni_ipv4")
	proto.RegisterType((*RsvpMgmtSessionP2MpLspTunnelIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_p2mp_lsp_tunnel_ipv4")
	proto.RegisterType((*RsvpSessionUnion)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_session_union")
	proto.RegisterType((*RsvpMgmtSessionInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_info")
	proto.RegisterType((*RsvpMgmtPolicySources)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_policy_sources")
	proto.RegisterType((*RsvpMgmtPolicyFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_policy_flags")
	proto.RegisterType((*RsvpMgmtPolicyQueryFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_policy_query_flags")
	proto.RegisterType((*RsvpMgmtTimespec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_timespec")
	proto.RegisterType((*RsvpMgmtHopInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_hop_info")
	proto.RegisterType((*RsvpMgmtTrafficSpec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_traffic_spec")
	proto.RegisterType((*RsvpMgmtTspecG709Otn)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_tspec_g709_otn")
	proto.RegisterType((*RsvpMgmtGenTrafficSpec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_gen_traffic_spec")
	proto.RegisterType((*RsvpMgmtPathFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_path_flags")
	proto.RegisterType((*RsvpMgmtSessionAttributeFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_attribute_flags")
	proto.RegisterType((*RsvpMgmtSessionAttribute)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_attribute")
	proto.RegisterType((*RsvpMgmtHeaderInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_header_info")
	proto.RegisterType((*RsvpPathForwardingContext)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_path_forwarding_context")
	proto.RegisterType((*RsvpMgmtGeneralizedLabel)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_generalized_label")
	proto.RegisterType((*RsvpMgmtGenericLabel)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_generic_label")
	proto.RegisterType((*RsvpMgmtLabelInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_label_info")
	proto.RegisterType((*RsvpMgmtCtInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_ct_info")
	proto.RegisterType((*RsvpMgmtEroIpv4Subobj)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_ero_ipv4_subobj")
	proto.RegisterType((*RsvpMgmtEroUnnumSubobj)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_ero_unnum_subobj")
	proto.RegisterType((*RsvpMgmtEroSubobj)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_ero_subobj")
}

func init() {
	proto.RegisterFile("rsvp_mgmt_path_detail.proto", fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a)
}

var fileDescriptor_rsvp_mgmt_path_detail_1a557f4b112e751a = []byte{
	// 2879 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xdd, 0x6f, 0x24, 0x47,
	0x11, 0xd7, 0x78, 0x7d, 0xf6, 0xba, 0xfd, 0x79, 0x7d, 0xbe, 0xcb, 0x38, 0xb9, 0x70, 0x97, 0x09,
	0x49, 0x9c, 0x28, 0x39, 0x0e, 0xe7, 0x48, 0x48, 0xf8, 0x08, 0xf7, 0x99, 0x58, 0xf8, 0xee, 0xcc,
	0xd8, 0x97, 0x10, 0x20, 0x69, 0xcd, 0xce, 0xb4, 0xd7, 0x9d, 0x9b, 0x9d, 0xee, 0xeb, 0xee, 0xd9,
	0xb3, 0x51, 0x84, 0x14, 0x1e, 0x88, 0x42, 0x94, 0x10, 0x45, 0x04, 0x90, 0x10, 0x8a, 0x10, 0x82,
	0x07, 0x1e, 0xf8, 0x03, 0x90, 0xf2, 0x86, 0xf8, 0x0f, 0x10, 0x12, 0xef, 0xbc, 0xf2, 0xc8, 0x33,
	0xea, 0xea, 0xee, 0xd9, 0x99, 0xf5, 0x5e, 0x44, 0x60, 0x57, 0xf0, 0x62, 0x6d, 0x57, 0xd5, 0x54,
	0xfd, 0xba, 0xba, 0xbb, 0xba, 0xaa, 0xda, 0xe8, 0x01, 0xa9, 0xfa, 0x82, 0xf4, 0xba, 0x3d, 0x4d,
	0x44, 0xa2, 0xf7, 0x49, 0x46, 0x75, 0xc2, 0xf2, 0x73, 0x42, 0x72, 0xcd, 0xf1, 0xc5, 0x94, 0xa9,
	0x94, 0x13, 0xc6, 0x15, 0x39, 0x90, 0x84, 0x09, 0x02, 0xc2, 0x5c, 0x50, 0x79, 0x0e, 0x7e, 0x29,
	0x9d, 0x14, 0x59, 0xe7, 0xf0, 0x9c, 0x50, 0x1d, 0xf7, 0x21, 0xcd, 0x54, 0x63, 0x14, 0xfd, 0xa1,
	0x85, 0xee, 0x1f, 0x69, 0x82, 0x7c, 0xf3, 0xea, 0xab, 0x3b, 0xf8, 0x0b, 0xe8, 0x44, 0x46, 0x95,
	0x66, 0x45, 0xa2, 0x19, 0x2f, 0x48, 0x92, 0x65, 0x92, 0x2a, 0x15, 0x06, 0x67, 0x83, 0xf5, 0xb9,
	0x18, 0xd7, 0x58, 0x17, 0x2d, 0x07, 0x3f, 0x8e, 0x56, 0xea, 0x1f, 0x08, 0x2e, 0x75, 0x38, 0x75,
	0x36, 0x58, 0x5f, 0x8c, 0x97, 0x6b, 0xf4, 0x6d, 0x2e, 0x35, 0xbe, 0x1f, 0xb5, 0x61, 0x1a, 0x29,
	0xcf, 0xc3, 0x16, 0x88, 0x54, 0x63, 0xfc, 0x24, 0xc2, 0xf4, 0x40, 0xd3, 0x22, 0xa3, 0x19, 0xd1,
	0x65, 0x51, 0xd0, 0x9c, 0xb0, 0x2c, 0x9c, 0x06, 0xb3, 0x2b, 0x9e, 0xb3, 0x0b, 0x8c, 0xcd, 0x0c,
	0x3f, 0x84, 0x16, 0x14, 0x55, 0xca, 0x18, 0xd4, 0x87, 0x82, 0x86, 0xc7, 0x40, 0x6e, 0xde, 0xd1,
	0x76, 0x0f, 0x05, 0xc5, 0x21, 0x6a, 0x8b, 0x0d, 0xd2, 0x13, 0x46, 0xcd, 0x0c, 0x18, 0x9b, 0x11,
	0x1b, 0xd7, 0xc5, 0x66, 0x86, 0x1f, 0x41, 0x4b, 0x8a, 0x97, 0x32, 0xa5, 0xd5, 0xec, 0x66, 0xe1,
	0xf3, 0x45, 0x4b, 0xf5, 0x13, 0x3b, 0x83, 0xe6, 0x9d, 0x18, 0xcc, 0xa9, 0x0d, 0x3a, 0x90, 0x25,
	0xc1, 0x74, 0xd6, 0xd1, 0x8a, 0x2a, 0x3b, 0xa4, 0x2b, 0x79, 0x29, 0x08, 0x97, 0xac, 0xcb, 0x8a,
	0x70, 0x0e, 0x34, 0x2d, 0xa9, 0xb2, 0xf3, 0xa2, 0x21, 0xdf, 0x04, 0x2a, 0x3e, 0x8b, 0x16, 0x06,
	0x92, 0x2c, 0x0b, 0x91, 0xd3, 0xe5, 0xa4, 0x36, 0x33, 0xbc, 0x86, 0xda, 0x7d, 0xb9, 0x47, 0x8a,
	0xa4, 0x47, 0xc3, 0x79, 0xd0, 0x31, 0xdb, 0x97, 0x7b, 0x37, 0x92, 0x1e, 0x8d, 0xfe, 0x81, 0xd1,
	0xc9, 0x91, 0x0b, 0x86, 0x15, 0x9a, 0x75, 0x33, 0x0e, 0x37, 0xce, 0x06, 0xeb, 0xf3, 0x1b, 0xaf,
	0x9e, 0xfb, 0xaf, 0xf7, 0xc7, 0xb9, 0x81, 0x29, 0xef, 0x61, 0x56, 0xec, 0xf1, 0xd8, 0x5b, 0xc2,
	0x3f, 0x40, 0x0b, 0x6a, 0x83, 0xe4, 0xc4, 0x4c, 0x28, 0x57, 0x22, 0x7c, 0x1a, 0x2c, 0xbf, 0x36,
	0x5e, 0xcb, 0x1b, 0x95, 0x7e, 0xc2, 0x44, 0xff, 0x42, 0x3c, 0xa7, 0x36, 0xb6, 0x76, 0xca, 0xce,
	0x96, 0x12, 0x58, 0xa3, 0xb6, 0xa6, 0x3d, 0x91, 0x27, 0x9a, 0x86, 0x17, 0xc0, 0xf6, 0xb7, 0xc7,
	0x6a, 0x7b, 0x8f, 0xe5, 0x9a, 0x4a, 0x3b, 0xe9, 0xca, 0x12, 0x7e, 0x37, 0x40, 0xc7, 0xbd, 0x3f,
	0x12, 0xad, 0x25, 0xeb, 0x94, 0x9a, 0x86, 0x5f, 0x02, 0xfb, 0xaf, 0x4f, 0xc4, 0xeb, 0x95, 0x95,
	0x78, 0xc5, 0x91, 0x2e, 0x7a, 0x0a, 0x7e, 0x13, 0x2d, 0x68, 0x99, 0xec, 0xed, 0xb1, 0x94, 0x28,
	0x41, 0xd3, 0xf0, 0x99, 0x09, 0xac, 0x7e, 0xdd, 0x40, 0x3c, 0xef, 0x46, 0x3b, 0x82, 0xa6, 0xf8,
	0x27, 0x01, 0x5a, 0xed, 0xd2, 0x82, 0x4a, 0x96, 0x36, 0xa4, 0xc2, 0x67, 0x27, 0xb0, 0x15, 0xba,
	0xb4, 0x68, 0x42, 0xc1, 0xce, 0xf4, 0x6e, 0x0d, 0xd1, 0x63, 0x68, 0x99, 0x15, 0xa2, 0xd4, 0x84,
	0x15, 0x9a, 0xca, 0xbd, 0x24, 0xa5, 0xe1, 0x97, 0xed, 0x41, 0x04, 0xf2, 0xa6, 0xa7, 0xe2, 0x3e,
	0x42, 0x70, 0x80, 0xf6, 0xf2, 0xa4, 0xab, 0xc2, 0xe7, 0x00, 0xef, 0x2b, 0x63, 0xc5, 0x3b, 0x50,
	0x1f, 0xcf, 0x99, 0xdf, 0xd7, 0xcc, 0x4f, 0x13, 0xdd, 0x3a, 0x49, 0x7a, 0xbb, 0x14, 0x3e, 0xb6,
	0xc1, 0x41, 0x7f, 0xde, 0x46, 0x37, 0xcb, 0xb1, 0xb1, 0xcd, 0x9c, 0x78, 0xdc, 0x45, 0xad, 0x7d,
	0x2e, 0xc2, 0xaf, 0x00, 0xbc, 0x5b, 0x63, 0x85, 0xb7, 0xcf, 0x85, 0xdd, 0xda, 0xc6, 0x02, 0x7e,
	0x27, 0x40, 0x58, 0xf0, 0x9c, 0xa5, 0x87, 0xc4, 0x85, 0x3a, 0xc3, 0x0b, 0xbf, 0x0a, 0x86, 0xbf,
	0x3b, 0x5e, 0xbf, 0xd4, 0xcd, 0xa8, 0x78, 0xc5, 0x8e, 0x77, 0x60, 0xb8, 0x59, 0xec, 0x71, 0x2c,
	0xd0, 0xcc, 0x3e, 0x4d, 0x32, 0x2a, 0xc3, 0xaf, 0x4d, 0xe0, 0x54, 0x5b, 0xd5, 0x76, 0xea, 0xce,
	0x0e, 0xee, 0xa3, 0x79, 0x7a, 0x20, 0x98, 0x3c, 0x24, 0x9a, 0xf5, 0x68, 0xf8, 0xf5, 0x09, 0xb8,
	0xdb, 0x28, 0x86, 0x5d, 0x8b, 0xac, 0xa5, 0x5d, 0xd6, 0x83, 0xd3, 0xeb, 0xbc, 0x61, 0xb7, 0xe1,
	0x0b, 0x13, 0x38, 0xbd, 0x75, 0x03, 0xf1, 0xbc, 0x1d, 0xd9, 0xad, 0xf8, 0xde, 0x60, 0xcd, 0xef,
	0x94, 0x54, 0x7a, 0x10, 0xdf, 0x00, 0x10, 0x64, 0x12, 0x20, 0x6a, 0x66, 0xfc, 0xba, 0x7f, 0xcb,
	0x90, 0x2c, 0x9e, 0x3b, 0xa8, 0x25, 0xf6, 0xd2, 0xf0, 0xe2, 0xd9, 0xd6, 0x38, 0xed, 0xdb, 0x63,
	0xc8, 0xe5, 0xdd, 0x44, 0x66, 0xac, 0xe8, 0x92, 0x94, 0x17, 0x9a, 0x1e, 0xe8, 0xd8, 0xd8, 0x32,
	0x51, 0x20, 0x4f, 0x3a, 0x26, 0xc3, 0x30, 0xbb, 0xfd, 0xd2, 0x04, 0xa2, 0xc0, 0x40, 0x7d, 0x3c,
	0x07, 0xbf, 0x61, 0x8b, 0x2b, 0x84, 0xd2, 0x3c, 0x51, 0xca, 0xe6, 0x2c, 0x97, 0xc1, 0xee, 0xee,
	0x58, 0xed, 0xa6, 0xda, 0x19, 0x05, 0x3b, 0x90, 0x07, 0x3d, 0x82, 0x96, 0x99, 0x22, 0xac, 0x20,
	0x54, 0x72, 0xd2, 0x4f, 0x72, 0x96, 0x85, 0x57, 0xce, 0x06, 0xeb, 0xed, 0x78, 0x81, 0xa9, 0xcd,
	0xe2, 0xaa, 0xe4, 0x2f, 0x1b, 0x1a, 0x2e, 0xd0, 0x8c, 0x95, 0x09, 0xaf, 0xc2, 0x4a, 0x8c, 0xd7,
	0x1f, 0xc6, 0xb6, 0x2a, 0x3b, 0xbc, 0xf3, 0x46, 0x7c, 0x8c, 0x19, 0xa3, 0xf8, 0x31, 0xb4, 0xc2,
	0x14, 0xe1, 0xa5, 0xae, 0xe1, 0xba, 0x06, 0xb8, 0x16, 0x99, 0xba, 0x59, 0xea, 0x0a, 0x98, 0x40,
	0xb3, 0x4e, 0x2a, 0x7c, 0x71, 0xb2, 0xc8, 0x66, 0x38, 0x98, 0x8d, 0x6e, 0xd5, 0x13, 0xe4, 0xe1,
	0x54, 0x04, 0x3f, 0x8b, 0x42, 0xc8, 0x7f, 0xee, 0x9d, 0x25, 0x9f, 0x54, 0x1b, 0x5b, 0x57, 0x8e,
	0x24, 0xca, 0x11, 0xa9, 0xa7, 0x71, 0x3e, 0xcb, 0x30, 0x1a, 0x8f, 0xe6, 0xa3, 0xc1, 0xbf, 0x91,
	0x8f, 0x4e, 0x0d, 0xe7, 0xa3, 0xd1, 0x1f, 0x83, 0x3a, 0x70, 0x67, 0x41, 0x6c, 0xf4, 0xc4, 0x58,
	0xcd, 0xe0, 0x0d, 0x74, 0xca, 0x26, 0xd6, 0x47, 0x92, 0xdf, 0x96, 0x2d, 0x12, 0x4c, 0x9a, 0xbd,
	0xf3, 0xe9, 0x09, 0xf0, 0xf4, 0x70, 0x02, 0x1c, 0xfd, 0x79, 0x0a, 0x1d, 0x07, 0xf0, 0x0e, 0x77,
	0x59, 0x98, 0x64, 0xf3, 0x0c, 0x9a, 0x77, 0x63, 0x38, 0x32, 0x16, 0x30, 0xb2, 0x24, 0xd8, 0xdd,
	0x3f, 0x0c, 0xd0, 0x4a, 0x99, 0xd9, 0x19, 0xfa, 0xd4, 0x09, 0x30, 0x4f, 0x2a, 0x2d, 0x34, 0xd9,
	0xe8, 0x52, 0x99, 0x89, 0x4d, 0xd1, 0xbf, 0xb0, 0xe3, 0x52, 0xe2, 0x1f, 0x9b, 0x90, 0x6a, 0x6b,
	0x8d, 0x3a, 0x8c, 0xd6, 0x04, 0xd2, 0xa1, 0xe1, 0x55, 0x8d, 0x97, 0xa1, 0xa8, 0x19, 0x80, 0x89,
	0xde, 0x0f, 0x46, 0xed, 0x33, 0x13, 0x7e, 0x4a, 0x34, 0x5f, 0xf3, 0x30, 0x38, 0x73, 0x8c, 0xf1,
	0xa7, 0xbe, 0x6e, 0x31, 0x32, 0xa4, 0x6b, 0x40, 0x89, 0x7e, 0xda, 0xd8, 0x96, 0x3e, 0xbd, 0xf5,
	0x8b, 0xf6, 0xd9, 0x0b, 0xce, 0x7a, 0x15, 0x39, 0x35, 0x54, 0x45, 0x8e, 0x2a, 0x46, 0x5b, 0x23,
	0x8b, 0xd1, 0xe8, 0xe3, 0x00, 0x3d, 0x74, 0x14, 0x96, 0x39, 0xe6, 0xbe, 0xfc, 0xfc, 0x8f, 0xd0,
	0x3d, 0x80, 0xe6, 0x06, 0xe5, 0xab, 0x83, 0xa7, 0x7d, 0xd9, 0x3a, 0xba, 0xc8, 0x6d, 0x8d, 0x2e,
	0x72, 0xa3, 0x8f, 0x46, 0x3b, 0xae, 0x60, 0x93, 0x80, 0xf6, 0x38, 0xaa, 0x00, 0x54, 0xaa, 0x2c,
	0xb0, 0x65, 0x4f, 0xf7, 0x81, 0xec, 0xbd, 0x00, 0x3d, 0x7a, 0x14, 0x17, 0x6c, 0xc9, 0x61, 0xf7,
	0xd5, 0x8b, 0xf0, 0xa0, 0x51, 0x84, 0x8f, 0xd1, 0x4f, 0x7f, 0x9f, 0x46, 0xd8, 0x6e, 0xd5, 0x81,
	0x8b, 0x78, 0x71, 0xa4, 0x47, 0x10, 0x1c, 0xed, 0x11, 0xdc, 0x41, 0xd3, 0x06, 0xa6, 0x0b, 0x18,
	0xaf, 0x4d, 0xa4, 0x8e, 0xf3, 0x1b, 0x3d, 0x06, 0x53, 0xf8, 0xfd, 0x00, 0xad, 0x40, 0x94, 0x30,
	0xae, 0x6a, 0x46, 0x8a, 0x6c, 0x22, 0xf6, 0x87, 0x96, 0x24, 0x5e, 0x32, 0x7f, 0xb7, 0x94, 0xf0,
	0xc1, 0xeb, 0x6d, 0x0f, 0xc8, 0x6c, 0x2c, 0x0f, 0x68, 0x7a, 0x92, 0x0e, 0x71, 0x1b, 0xd8, 0x22,
	0xb9, 0x55, 0x30, 0x8f, 0xe4, 0x57, 0x01, 0x3a, 0x05, 0x48, 0xec, 0x96, 0xa9, 0x3b, 0xe8, 0x18,
	0xe0, 0x61, 0x13, 0xc1, 0x33, 0x6a, 0xe3, 0xc6, 0xd8, 0xfc, 0xdd, 0xde, 0xb8, 0x2e, 0x06, 0x9e,
	0x8a, 0x3e, 0x0c, 0xd0, 0xa9, 0xd1, 0xdd, 0x11, 0x7c, 0x80, 0x16, 0xea, 0x3b, 0xd0, 0xc5, 0xd6,
	0xb1, 0xd5, 0x12, 0x8d, 0x8d, 0x1d, 0x43, 0x14, 0xf7, 0xa0, 0x7e, 0x17, 0xa0, 0xf0, 0x5e, 0x55,
	0x16, 0x3e, 0x8d, 0x10, 0x53, 0x44, 0x53, 0x92, 0xb3, 0xe2, 0x36, 0x80, 0x6a, 0xc7, 0x6d, 0xa6,
	0x76, 0xe9, 0x16, 0x2b, 0x6e, 0xe3, 0x35, 0xd4, 0x66, 0x8a, 0xe4, 0x3c, 0x4d, 0x6c, 0x20, 0x6d,
	0xc7, 0xb3, 0x4c, 0x6d, 0x99, 0x21, 0xbe, 0x0f, 0xcd, 0x32, 0x45, 0x52, 0x2e, 0x6c, 0x10, 0x68,
	0xc7, 0x33, 0x4c, 0x5d, 0xe6, 0x42, 0xe1, 0x07, 0x41, 0x63, 0x46, 0xf7, 0x92, 0x32, 0xd7, 0xb0,
	0x4d, 0xda, 0xf1, 0x1c, 0x53, 0x57, 0x2c, 0xc1, 0xa9, 0x4c, 0x93, 0x4e, 0x6e, 0x7b, 0x72, 0xa0,
	0xf2, 0xb2, 0x19, 0x46, 0x6f, 0x35, 0xbc, 0x57, 0xaf, 0x4f, 0xcc, 0x2d, 0xcf, 0x14, 0x49, 0xd2,
	0x94, 0x0a, 0x4d, 0x33, 0x87, 0x13, 0x31, 0x75, 0xd1, 0x51, 0xcc, 0x51, 0x86, 0x1c, 0x56, 0xe9,
	0x24, 0xcf, 0x69, 0xe6, 0xd0, 0xce, 0x9b, 0x04, 0xd6, 0x91, 0xf0, 0xc3, 0x68, 0x91, 0xa9, 0x5a,
	0xc6, 0xef, 0x70, 0x2f, 0x30, 0x75, 0xad, 0xa2, 0x45, 0xbf, 0x09, 0xd0, 0xe9, 0x4f, 0x2b, 0x4f,
	0x4c, 0x54, 0x62, 0x8a, 0x14, 0x94, 0x66, 0x15, 0x8e, 0x36, 0x53, 0x37, 0x60, 0x6c, 0xa2, 0x12,
	0x53, 0x44, 0x52, 0x73, 0xab, 0x10, 0x49, 0xef, 0x94, 0x4c, 0x56, 0x58, 0x56, 0x98, 0x8a, 0x81,
	0x11, 0x3b, 0xba, 0x53, 0x25, 0xa9, 0x3a, 0x2c, 0x52, 0x07, 0xa6, 0x6d, 0x84, 0xcc, 0xd8, 0x31,
	0x3b, 0x87, 0x22, 0x51, 0xca, 0x79, 0xb1, 0xcd, 0xd4, 0x25, 0x18, 0x47, 0xdb, 0x2e, 0x9c, 0x35,
	0x2a, 0x48, 0x1c, 0xa2, 0x59, 0x45, 0x53, 0x5e, 0x64, 0x36, 0xc4, 0x1f, 0x8f, 0xfd, 0x10, 0x9f,
	0x45, 0xf3, 0x45, 0x52, 0x70, 0xcf, 0x9d, 0x02, 0x6e, 0x9d, 0x14, 0xfd, 0x28, 0xa8, 0xab, 0xf4,
	0x3d, 0x00, 0x13, 0xf3, 0x0b, 0xca, 0xba, 0xfb, 0x1d, 0x2e, 0x87, 0xae, 0x8f, 0x65, 0x4f, 0xf7,
	0x77, 0xc7, 0x55, 0x74, 0xa6, 0x12, 0xcd, 0x79, 0x97, 0xa5, 0x49, 0x3e, 0x68, 0xb6, 0xd8, 0x6e,
	0xc6, 0x14, 0x7c, 0x79, 0xda, 0x8b, 0x6d, 0x59, 0xa9, 0xaa, 0xf7, 0x02, 0xbd, 0xcc, 0x7f, 0x36,
	0x36, 0x41, 0xbd, 0xaf, 0x83, 0xcf, 0xa3, 0x55, 0x3f, 0x4e, 0xfa, 0x54, 0x26, 0x5d, 0x4a, 0x64,
	0xa2, 0x6d, 0xd8, 0x9e, 0x8e, 0xb1, 0xe3, 0x5d, 0xb4, 0xac, 0x38, 0xd1, 0x14, 0x3f, 0x81, 0x8e,
	0xfb, 0x2f, 0x7a, 0xc9, 0x01, 0xe9, 0x94, 0x52, 0xd9, 0x7c, 0x75, 0x3a, 0x5e, 0x76, 0x8c, 0xeb,
	0xc9, 0xc1, 0x25, 0x43, 0xae, 0xcb, 0x0a, 0x9a, 0xdc, 0xb6, 0xaa, 0x5b, 0x0d, 0xd9, 0x6d, 0x9a,
	0xdc, 0x06, 0xbd, 0xeb, 0x68, 0xa5, 0xd2, 0xcb, 0xe0, 0xd0, 0x69, 0x97, 0xb0, 0x2e, 0x79, 0xb5,
	0xac, 0xb8, 0x55, 0x30, 0xdd, 0x90, 0x4c, 0x0e, 0xac, 0xe4, 0xb1, 0xa6, 0x64, 0x72, 0x60, 0x24,
	0xa3, 0x3f, 0x35, 0x8e, 0xa9, 0x36, 0x33, 0x26, 0xdd, 0x67, 0xcf, 0x3f, 0x47, 0xb8, 0x2e, 0xf0,
	0x39, 0x74, 0xa2, 0x72, 0x05, 0xeb, 0x16, 0x49, 0x3e, 0xb8, 0xb0, 0x16, 0x63, 0x8f, 0x7b, 0x07,
	0x38, 0x70, 0x6d, 0x9d, 0x41, 0xbe, 0x1f, 0x47, 0x8a, 0x7e, 0xea, 0x53, 0x74, 0x47, 0xba, 0xd1,
	0x4f, 0xf1, 0x53, 0x08, 0x57, 0xb8, 0xca, 0x5c, 0x33, 0x91, 0x33, 0x2a, 0x5d, 0x22, 0xe4, 0xf5,
	0x5d, 0xaf, 0x18, 0xf5, 0x69, 0x74, 0x98, 0xb6, 0xbe, 0x99, 0x06, 0xdf, 0xf8, 0x69, 0x5c, 0x62,
	0xda, 0xb8, 0x26, 0xfa, 0x64, 0xaa, 0x9e, 0x92, 0x0c, 0xf7, 0xe6, 0x4c, 0x74, 0xb0, 0x53, 0xab,
	0x5d, 0xb8, 0x73, 0x40, 0x01, 0xdc, 0x6f, 0x05, 0x68, 0xc9, 0x4f, 0xda, 0xfa, 0xc0, 0xdd, 0xbc,
	0xe3, 0x6d, 0x35, 0x35, 0xbd, 0x1b, 0x2f, 0x98, 0x5f, 0x37, 0x75, 0xb1, 0x0b, 0x10, 0xdf, 0x44,
	0x0b, 0xac, 0xd0, 0x4a, 0xf6, 0x1d, 0x80, 0xd6, 0xc4, 0x5b, 0xa7, 0xd6, 0x1c, 0x58, 0x8f, 0x7e,
	0x3e, 0x85, 0x56, 0x47, 0xf5, 0x0a, 0xf1, 0x33, 0x28, 0x34, 0x81, 0x87, 0x17, 0xd6, 0xb0, 0x39,
	0xa2, 0xa5, 0x50, 0x5a, 0xd2, 0xa4, 0xe7, 0xe2, 0xd0, 0x2a, 0x53, 0x37, 0x78, 0x11, 0xab, 0xbe,
	0x78, 0x89, 0x8b, 0x5b, 0x8e, 0x87, 0x1f, 0x85, 0xea, 0x1e, 0x62, 0x38, 0x51, 0x26, 0x2d, 0x92,
	0x2e, 0x20, 0x2d, 0xba, 0x50, 0xbe, 0x03, 0x44, 0xfc, 0x14, 0x3a, 0xc1, 0x14, 0xe9, 0x51, 0xa5,
	0xcc, 0xc1, 0x62, 0x99, 0xab, 0xb8, 0x5b, 0x3e, 0x78, 0x5d, 0xb7, 0x9c, 0xcd, 0xcc, 0x16, 0xdd,
	0x75, 0xb5, 0x92, 0x8a, 0x84, 0x49, 0x17, 0xa5, 0xbc, 0xda, 0x18, 0x88, 0x26, 0x82, 0x98, 0x38,
	0xc6, 0x32, 0x26, 0x69, 0x6a, 0x72, 0xcd, 0x24, 0x77, 0x71, 0x7f, 0x99, 0xa9, 0x4b, 0x75, 0xb2,
	0xbb, 0x39, 0x72, 0x9e, 0xde, 0xe6, 0xa5, 0x86, 0x17, 0x19, 0xb8, 0x39, 0xb6, 0x2c, 0x21, 0xfa,
	0x70, 0x6a, 0x54, 0x3a, 0x5e, 0x35, 0xc1, 0x9d, 0x9b, 0xd6, 0xc1, 0x9e, 0xc5, 0x65, 0x92, 0x7e,
	0x9a, 0x6a, 0xe7, 0x9e, 0x25, 0x07, 0x6c, 0xdb, 0x52, 0xdd, 0x0c, 0x0a, 0x9e, 0xd1, 0x4a, 0xb0,
	0x72, 0xcc, 0x0d, 0x9e, 0x51, 0x2f, 0x77, 0x1e, 0xad, 0x9a, 0x19, 0x24, 0x45, 0x76, 0x97, 0x65,
	0x7a, 0xbf, 0x12, 0xb6, 0x9e, 0xc1, 0x4c, 0x5d, 0xf2, 0x2c, 0xff, 0x85, 0xc5, 0x20, 0x69, 0xca,
	0x65, 0x66, 0x1b, 0x3d, 0x3e, 0x84, 0x2f, 0x99, 0xf8, 0x6e, 0xc8, 0x5b, 0x40, 0xc5, 0x2f, 0xa0,
	0xd3, 0x4c, 0x11, 0xb5, 0x9f, 0x48, 0x9a, 0x11, 0x7a, 0x20, 0x72, 0x96, 0x32, 0x7b, 0x73, 0x50,
	0x65, 0x2e, 0x3a, 0xeb, 0xa9, 0x35, 0xa6, 0x76, 0x40, 0xe4, 0xaa, 0x93, 0x88, 0xbd, 0x40, 0xf4,
	0xc1, 0x54, 0xfd, 0x39, 0xf0, 0x88, 0x53, 0xa0, 0xa4, 0xa7, 0xba, 0x14, 0x44, 0x48, 0xc6, 0x25,
	0xd3, 0x87, 0x2e, 0x66, 0x2c, 0x02, 0x75, 0xdb, 0x11, 0xf1, 0x17, 0xd1, 0xaa, 0xa4, 0x8a, 0xca,
	0xbe, 0xab, 0x8a, 0xbc, 0xb0, 0x0d, 0x1c, 0x27, 0x6a, 0xbc, 0xea, 0x93, 0x9f, 0x05, 0x68, 0xd5,
	0xd8, 0x1b, 0x5e, 0x81, 0x89, 0xa6, 0xaa, 0x43, 0xb6, 0x62, 0x6c, 0x18, 0xd5, 0xab, 0x07, 0xb4,
	0x0b, 0xa3, 0xb7, 0xa7, 0xea, 0xe5, 0x6d, 0xad, 0xad, 0x6b, 0x92, 0x04, 0x60, 0xf4, 0xa9, 0xac,
	0x72, 0xb0, 0x45, 0x9b, 0x2c, 0xbd, 0x6c, 0x49, 0xe6, 0x16, 0xb0, 0xc7, 0xcb, 0x7e, 0x66, 0x67,
	0xe4, 0x1e, 0x2b, 0x0d, 0xe3, 0x25, 0xa0, 0xdb, 0xbe, 0xe4, 0x1a, 0x6a, 0x83, 0xac, 0xd6, 0xfe,
	0xb1, 0x72, 0xd6, 0x8c, 0x77, 0x75, 0x5e, 0xa9, 0xf1, 0xc7, 0x09, 0xa2, 0xdd, 0xf4, 0x40, 0x8d,
	0x3b, 0x4c, 0x10, 0xf3, 0x4e, 0xa2, 0x19, 0x26, 0x88, 0xe6, 0xca, 0x5d, 0x0c, 0xc7, 0x98, 0xd8,
	0xe5, 0xca, 0x93, 0x75, 0xee, 0xde, 0x26, 0x0d, 0xd9, 0x6a, 0x66, 0x82, 0x8c, 0x7c, 0x9d, 0x5c,
	0x66, 0x62, 0xa7, 0xde, 0xa8, 0x89, 0xfe, 0x3a, 0xe5, 0x92, 0x99, 0x7b, 0xf4, 0x3a, 0xcd, 0xe1,
	0xe4, 0xa5, 0x6e, 0x3e, 0x8b, 0xb8, 0xeb, 0xdd, 0xd2, 0x07, 0xef, 0x22, 0xc3, 0x2d, 0xe9, 0xa9,
	0xff, 0x87, 0x96, 0x74, 0xeb, 0x7f, 0xd4, 0x92, 0x8e, 0x9e, 0xae, 0x9f, 0x3a, 0x78, 0x6e, 0x4a,
	0x72, 0xf6, 0x7d, 0xea, 0x4e, 0x3b, 0x5e, 0x45, 0xc7, 0xfa, 0x49, 0x5e, 0x1a, 0x67, 0xb6, 0xcc,
	0xd2, 0xc1, 0x20, 0xfa, 0x4b, 0x80, 0xee, 0x1b, 0xfa, 0x8a, 0xa5, 0xee, 0x8b, 0x27, 0x11, 0x6e,
	0x10, 0xea, 0xf7, 0xe3, 0x8a, 0xe3, 0x40, 0xcc, 0x80, 0x2d, 0xf3, 0x6e, 0x80, 0x8e, 0x1f, 0xb1,
	0xea, 0x96, 0xe4, 0xf5, 0x71, 0x3f, 0xae, 0x35, 0xad, 0x38, 0x34, 0x96, 0x04, 0x88, 0xa2, 0x4f,
	0x50, 0xfd, 0xca, 0x1a, 0x34, 0xb6, 0x5d, 0xae, 0x6f, 0xef, 0x91, 0xc0, 0xe7, 0xfa, 0xf6, 0xfa,
	0xb8, 0x80, 0x4e, 0xd9, 0x18, 0x9d, 0xf1, 0xbb, 0x85, 0xbd, 0xa9, 0x6a, 0xb3, 0x58, 0x8c, 0x57,
	0x81, 0x7b, 0xa5, 0x62, 0x82, 0x25, 0xfc, 0x71, 0x80, 0x3e, 0x57, 0xb9, 0x69, 0xf4, 0xe7, 0x76,
	0x4b, 0x7c, 0x67, 0xfc, 0x4e, 0xf0, 0x2b, 0x13, 0x3f, 0xe0, 0x97, 0x63, 0x14, 0xc2, 0xe7, 0xd1,
	0x1a, 0x2f, 0x75, 0x97, 0x9b, 0x53, 0x76, 0x04, 0x9b, 0x0d, 0x00, 0xf7, 0x79, 0x81, 0xe1, 0x6f,
	0x7f, 0x1b, 0xa0, 0x87, 0xbc, 0xa9, 0x7b, 0x2b, 0x39, 0x36, 0xf1, 0x09, 0x7a, 0x17, 0xdf, 0xbc,
	0x07, 0xce, 0x27, 0xd0, 0xf1, 0x1e, 0x95, 0x5d, 0x4a, 0x04, 0x67, 0x85, 0x5b, 0x70, 0x17, 0xa4,
	0x96, 0x81, 0xb1, 0x6d, 0xe8, 0x56, 0xf6, 0xa3, 0x00, 0xad, 0x79, 0xed, 0x47, 0x3f, 0x9a, 0x9d,
	0xf8, 0x5c, 0x4e, 0xb9, 0xe1, 0xf5, 0x21, 0x5c, 0xcf, 0xa0, 0x6a, 0x19, 0xaa, 0x34, 0xca, 0x81,
	0xb2, 0xff, 0xc6, 0x71, 0xd2, 0xb3, 0x7d, 0x22, 0x65, 0xbf, 0xfb, 0x75, 0x80, 0xce, 0x1c, 0x59,
	0xa3, 0x21, 0x05, 0x73, 0x13, 0x9f, 0xd5, 0xe9, 0xa1, 0x15, 0x6a, 0x62, 0x3c, 0x8f, 0xec, 0xe9,
	0x19, 0xc6, 0x65, 0xff, 0xa7, 0x04, 0x03, 0xaf, 0xf9, 0xc5, 0x2f, 0x03, 0x74, 0xba, 0x79, 0xae,
	0x86, 0x3e, 0x9d, 0x9f, 0xf8, 0x94, 0xd6, 0xea, 0xa7, 0xaa, 0x89, 0xee, 0x11, 0xb4, 0x64, 0x72,
	0xa9, 0xbe, 0x09, 0xc8, 0x16, 0xce, 0x82, 0xcd, 0x61, 0x3c, 0xd5, 0x8a, 0x7d, 0x1e, 0x2d, 0xe5,
	0x4a, 0x90, 0xbb, 0x32, 0x11, 0x4e, 0x6c, 0x11, 0xc4, 0x16, 0x72, 0x25, 0x5e, 0x91, 0x89, 0xb0,
	0x52, 0x1f, 0x04, 0xc8, 0xef, 0x09, 0x32, 0xa4, 0x75, 0x69, 0xe2, 0x93, 0xf4, 0xff, 0x14, 0x11,
	0xd7, 0x81, 0x47, 0x6f, 0xf8, 0x64, 0xa1, 0xf6, 0x3e, 0xe7, 0xd2, 0xfd, 0xc1, 0x63, 0x20, 0x50,
	0x1b, 0xb1, 0x74, 0x95, 0xa9, 0xcb, 0xfe, 0x0d, 0x6f, 0xb3, 0xd8, 0x73, 0x8f, 0x61, 0x0f, 0x36,
	0x5e, 0x10, 0x6d, 0x30, 0x1d, 0xbc, 0xf5, 0x45, 0xef, 0x04, 0x68, 0xad, 0xf9, 0xb4, 0x65, 0x1f,
	0x24, 0xe0, 0x7d, 0xcb, 0xa5, 0xc4, 0x4a, 0x4b, 0x96, 0x6a, 0x22, 0x79, 0xe9, 0x8a, 0x6b, 0x48,
	0x89, 0x77, 0x80, 0x1a, 0x1b, 0xa2, 0x29, 0x2f, 0xcd, 0xa7, 0x3e, 0xfd, 0xb0, 0x75, 0x3d, 0xa2,
	0x92, 0xfb, 0x66, 0xc0, 0xc3, 0x68, 0x51, 0x48, 0xba, 0xc7, 0x0e, 0x48, 0x4e, 0x8b, 0xae, 0xde,
	0x77, 0xf9, 0xd1, 0x82, 0x25, 0x6e, 0x01, 0x2d, 0xfa, 0x7d, 0xa3, 0x7b, 0x6d, 0x14, 0x96, 0x45,
	0x51, 0xf6, 0x3e, 0x2b, 0x98, 0x75, 0xb4, 0x02, 0xf3, 0xa8, 0x7a, 0x0d, 0x55, 0xbb, 0x78, 0x89,
	0x4a, 0x5e, 0x65, 0x30, 0x9b, 0x19, 0x8e, 0xd0, 0xa2, 0x91, 0x04, 0x5d, 0x72, 0xd0, 0x2f, 0x36,
	0x73, 0x01, 0x55, 0x72, 0x33, 0xc3, 0xa7, 0xd0, 0x8c, 0xd2, 0x89, 0x2e, 0x95, 0xfb, 0xcf, 0x32,
	0x37, 0x8a, 0xfe, 0xd6, 0xa8, 0xcb, 0x06, 0x6f, 0x82, 0xe6, 0x92, 0x33, 0xa3, 0xda, 0x7d, 0x3d,
	0x4b, 0x25, 0xf7, 0xd7, 0xf4, 0x09, 0x70, 0xaf, 0x13, 0x27, 0xbc, 0xf3, 0x86, 0x2f, 0x33, 0xe6,
	0x37, 0xbe, 0x37, 0xf6, 0x57, 0xca, 0xda, 0x52, 0xc6, 0xd0, 0xb1, 0xbd, 0x2a, 0xf9, 0x4e, 0xd9,
	0xb9, 0x09, 0x56, 0xf1, 0x2f, 0x02, 0xb4, 0x06, 0x0e, 0xee, 0x50, 0xa8, 0x36, 0x9a, 0x98, 0x26,
	0xf1, 0x14, 0x35, 0xbc, 0xa4, 0xf1, 0xa9, 0x81, 0xfd, 0x3a, 0xb4, 0xce, 0x0c, 0x3c, 0xcf, 0x3c,
	0xfd, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x78, 0x25, 0x5b, 0xda, 0x28, 0x00, 0x00,
}
