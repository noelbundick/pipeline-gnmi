// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_lm_advertisement_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_lcac_advertisements

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Information about all the advertized areas
type MplsLmAdvertisementInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmAdvertisementInfo_KEYS) Reset()         { *m = MplsLmAdvertisementInfo_KEYS{} }
func (m *MplsLmAdvertisementInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsLmAdvertisementInfo_KEYS) ProtoMessage()    {}
func (*MplsLmAdvertisementInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{0}
}
func (m *MplsLmAdvertisementInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmAdvertisementInfo_KEYS.Unmarshal(m, b)
}
func (m *MplsLmAdvertisementInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmAdvertisementInfo_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsLmAdvertisementInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmAdvertisementInfo_KEYS.Merge(dst, src)
}
func (m *MplsLmAdvertisementInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsLmAdvertisementInfo_KEYS.Size(m)
}
func (m *MplsLmAdvertisementInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmAdvertisementInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmAdvertisementInfo_KEYS proto.InternalMessageInfo

type MplsLmAdvertisementInfo struct {
	// Flooding status: ready or reason
	FloodingStatusMessage string `protobuf:"bytes,50,opt,name=flooding_status_message,json=floodingStatusMessage" json:"flooding_status_message,omitempty"`
	// Time elapsed since last flooding in seconds
	LastFloodingTime uint32 `protobuf:"varint,51,opt,name=last_flooding_time,json=lastFloodingTime" json:"last_flooding_time,omitempty"`
	// Trigger for last flooding
	LastFloodingTrigger string `protobuf:"bytes,52,opt,name=last_flooding_trigger,json=lastFloodingTrigger" json:"last_flooding_trigger,omitempty"`
	// Time remained for next flooding in seconds
	NextFloodingTime uint32 `protobuf:"varint,53,opt,name=next_flooding_time,json=nextFloodingTime" json:"next_flooding_time,omitempty"`
	// DS-TE Mode
	DsTeMode string `protobuf:"bytes,54,opt,name=ds_te_mode,json=dsTeMode" json:"ds_te_mode,omitempty"`
	// Advertising info for all the IGP areas
	AdvertizedAreas      []*MplsLmAdvConfiguredArea `protobuf:"bytes,55,rep,name=advertized_areas,json=advertizedAreas" json:"advertized_areas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MplsLmAdvertisementInfo) Reset()         { *m = MplsLmAdvertisementInfo{} }
func (m *MplsLmAdvertisementInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmAdvertisementInfo) ProtoMessage()    {}
func (*MplsLmAdvertisementInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{1}
}
func (m *MplsLmAdvertisementInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmAdvertisementInfo.Unmarshal(m, b)
}
func (m *MplsLmAdvertisementInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmAdvertisementInfo.Marshal(b, m, deterministic)
}
func (dst *MplsLmAdvertisementInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmAdvertisementInfo.Merge(dst, src)
}
func (m *MplsLmAdvertisementInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmAdvertisementInfo.Size(m)
}
func (m *MplsLmAdvertisementInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmAdvertisementInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmAdvertisementInfo proto.InternalMessageInfo

func (m *MplsLmAdvertisementInfo) GetFloodingStatusMessage() string {
	if m != nil {
		return m.FloodingStatusMessage
	}
	return ""
}

func (m *MplsLmAdvertisementInfo) GetLastFloodingTime() uint32 {
	if m != nil {
		return m.LastFloodingTime
	}
	return 0
}

func (m *MplsLmAdvertisementInfo) GetLastFloodingTrigger() string {
	if m != nil {
		return m.LastFloodingTrigger
	}
	return ""
}

func (m *MplsLmAdvertisementInfo) GetNextFloodingTime() uint32 {
	if m != nil {
		return m.NextFloodingTime
	}
	return 0
}

func (m *MplsLmAdvertisementInfo) GetDsTeMode() string {
	if m != nil {
		return m.DsTeMode
	}
	return ""
}

func (m *MplsLmAdvertisementInfo) GetAdvertizedAreas() []*MplsLmAdvConfiguredArea {
	if m != nil {
		return m.AdvertizedAreas
	}
	return nil
}

// Information about the Shared Risk Link Group
type MplsSrlgInfo struct {
	// SRLG number
	SharedRiskGroup uint32 `protobuf:"varint,1,opt,name=shared_risk_group,json=sharedRiskGroup" json:"shared_risk_group,omitempty"`
	// SRLG name
	SrlgName             string   `protobuf:"bytes,2,opt,name=srlg_name,json=srlgName" json:"srlg_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsSrlgInfo) Reset()         { *m = MplsSrlgInfo{} }
func (m *MplsSrlgInfo) String() string { return proto.CompactTextString(m) }
func (*MplsSrlgInfo) ProtoMessage()    {}
func (*MplsSrlgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{2}
}
func (m *MplsSrlgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsSrlgInfo.Unmarshal(m, b)
}
func (m *MplsSrlgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsSrlgInfo.Marshal(b, m, deterministic)
}
func (dst *MplsSrlgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsSrlgInfo.Merge(dst, src)
}
func (m *MplsSrlgInfo) XXX_Size() int {
	return xxx_messageInfo_MplsSrlgInfo.Size(m)
}
func (m *MplsSrlgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsSrlgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsSrlgInfo proto.InternalMessageInfo

func (m *MplsSrlgInfo) GetSharedRiskGroup() uint32 {
	if m != nil {
		return m.SharedRiskGroup
	}
	return 0
}

func (m *MplsSrlgInfo) GetSrlgName() string {
	if m != nil {
		return m.SrlgName
	}
	return ""
}

// odu capability for flex  ODUs
type OduCapabilityFlex struct {
	// Max kbps Bandwidth of this level possible on this link
	MaxBandwidth uint32 `protobuf:"varint,1,opt,name=max_bandwidth,json=maxBandwidth" json:"max_bandwidth,omitempty"`
	// Unreserved kbps Bandwidth of this level possible on this link
	UnreservedBandwidth uint32 `protobuf:"varint,2,opt,name=unreserved_bandwidth,json=unreservedBandwidth" json:"unreserved_bandwidth,omitempty"`
	// Per LSP Max kbps Bandwidth of this level possible on this link
	MaxLspBandwidth      uint32   `protobuf:"varint,3,opt,name=max_lsp_bandwidth,json=maxLspBandwidth" json:"max_lsp_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OduCapabilityFlex) Reset()         { *m = OduCapabilityFlex{} }
func (m *OduCapabilityFlex) String() string { return proto.CompactTextString(m) }
func (*OduCapabilityFlex) ProtoMessage()    {}
func (*OduCapabilityFlex) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{3}
}
func (m *OduCapabilityFlex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduCapabilityFlex.Unmarshal(m, b)
}
func (m *OduCapabilityFlex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduCapabilityFlex.Marshal(b, m, deterministic)
}
func (dst *OduCapabilityFlex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduCapabilityFlex.Merge(dst, src)
}
func (m *OduCapabilityFlex) XXX_Size() int {
	return xxx_messageInfo_OduCapabilityFlex.Size(m)
}
func (m *OduCapabilityFlex) XXX_DiscardUnknown() {
	xxx_messageInfo_OduCapabilityFlex.DiscardUnknown(m)
}

var xxx_messageInfo_OduCapabilityFlex proto.InternalMessageInfo

func (m *OduCapabilityFlex) GetMaxBandwidth() uint32 {
	if m != nil {
		return m.MaxBandwidth
	}
	return 0
}

func (m *OduCapabilityFlex) GetUnreservedBandwidth() uint32 {
	if m != nil {
		return m.UnreservedBandwidth
	}
	return 0
}

func (m *OduCapabilityFlex) GetMaxLspBandwidth() uint32 {
	if m != nil {
		return m.MaxLspBandwidth
	}
	return 0
}

// odu capability for fixed ODUs
type OduCapabilityFixed struct {
	// Maximum Number of ODUs of this level possible on this link
	MaximumOdUs uint32 `protobuf:"varint,1,opt,name=maximum_od_us,json=maximumOdUs" json:"maximum_od_us,omitempty"`
	// Maximum Number of ODUs of this level possible on this link
	UnreservedOdUs       uint32   `protobuf:"varint,2,opt,name=unreserved_od_us,json=unreservedOdUs" json:"unreserved_od_us,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OduCapabilityFixed) Reset()         { *m = OduCapabilityFixed{} }
func (m *OduCapabilityFixed) String() string { return proto.CompactTextString(m) }
func (*OduCapabilityFixed) ProtoMessage()    {}
func (*OduCapabilityFixed) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{4}
}
func (m *OduCapabilityFixed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduCapabilityFixed.Unmarshal(m, b)
}
func (m *OduCapabilityFixed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduCapabilityFixed.Marshal(b, m, deterministic)
}
func (dst *OduCapabilityFixed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduCapabilityFixed.Merge(dst, src)
}
func (m *OduCapabilityFixed) XXX_Size() int {
	return xxx_messageInfo_OduCapabilityFixed.Size(m)
}
func (m *OduCapabilityFixed) XXX_DiscardUnknown() {
	xxx_messageInfo_OduCapabilityFixed.DiscardUnknown(m)
}

var xxx_messageInfo_OduCapabilityFixed proto.InternalMessageInfo

func (m *OduCapabilityFixed) GetMaximumOdUs() uint32 {
	if m != nil {
		return m.MaximumOdUs
	}
	return 0
}

func (m *OduCapabilityFixed) GetUnreservedOdUs() uint32 {
	if m != nil {
		return m.UnreservedOdUs
	}
	return 0
}

// ODU capability Union for bandwidth
type OduCapBw struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// ODU capability for Fixed ODUs
	Fixed *OduCapabilityFixed `protobuf:"bytes,2,opt,name=fixed" json:"fixed,omitempty"`
	// ODU capability for Flex ODUs
	Flex                 *OduCapabilityFlex `protobuf:"bytes,3,opt,name=flex" json:"flex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OduCapBw) Reset()         { *m = OduCapBw{} }
func (m *OduCapBw) String() string { return proto.CompactTextString(m) }
func (*OduCapBw) ProtoMessage()    {}
func (*OduCapBw) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{5}
}
func (m *OduCapBw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduCapBw.Unmarshal(m, b)
}
func (m *OduCapBw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduCapBw.Marshal(b, m, deterministic)
}
func (dst *OduCapBw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduCapBw.Merge(dst, src)
}
func (m *OduCapBw) XXX_Size() int {
	return xxx_messageInfo_OduCapBw.Size(m)
}
func (m *OduCapBw) XXX_DiscardUnknown() {
	xxx_messageInfo_OduCapBw.DiscardUnknown(m)
}

var xxx_messageInfo_OduCapBw proto.InternalMessageInfo

func (m *OduCapBw) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OduCapBw) GetFixed() *OduCapabilityFixed {
	if m != nil {
		return m.Fixed
	}
	return nil
}

func (m *OduCapBw) GetFlex() *OduCapabilityFlex {
	if m != nil {
		return m.Flex
	}
	return nil
}

// Odu capability at a level of multiplex tree for an ODU type
type OduCapability struct {
	// Signal Type
	SignalType string `protobuf:"bytes,1,opt,name=signal_type,json=signalType" json:"signal_type,omitempty"`
	// ODU Type at stage 1, Not Set for HO ODU
	Stage1 string `protobuf:"bytes,2,opt,name=stage1" json:"stage1,omitempty"`
	// ODU Type at stage 2, Not Set for single stage mulitplexing
	Stage2 string `protobuf:"bytes,3,opt,name=stage2" json:"stage2,omitempty"`
	// ODU Type at stage 3, Not set up to two levels of multiplexing
	Stage3 string `protobuf:"bytes,4,opt,name=stage3" json:"stage3,omitempty"`
	// ODU Type at stage 4, Not set up to three levels of multiplexing
	Stage4 string `protobuf:"bytes,5,opt,name=stage4" json:"stage4,omitempty"`
	// True if link is terminable for this ODU level
	Terminable bool `protobuf:"varint,6,opt,name=terminable" json:"terminable,omitempty"`
	// True if link is switchable for this ODU level
	Switchable bool `protobuf:"varint,7,opt,name=switchable" json:"switchable,omitempty"`
	// True if link supports 1.25G TSG for this ODU level
	Tsg1P25 bool `protobuf:"varint,8,opt,name=tsg1_p25,json=tsg1P25" json:"tsg1_p25,omitempty"`
	// True if link supports 2.5G TSG for this ODU level
	Tsg2P5 bool `protobuf:"varint,9,opt,name=tsg2_p5,json=tsg2P5" json:"tsg2_p5,omitempty"`
	// True if link VCAT capable for this ODU level
	VcatCapable bool `protobuf:"varint,10,opt,name=vcat_capable,json=vcatCapable" json:"vcat_capable,omitempty"`
	// True if link LCAS capable for this ODU level
	LcasCapable bool `protobuf:"varint,11,opt,name=lcas_capable,json=lcasCapable" json:"lcas_capable,omitempty"`
	// Bandwidth related info for this ODU level
	BandwidthInfo        *OduCapBw `protobuf:"bytes,12,opt,name=bandwidth_info,json=bandwidthInfo" json:"bandwidth_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OduCapability) Reset()         { *m = OduCapability{} }
func (m *OduCapability) String() string { return proto.CompactTextString(m) }
func (*OduCapability) ProtoMessage()    {}
func (*OduCapability) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{6}
}
func (m *OduCapability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduCapability.Unmarshal(m, b)
}
func (m *OduCapability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduCapability.Marshal(b, m, deterministic)
}
func (dst *OduCapability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduCapability.Merge(dst, src)
}
func (m *OduCapability) XXX_Size() int {
	return xxx_messageInfo_OduCapability.Size(m)
}
func (m *OduCapability) XXX_DiscardUnknown() {
	xxx_messageInfo_OduCapability.DiscardUnknown(m)
}

var xxx_messageInfo_OduCapability proto.InternalMessageInfo

func (m *OduCapability) GetSignalType() string {
	if m != nil {
		return m.SignalType
	}
	return ""
}

func (m *OduCapability) GetStage1() string {
	if m != nil {
		return m.Stage1
	}
	return ""
}

func (m *OduCapability) GetStage2() string {
	if m != nil {
		return m.Stage2
	}
	return ""
}

func (m *OduCapability) GetStage3() string {
	if m != nil {
		return m.Stage3
	}
	return ""
}

func (m *OduCapability) GetStage4() string {
	if m != nil {
		return m.Stage4
	}
	return ""
}

func (m *OduCapability) GetTerminable() bool {
	if m != nil {
		return m.Terminable
	}
	return false
}

func (m *OduCapability) GetSwitchable() bool {
	if m != nil {
		return m.Switchable
	}
	return false
}

func (m *OduCapability) GetTsg1P25() bool {
	if m != nil {
		return m.Tsg1P25
	}
	return false
}

func (m *OduCapability) GetTsg2P5() bool {
	if m != nil {
		return m.Tsg2P5
	}
	return false
}

func (m *OduCapability) GetVcatCapable() bool {
	if m != nil {
		return m.VcatCapable
	}
	return false
}

func (m *OduCapability) GetLcasCapable() bool {
	if m != nil {
		return m.LcasCapable
	}
	return false
}

func (m *OduCapability) GetBandwidthInfo() *OduCapBw {
	if m != nil {
		return m.BandwidthInfo
	}
	return nil
}

// Link ODU Capabilities
type OduLinkCapabilities struct {
	// Max LSP Bandwidth per priority in kbit/s
	MaxLspBandwidth []uint32 `protobuf:"varint,1,rep,packed,name=max_lsp_bandwidth,json=maxLspBandwidth" json:"max_lsp_bandwidth,omitempty"`
	// ODU Capabilities of Link
	OduCapabilities      []*OduCapability `protobuf:"bytes,2,rep,name=odu_capabilities,json=oduCapabilities" json:"odu_capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OduLinkCapabilities) Reset()         { *m = OduLinkCapabilities{} }
func (m *OduLinkCapabilities) String() string { return proto.CompactTextString(m) }
func (*OduLinkCapabilities) ProtoMessage()    {}
func (*OduLinkCapabilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{7}
}
func (m *OduLinkCapabilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduLinkCapabilities.Unmarshal(m, b)
}
func (m *OduLinkCapabilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduLinkCapabilities.Marshal(b, m, deterministic)
}
func (dst *OduLinkCapabilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduLinkCapabilities.Merge(dst, src)
}
func (m *OduLinkCapabilities) XXX_Size() int {
	return xxx_messageInfo_OduLinkCapabilities.Size(m)
}
func (m *OduLinkCapabilities) XXX_DiscardUnknown() {
	xxx_messageInfo_OduLinkCapabilities.DiscardUnknown(m)
}

var xxx_messageInfo_OduLinkCapabilities proto.InternalMessageInfo

func (m *OduLinkCapabilities) GetMaxLspBandwidth() []uint32 {
	if m != nil {
		return m.MaxLspBandwidth
	}
	return nil
}

func (m *OduLinkCapabilities) GetOduCapabilities() []*OduCapability {
	if m != nil {
		return m.OduCapabilities
	}
	return nil
}

// Information about a link bandwidth
type MplsLmAdvLinkResvBw struct {
	// The priority level of this bandwidth
	Priority uint32 `protobuf:"varint,1,opt,name=priority" json:"priority,omitempty"`
	// The reservable pool0 BW at this priority
	Pool0Bandwidth uint32 `protobuf:"varint,2,opt,name=pool0_bandwidth,json=pool0Bandwidth" json:"pool0_bandwidth,omitempty"`
	// The reservable pool1 BW at this priority
	Pool1Bandwidth       uint32   `protobuf:"varint,3,opt,name=pool1_bandwidth,json=pool1Bandwidth" json:"pool1_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmAdvLinkResvBw) Reset()         { *m = MplsLmAdvLinkResvBw{} }
func (m *MplsLmAdvLinkResvBw) String() string { return proto.CompactTextString(m) }
func (*MplsLmAdvLinkResvBw) ProtoMessage()    {}
func (*MplsLmAdvLinkResvBw) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{8}
}
func (m *MplsLmAdvLinkResvBw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmAdvLinkResvBw.Unmarshal(m, b)
}
func (m *MplsLmAdvLinkResvBw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmAdvLinkResvBw.Marshal(b, m, deterministic)
}
func (dst *MplsLmAdvLinkResvBw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmAdvLinkResvBw.Merge(dst, src)
}
func (m *MplsLmAdvLinkResvBw) XXX_Size() int {
	return xxx_messageInfo_MplsLmAdvLinkResvBw.Size(m)
}
func (m *MplsLmAdvLinkResvBw) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmAdvLinkResvBw.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmAdvLinkResvBw proto.InternalMessageInfo

func (m *MplsLmAdvLinkResvBw) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *MplsLmAdvLinkResvBw) GetPool0Bandwidth() uint32 {
	if m != nil {
		return m.Pool0Bandwidth
	}
	return 0
}

func (m *MplsLmAdvLinkResvBw) GetPool1Bandwidth() uint32 {
	if m != nil {
		return m.Pool1Bandwidth
	}
	return 0
}

// Information about a flooded link
type MplsLmAdvFloodedLink struct {
	// The link's id
	LinkId uint32 `protobuf:"varint,1,opt,name=link_id,json=linkId" json:"link_id,omitempty"`
	// The link's interface name
	InterfaceName string `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	// The link's IPv4 address
	LinkAddress string `protobuf:"bytes,3,opt,name=link_address,json=linkAddress" json:"link_address,omitempty"`
	// The link's subnet type
	SubnetType string `protobuf:"bytes,4,opt,name=subnet_type,json=subnetType" json:"subnet_type,omitempty"`
	// The link's outgoing interface's id
	OutgoingInterfaceId uint32 `protobuf:"varint,5,opt,name=outgoing_interface_id,json=outgoingInterfaceId" json:"outgoing_interface_id,omitempty"`
	// TRUE if the link belongs to a desig. router
	IsDesignatedRouter bool `protobuf:"varint,6,opt,name=is_designated_router,json=isDesignatedRouter" json:"is_designated_router,omitempty"`
	// IGP id of the designated router
	DesignatedRouterIgpId string `protobuf:"bytes,7,opt,name=designated_router_igp_id,json=designatedRouterIgpId" json:"designated_router_igp_id,omitempty"`
	// The neighbor's IGP id
	NeighborIgpId string `protobuf:"bytes,8,opt,name=neighbor_igp_id,json=neighborIgpId" json:"neighbor_igp_id,omitempty"`
	// The neighbor's ip address
	IgpNeighborAddress string `protobuf:"bytes,9,opt,name=igp_neighbor_address,json=igpNeighborAddress" json:"igp_neighbor_address,omitempty"`
	// The link's incoming interface's id
	IncomingInterfaceId uint32 `protobuf:"varint,10,opt,name=incoming_interface_id,json=incomingInterfaceId" json:"incoming_interface_id,omitempty"`
	// The link's TE metric
	TeMetric uint32 `protobuf:"varint,11,opt,name=te_metric,json=teMetric" json:"te_metric,omitempty"`
	// The link's IGP metric
	IgpMetric uint32 `protobuf:"varint,12,opt,name=igp_metric,json=igpMetric" json:"igp_metric,omitempty"`
	// Unidirectional Link Delay in micro-sec
	UniLinkDelay uint32 `protobuf:"varint,13,opt,name=uni_link_delay,json=uniLinkDelay" json:"uni_link_delay,omitempty"`
	// The link's bandwidth units
	BandwidthUnits string `protobuf:"bytes,14,opt,name=bandwidth_units,json=bandwidthUnits" json:"bandwidth_units,omitempty"`
	// The link's physical BW
	PhysicalBandwidth uint32 `protobuf:"varint,15,opt,name=physical_bandwidth,json=physicalBandwidth" json:"physical_bandwidth,omitempty"`
	// Bandwidth Constraints Model ID
	BcmId uint32 `protobuf:"varint,16,opt,name=bcm_id,json=bcmId" json:"bcm_id,omitempty"`
	// The link's maximum reservable BW
	LinkMaximumReservableBandwidth uint32 `protobuf:"varint,17,opt,name=link_maximum_reservable_bandwidth,json=linkMaximumReservableBandwidth" json:"link_maximum_reservable_bandwidth,omitempty"`
	// The link's reservable pool0 BW
	ReservablePool0Bandwidth uint32 `protobuf:"varint,18,opt,name=reservable_pool0_bandwidth,json=reservablePool0Bandwidth" json:"reservable_pool0_bandwidth,omitempty"`
	// The link's reservable pool1 BW
	ReservablePool1Bandwidth uint32 `protobuf:"varint,19,opt,name=reservable_pool1_bandwidth,json=reservablePool1Bandwidth" json:"reservable_pool1_bandwidth,omitempty"`
	// The link's shared risk link groups
	SharedRiskLinkGroups []*MplsSrlgInfo `protobuf:"bytes,20,rep,name=shared_risk_link_groups,json=sharedRiskLinkGroups" json:"shared_risk_link_groups,omitempty"`
	// TRUE if receiving reservable BW is enabled
	IsReceivingReservableBandwidthEnabled bool `protobuf:"varint,21,opt,name=is_receiving_reservable_bandwidth_enabled,json=isReceivingReservableBandwidthEnabled" json:"is_receiving_reservable_bandwidth_enabled,omitempty"`
	// Upstream or Downstream
	ReceivingDirection string `protobuf:"bytes,22,opt,name=receiving_direction,json=receivingDirection" json:"receiving_direction,omitempty"`
	// Receiving reservable BW at each priority level(priority 0 to priority 7)
	ReceivingReservableBandwidth []*MplsLmAdvLinkResvBw `protobuf:"bytes,23,rep,name=receiving_reservable_bandwidth,json=receivingReservableBandwidth" json:"receiving_reservable_bandwidth,omitempty"`
	// TRUE if transmitting reservable BW is enabled
	IsTransmittingReservableBandwidthEnabled bool `protobuf:"varint,24,opt,name=is_transmitting_reservable_bandwidth_enabled,json=isTransmittingReservableBandwidthEnabled" json:"is_transmitting_reservable_bandwidth_enabled,omitempty"`
	// Upstream or Downstream
	TransmittingDirection string `protobuf:"bytes,25,opt,name=transmitting_direction,json=transmittingDirection" json:"transmitting_direction,omitempty"`
	// Transmitting reservable BW at each priority level (priority 0 to priority 7)
	TransmittingReservableBandwidth []*MplsLmAdvLinkResvBw `protobuf:"bytes,26,rep,name=transmitting_reservable_bandwidth,json=transmittingReservableBandwidth" json:"transmitting_reservable_bandwidth,omitempty"`
	// ODU Link Capabilities
	OduLinkCapabilities *OduLinkCapabilities `protobuf:"bytes,27,opt,name=odu_link_capabilities,json=oduLinkCapabilities" json:"odu_link_capabilities,omitempty"`
	// Deprecated
	AffinityAttributeFlags uint32 `protobuf:"varint,28,opt,name=affinity_attribute_flags,json=affinityAttributeFlags" json:"affinity_attribute_flags,omitempty"`
	// The link's extended affinity bits
	ExtendedAffinityAttributeFlags []uint32 `protobuf:"varint,29,rep,packed,name=extended_affinity_attribute_flags,json=extendedAffinityAttributeFlags" json:"extended_affinity_attribute_flags,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *MplsLmAdvFloodedLink) Reset()         { *m = MplsLmAdvFloodedLink{} }
func (m *MplsLmAdvFloodedLink) String() string { return proto.CompactTextString(m) }
func (*MplsLmAdvFloodedLink) ProtoMessage()    {}
func (*MplsLmAdvFloodedLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{9}
}
func (m *MplsLmAdvFloodedLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmAdvFloodedLink.Unmarshal(m, b)
}
func (m *MplsLmAdvFloodedLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmAdvFloodedLink.Marshal(b, m, deterministic)
}
func (dst *MplsLmAdvFloodedLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmAdvFloodedLink.Merge(dst, src)
}
func (m *MplsLmAdvFloodedLink) XXX_Size() int {
	return xxx_messageInfo_MplsLmAdvFloodedLink.Size(m)
}
func (m *MplsLmAdvFloodedLink) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmAdvFloodedLink.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmAdvFloodedLink proto.InternalMessageInfo

func (m *MplsLmAdvFloodedLink) GetLinkId() uint32 {
	if m != nil {
		return m.LinkId
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetLinkAddress() string {
	if m != nil {
		return m.LinkAddress
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetSubnetType() string {
	if m != nil {
		return m.SubnetType
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetOutgoingInterfaceId() uint32 {
	if m != nil {
		return m.OutgoingInterfaceId
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetIsDesignatedRouter() bool {
	if m != nil {
		return m.IsDesignatedRouter
	}
	return false
}

func (m *MplsLmAdvFloodedLink) GetDesignatedRouterIgpId() string {
	if m != nil {
		return m.DesignatedRouterIgpId
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetNeighborIgpId() string {
	if m != nil {
		return m.NeighborIgpId
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetIgpNeighborAddress() string {
	if m != nil {
		return m.IgpNeighborAddress
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetIncomingInterfaceId() uint32 {
	if m != nil {
		return m.IncomingInterfaceId
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetTeMetric() uint32 {
	if m != nil {
		return m.TeMetric
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetIgpMetric() uint32 {
	if m != nil {
		return m.IgpMetric
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetUniLinkDelay() uint32 {
	if m != nil {
		return m.UniLinkDelay
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetBandwidthUnits() string {
	if m != nil {
		return m.BandwidthUnits
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetPhysicalBandwidth() uint32 {
	if m != nil {
		return m.PhysicalBandwidth
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetBcmId() uint32 {
	if m != nil {
		return m.BcmId
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetLinkMaximumReservableBandwidth() uint32 {
	if m != nil {
		return m.LinkMaximumReservableBandwidth
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetReservablePool0Bandwidth() uint32 {
	if m != nil {
		return m.ReservablePool0Bandwidth
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetReservablePool1Bandwidth() uint32 {
	if m != nil {
		return m.ReservablePool1Bandwidth
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetSharedRiskLinkGroups() []*MplsSrlgInfo {
	if m != nil {
		return m.SharedRiskLinkGroups
	}
	return nil
}

func (m *MplsLmAdvFloodedLink) GetIsReceivingReservableBandwidthEnabled() bool {
	if m != nil {
		return m.IsReceivingReservableBandwidthEnabled
	}
	return false
}

func (m *MplsLmAdvFloodedLink) GetReceivingDirection() string {
	if m != nil {
		return m.ReceivingDirection
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetReceivingReservableBandwidth() []*MplsLmAdvLinkResvBw {
	if m != nil {
		return m.ReceivingReservableBandwidth
	}
	return nil
}

func (m *MplsLmAdvFloodedLink) GetIsTransmittingReservableBandwidthEnabled() bool {
	if m != nil {
		return m.IsTransmittingReservableBandwidthEnabled
	}
	return false
}

func (m *MplsLmAdvFloodedLink) GetTransmittingDirection() string {
	if m != nil {
		return m.TransmittingDirection
	}
	return ""
}

func (m *MplsLmAdvFloodedLink) GetTransmittingReservableBandwidth() []*MplsLmAdvLinkResvBw {
	if m != nil {
		return m.TransmittingReservableBandwidth
	}
	return nil
}

func (m *MplsLmAdvFloodedLink) GetOduLinkCapabilities() *OduLinkCapabilities {
	if m != nil {
		return m.OduLinkCapabilities
	}
	return nil
}

func (m *MplsLmAdvFloodedLink) GetAffinityAttributeFlags() uint32 {
	if m != nil {
		return m.AffinityAttributeFlags
	}
	return 0
}

func (m *MplsLmAdvFloodedLink) GetExtendedAffinityAttributeFlags() []uint32 {
	if m != nil {
		return m.ExtendedAffinityAttributeFlags
	}
	return nil
}

// The information about an advertized area
type MplsLmAdvConfiguredArea struct {
	// The area id
	IgpAreaId string `protobuf:"bytes,1,opt,name=igp_area_id,json=igpAreaId" json:"igp_area_id,omitempty"`
	// The IGP protocol running over this area
	Protocol string `protobuf:"bytes,2,opt,name=protocol" json:"protocol,omitempty"`
	// The node's system id
	SystemId string `protobuf:"bytes,3,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	// The node's router ID
	RouterId string `protobuf:"bytes,4,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	// The array of flooded links in this area
	FloodedLinks         []*MplsLmAdvFloodedLink `protobuf:"bytes,5,rep,name=flooded_links,json=floodedLinks" json:"flooded_links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MplsLmAdvConfiguredArea) Reset()         { *m = MplsLmAdvConfiguredArea{} }
func (m *MplsLmAdvConfiguredArea) String() string { return proto.CompactTextString(m) }
func (*MplsLmAdvConfiguredArea) ProtoMessage()    {}
func (*MplsLmAdvConfiguredArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa, []int{10}
}
func (m *MplsLmAdvConfiguredArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmAdvConfiguredArea.Unmarshal(m, b)
}
func (m *MplsLmAdvConfiguredArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmAdvConfiguredArea.Marshal(b, m, deterministic)
}
func (dst *MplsLmAdvConfiguredArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmAdvConfiguredArea.Merge(dst, src)
}
func (m *MplsLmAdvConfiguredArea) XXX_Size() int {
	return xxx_messageInfo_MplsLmAdvConfiguredArea.Size(m)
}
func (m *MplsLmAdvConfiguredArea) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmAdvConfiguredArea.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmAdvConfiguredArea proto.InternalMessageInfo

func (m *MplsLmAdvConfiguredArea) GetIgpAreaId() string {
	if m != nil {
		return m.IgpAreaId
	}
	return ""
}

func (m *MplsLmAdvConfiguredArea) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *MplsLmAdvConfiguredArea) GetSystemId() string {
	if m != nil {
		return m.SystemId
	}
	return ""
}

func (m *MplsLmAdvConfiguredArea) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *MplsLmAdvConfiguredArea) GetFloodedLinks() []*MplsLmAdvFloodedLink {
	if m != nil {
		return m.FloodedLinks
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsLmAdvertisementInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.mpls_lm_advertisement_info_KEYS")
	proto.RegisterType((*MplsLmAdvertisementInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.mpls_lm_advertisement_info")
	proto.RegisterType((*MplsSrlgInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.mpls_srlg_info")
	proto.RegisterType((*OduCapabilityFlex)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.odu_capability_flex")
	proto.RegisterType((*OduCapabilityFixed)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.odu_capability_fixed")
	proto.RegisterType((*OduCapBw)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.odu_cap_bw")
	proto.RegisterType((*OduCapability)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.odu_capability")
	proto.RegisterType((*OduLinkCapabilities)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.odu_link_capabilities")
	proto.RegisterType((*MplsLmAdvLinkResvBw)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.mpls_lm_adv_link_resv_bw")
	proto.RegisterType((*MplsLmAdvFloodedLink)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.mpls_lm_adv_flooded_link")
	proto.RegisterType((*MplsLmAdvConfiguredArea)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.advertisements.mpls_lm_adv_configured_area")
}

func init() {
	proto.RegisterFile("mpls_lm_advertisement_info.proto", fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa)
}

var fileDescriptor_mpls_lm_advertisement_info_3b6386e395fc51aa = []byte{
	// 1452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x59, 0x6f, 0x1c, 0xb9,
	0x11, 0xc6, 0xe8, 0xf2, 0x4c, 0x8d, 0x66, 0x24, 0x51, 0x57, 0x5b, 0xb2, 0x65, 0x69, 0x12, 0x27,
	0x8a, 0xe1, 0x28, 0xd6, 0xc8, 0xb2, 0xf3, 0x10, 0x04, 0x90, 0xcf, 0x0c, 0x62, 0xd9, 0x46, 0x5b,
	0x06, 0x62, 0x04, 0x30, 0xd1, 0xd3, 0xe4, 0xb4, 0x08, 0xf5, 0xb5, 0x4d, 0xb6, 0x34, 0x32, 0xb0,
	0xaf, 0x8b, 0x7d, 0xde, 0xa7, 0xdd, 0xbf, 0x61, 0xec, 0xdf, 0xd9, 0xbf, 0xb2, 0x58, 0xb0, 0xd8,
	0xd7, 0xe8, 0x32, 0xd6, 0xf6, 0xbe, 0x35, 0xeb, 0xfb, 0xaa, 0x58, 0x55, 0x64, 0x55, 0xb1, 0x61,
	0x3d, 0x88, 0x7d, 0x49, 0xfd, 0x80, 0x3a, 0xec, 0x98, 0x27, 0x4a, 0x48, 0x1e, 0xf0, 0x50, 0x51,
	0x11, 0x0e, 0xa2, 0xad, 0x38, 0x89, 0x54, 0x44, 0xba, 0xae, 0x90, 0x6e, 0x44, 0x45, 0x24, 0xe9,
	0x30, 0xa1, 0x48, 0x57, 0x9c, 0x46, 0x31, 0x4f, 0xb6, 0x8c, 0xae, 0xeb, 0xb8, 0x5b, 0x23, 0xda,
	0xb2, 0xb3, 0x01, 0xb7, 0x2e, 0xb7, 0x4b, 0xff, 0xfb, 0xf4, 0xdd, 0x9b, 0xce, 0xaf, 0x63, 0xb0,
	0x72, 0x39, 0x87, 0x3c, 0x80, 0xe5, 0x81, 0x1f, 0x45, 0x4c, 0x84, 0x1e, 0x95, 0xca, 0x51, 0xa9,
	0xa4, 0x01, 0x97, 0xd2, 0xf1, 0xb8, 0xd5, 0x5d, 0xaf, 0x6d, 0x36, 0xec, 0xc5, 0x1c, 0x7e, 0x83,
	0xe8, 0xbe, 0x01, 0xc9, 0x5d, 0x20, 0xbe, 0x23, 0x15, 0x2d, 0x94, 0x95, 0x08, 0xb8, 0xb5, 0xb3,
	0x5e, 0xdb, 0x6c, 0xd9, 0xb3, 0x1a, 0x79, 0x96, 0x01, 0x07, 0x22, 0xe0, 0xa4, 0x0b, 0x8b, 0x67,
	0xd8, 0x89, 0xf0, 0x3c, 0x9e, 0x58, 0xf7, 0x71, 0x8f, 0xf9, 0x11, 0x05, 0x03, 0xe9, 0x1d, 0x42,
	0x3e, 0x3c, 0xbb, 0xc3, 0xae, 0xd9, 0x41, 0x23, 0x23, 0x3b, 0xdc, 0x00, 0x60, 0x98, 0xb0, 0x20,
	0x62, 0xdc, 0x7a, 0x80, 0x66, 0xeb, 0x4c, 0x1e, 0xf0, 0xfd, 0x88, 0x71, 0xf2, 0x01, 0x66, 0xb3,
	0xd8, 0x3f, 0x70, 0x46, 0x9d, 0x84, 0x3b, 0xd2, 0x7a, 0xb8, 0x3e, 0xbe, 0xd9, 0xec, 0xbe, 0xda,
	0xfa, 0xfd, 0x69, 0xdf, 0xaa, 0xe4, 0x93, 0xba, 0x51, 0x38, 0x10, 0x5e, 0x9a, 0x64, 0x76, 0xed,
	0x99, 0x72, 0xa3, 0x3d, 0xbd, 0x4f, 0xe7, 0x1d, 0xb4, 0x91, 0x2f, 0x13, 0xdf, 0x33, 0x39, 0xbf,
	0x03, 0x73, 0xf2, 0xd0, 0xd1, 0x1a, 0x89, 0x90, 0x47, 0xd4, 0x4b, 0xa2, 0x34, 0xb6, 0x6a, 0x18,
	0xd8, 0x8c, 0x01, 0x6c, 0x21, 0x8f, 0x9e, 0x6b, 0x31, 0x59, 0x85, 0x06, 0x2a, 0x86, 0x4e, 0xc0,
	0xad, 0x31, 0x13, 0x96, 0x16, 0xbc, 0x74, 0x02, 0xde, 0xf9, 0xa9, 0x06, 0xf3, 0x11, 0x4b, 0xa9,
	0xeb, 0xc4, 0x4e, 0x5f, 0xf8, 0x42, 0x9d, 0xd2, 0x81, 0xcf, 0x87, 0xe4, 0x4f, 0xd0, 0x0a, 0x9c,
	0x21, 0xed, 0x3b, 0x21, 0x3b, 0x11, 0x4c, 0x1d, 0x66, 0xc6, 0xa7, 0x03, 0x67, 0xf8, 0x28, 0x97,
	0x91, 0x6d, 0x58, 0x48, 0xc3, 0x84, 0x4b, 0x9e, 0x1c, 0x73, 0x56, 0xe1, 0x8e, 0x21, 0x77, 0xbe,
	0xc4, 0x4a, 0x95, 0x3b, 0x30, 0xa7, 0xed, 0xfa, 0x32, 0xae, 0xf0, 0xc7, 0x8d, 0xe3, 0x81, 0x33,
	0x7c, 0x21, 0xe3, 0x82, 0xdb, 0x61, 0xb0, 0x70, 0xd6, 0x35, 0x31, 0xe4, 0x8c, 0x74, 0xd0, 0x37,
	0x11, 0xa4, 0x01, 0x8d, 0x18, 0x4d, 0x65, 0xe6, 0x5b, 0x33, 0x13, 0xbe, 0x62, 0x6f, 0x25, 0xd9,
	0x84, 0xd9, 0x8a, 0x6b, 0x86, 0x66, 0xdc, 0x6a, 0x97, 0x72, 0xcd, 0xec, 0xfc, 0x52, 0x03, 0xc8,
	0xb6, 0xa1, 0xfd, 0x13, 0x42, 0x60, 0x42, 0x9d, 0xc6, 0x1c, 0x6d, 0x36, 0x6c, 0xfc, 0x26, 0xef,
	0x61, 0x12, 0x77, 0x46, 0x0b, 0xcd, 0xee, 0x7f, 0x3e, 0xe7, 0xc0, 0x2f, 0x8a, 0xc4, 0x36, 0x66,
	0xc9, 0xff, 0x61, 0x42, 0x27, 0x1d, 0xf3, 0xd0, 0xec, 0x3e, 0xff, 0x1a, 0xe6, 0x7d, 0x3e, 0xb4,
	0xd1, 0x68, 0xe7, 0xe3, 0x38, 0xb4, 0x47, 0x51, 0x72, 0x0b, 0x9a, 0x52, 0x78, 0xa1, 0xe3, 0xd3,
	0x4a, 0xa8, 0x60, 0x44, 0x07, 0x3a, 0xe0, 0x25, 0x98, 0x92, 0xca, 0xf1, 0xf8, 0x76, 0x76, 0x5f,
	0xb2, 0x55, 0x21, 0xef, 0xa2, 0xab, 0xb9, 0xbc, 0x5b, 0xc8, 0x77, 0xac, 0x89, 0x8a, 0x7c, 0xa7,
	0x90, 0xdf, 0xb7, 0x26, 0x2b, 0xf2, 0xfb, 0x64, 0x0d, 0x40, 0xf1, 0x24, 0x10, 0xa1, 0xd3, 0xf7,
	0xb9, 0x35, 0xb5, 0x5e, 0xdb, 0xac, 0xdb, 0x15, 0x89, 0xc6, 0xe5, 0x89, 0x50, 0xee, 0x21, 0xe2,
	0xd7, 0x0c, 0x5e, 0x4a, 0xc8, 0x75, 0xa8, 0x2b, 0xe9, 0x6d, 0xd3, 0xb8, 0xbb, 0x6b, 0xd5, 0x11,
	0xbd, 0xa6, 0xd7, 0xaf, 0xbb, 0xbb, 0x64, 0x19, 0xf4, 0x67, 0x97, 0xc6, 0xbb, 0x56, 0x03, 0x91,
	0x29, 0xbd, 0x7c, 0xbd, 0x4b, 0x36, 0x60, 0xfa, 0xd8, 0x75, 0x94, 0xc9, 0x83, 0xcf, 0x2d, 0x40,
	0xb4, 0xa9, 0x65, 0x8f, 0x8d, 0x48, 0x53, 0x7c, 0xd7, 0x91, 0x05, 0xa5, 0x69, 0x28, 0x5a, 0x96,
	0x53, 0x38, 0xb4, 0x8b, 0x7b, 0x8b, 0xa5, 0x68, 0x4d, 0xe3, 0xa1, 0xfd, 0xfb, 0x0b, 0x0e, 0x8d,
	0xf6, 0x4f, 0xec, 0x56, 0x61, 0xb5, 0x17, 0x0e, 0xa2, 0xce, 0xc7, 0x1a, 0x2c, 0x6a, 0xd4, 0x17,
	0xe1, 0x51, 0x79, 0x72, 0x82, 0xcb, 0x8b, 0x0b, 0xa8, 0xb6, 0x3e, 0x7e, 0x41, 0x01, 0x91, 0x00,
	0x66, 0x47, 0x4e, 0x5e, 0x70, 0x5d, 0x04, 0xba, 0x67, 0x3d, 0xfa, 0xf2, 0x3b, 0x66, 0xcf, 0x44,
	0x2c, 0x7d, 0x5c, 0x31, 0xdd, 0xf9, 0xbe, 0x06, 0x56, 0xb5, 0xaf, 0xa1, 0xf3, 0x09, 0x97, 0xc7,
	0xba, 0xae, 0x56, 0xa0, 0x1e, 0x27, 0x22, 0x4a, 0x84, 0x3a, 0xcd, 0xea, 0xb5, 0x58, 0x93, 0xbf,
	0xc2, 0x4c, 0x1c, 0x45, 0xfe, 0xbd, 0x73, 0x2d, 0xa4, 0x8d, 0xe2, 0x32, 0xa0, 0x8c, 0xb8, 0x7d,
	0xae, 0x77, 0x20, 0x71, 0xbb, 0x6c, 0x1d, 0x3f, 0xb7, 0x47, 0x5d, 0xc1, 0x09, 0xc0, 0x19, 0xba,
	0xa4, 0xaf, 0x08, 0xba, 0x26, 0x58, 0xe6, 0xc9, 0x94, 0x5e, 0xf6, 0x18, 0xb9, 0x0d, 0x6d, 0x11,
	0x2a, 0x9e, 0x0c, 0x1c, 0x97, 0x57, 0xdb, 0x65, 0xab, 0x90, 0xea, 0x9e, 0x89, 0xd7, 0x44, 0xeb,
	0x3b, 0x8c, 0x25, 0x5c, 0xca, 0xac, 0x16, 0x9a, 0x5a, 0xb6, 0x67, 0x44, 0x58, 0x61, 0x69, 0x3f,
	0xe4, 0xca, 0x54, 0xd8, 0x44, 0x56, 0x61, 0x28, 0xc2, 0x0a, 0xeb, 0xc2, 0x62, 0x94, 0x2a, 0x2f,
	0xd2, 0x53, 0xa9, 0xdc, 0x53, 0x30, 0x2c, 0x94, 0x96, 0x3d, 0x9f, 0x83, 0xbd, 0x1c, 0xeb, 0x31,
	0x72, 0x0f, 0x16, 0x84, 0xa4, 0x8c, 0x63, 0xa1, 0x2a, 0xdd, 0xfb, 0xa3, 0x54, 0xf1, 0x24, 0xab,
	0x1f, 0x22, 0xe4, 0x93, 0x02, 0xb2, 0x11, 0x21, 0x0f, 0xc1, 0x3a, 0x47, 0xa7, 0xc2, 0x8b, 0xf5,
	0x46, 0xd7, 0xcc, 0x6c, 0x66, 0x67, 0x74, 0x7a, 0x5e, 0xdc, 0x63, 0xe4, 0x2f, 0x30, 0x13, 0x72,
	0xe1, 0x1d, 0xf6, 0xa3, 0x82, 0x5f, 0x37, 0xa9, 0xc8, 0xc5, 0x86, 0xa7, 0x5d, 0xf2, 0x62, 0x5a,
	0x70, 0xf3, 0x94, 0x34, 0x90, 0x4c, 0x84, 0x17, 0xbf, 0xcc, 0xa0, 0x3c, 0x33, 0x5d, 0x58, 0x14,
	0xa1, 0x1b, 0x05, 0xe7, 0x02, 0x07, 0x13, 0x78, 0x0e, 0x56, 0x03, 0x5f, 0x85, 0x86, 0x1e, 0xcb,
	0x5c, 0x25, 0xc2, 0xc5, 0xa2, 0x6c, 0xd9, 0x75, 0xc5, 0xf7, 0x71, 0x4d, 0x6e, 0x02, 0x68, 0x17,
	0x32, 0x74, 0x1a, 0xd1, 0x86, 0xf0, 0xe2, 0x0c, 0xfe, 0x33, 0xb4, 0xd3, 0x50, 0x98, 0xbb, 0xc8,
	0xb8, 0xef, 0x9c, 0x5a, 0x2d, 0x33, 0xc9, 0xd2, 0x50, 0xbc, 0x10, 0xe1, 0xd1, 0x13, 0x2d, 0xd3,
	0x17, 0xab, 0x2c, 0xeb, 0x34, 0x14, 0x4a, 0x5a, 0x6d, 0x0c, 0xa1, 0xac, 0xf6, 0xb7, 0x5a, 0x4a,
	0xfe, 0x0e, 0x24, 0x3e, 0x3c, 0x95, 0xc2, 0x75, 0xfc, 0xca, 0x25, 0x9c, 0x41, 0x93, 0x73, 0x39,
	0x52, 0x5e, 0xd8, 0x45, 0x98, 0xea, 0xbb, 0x81, 0x0e, 0x6f, 0x16, 0x29, 0x93, 0x7d, 0x37, 0xe8,
	0x31, 0xd2, 0x83, 0x0d, 0x74, 0x28, 0x1f, 0x63, 0x66, 0x20, 0xe9, 0x06, 0x53, 0x31, 0x3a, 0x87,
	0x1a, 0x6b, 0x9a, 0xb8, 0x6f, 0x78, 0x76, 0x41, 0x2b, 0x77, 0xf8, 0x17, 0xac, 0x54, 0xb4, 0xcf,
	0x96, 0x11, 0x41, 0x1b, 0x56, 0xc9, 0x78, 0x3d, 0x5a, 0x50, 0xe7, 0xb5, 0xab, 0xb5, 0x35, 0x7f,
	0x91, 0x76, 0x59, 0x65, 0xe4, 0x14, 0x96, 0xab, 0xaf, 0x10, 0x0c, 0x09, 0x9f, 0x22, 0xd2, 0x5a,
	0xf8, 0xfc, 0x36, 0x33, 0xfa, 0xd4, 0xb1, 0x17, 0xca, 0xf7, 0x8c, 0x3e, 0x2f, 0x7c, 0xd3, 0x48,
	0xf2, 0x3f, 0xf8, 0x9b, 0x90, 0x34, 0xe1, 0x2e, 0x17, 0xc7, 0xfa, 0x2a, 0x5d, 0x94, 0x41, 0xca,
	0x71, 0x9a, 0x30, 0x6b, 0x11, 0x0b, 0xe4, 0xb6, 0x90, 0x76, 0xce, 0xbf, 0x20, 0x93, 0x4f, 0x0d,
	0x99, 0xfc, 0x03, 0xe6, 0x4b, 0xb3, 0x4c, 0x24, 0xdc, 0x55, 0x22, 0x0a, 0xad, 0x25, 0x73, 0xa3,
	0x0b, 0xe8, 0x49, 0x8e, 0x90, 0x1f, 0x6a, 0xb0, 0x76, 0xb5, 0x23, 0xd6, 0x32, 0x66, 0xe3, 0xc5,
	0x97, 0x3e, 0x14, 0xab, 0x0d, 0xd5, 0xbe, 0x91, 0x5c, 0x11, 0x0c, 0x79, 0x0f, 0x77, 0x85, 0xa4,
	0x2a, 0x71, 0x42, 0x19, 0x08, 0xa5, 0x3e, 0x99, 0x22, 0x0b, 0x53, 0xb4, 0x29, 0xe4, 0x41, 0x45,
	0xe5, 0x8a, 0x2c, 0xed, 0xc2, 0xd2, 0x88, 0xf1, 0x32, 0x51, 0xd7, 0x4d, 0x5f, 0xa9, 0xa2, 0x65,
	0xae, 0x7e, 0xac, 0xc1, 0xc6, 0x27, 0x9d, 0xb2, 0x56, 0xfe, 0x80, 0x74, 0xdd, 0x52, 0x57, 0x07,
	0x46, 0xbe, 0xbd, 0x64, 0xe2, 0x5a, 0xab, 0x38, 0xe0, 0x7b, 0x9f, 0x3b, 0x31, 0xcf, 0x19, 0xb4,
	0xf5, 0x83, 0x5b, 0x5f, 0xe5, 0xea, 0xf0, 0x24, 0xff, 0x04, 0xcb, 0x19, 0x0c, 0x44, 0xa8, 0x5f,
	0x6f, 0x8e, 0x52, 0x89, 0xe8, 0xa7, 0x8a, 0xd3, 0x81, 0xef, 0x78, 0xd2, 0xba, 0x81, 0x75, 0xb8,
	0x94, 0xe3, 0x7b, 0x39, 0xfc, 0x4c, 0xa3, 0xba, 0x99, 0xf0, 0xa1, 0xe2, 0xa1, 0x9e, 0x6f, 0x97,
	0x9a, 0xb8, 0x89, 0x2f, 0x84, 0xb5, 0x9c, 0xb8, 0x77, 0xa1, 0xa9, 0xce, 0x77, 0x63, 0xb0, 0x7a,
	0xc5, 0x9f, 0x09, 0x59, 0x83, 0xa6, 0xee, 0xb5, 0xfa, 0x3b, 0x9f, 0x9e, 0x0d, 0x6c, 0xb6, 0xfa,
	0x3f, 0xa5, 0xc7, 0xcc, 0x90, 0x8f, 0x54, 0xe4, 0x46, 0x7e, 0xfe, 0xa7, 0x91, 0xaf, 0xf1, 0x37,
	0xe4, 0x54, 0x2a, 0x8e, 0xdd, 0x70, 0x3c, 0xfb, 0x0d, 0x41, 0x81, 0xe9, 0xf0, 0xf9, 0x74, 0x62,
	0xd9, 0xb4, 0xac, 0x1b, 0x41, 0x8f, 0x91, 0x6f, 0xa0, 0x55, 0x9d, 0xdf, 0xd2, 0x9a, 0xfc, 0x3a,
	0xf7, 0xa3, 0x6a, 0xd4, 0x9e, 0xce, 0x56, 0xfa, 0x60, 0x64, 0x7f, 0x0a, 0xdd, 0xde, 0xf9, 0x2d,
	0x00, 0x00, 0xff, 0xff, 0x32, 0x3e, 0xd0, 0x22, 0x74, 0x0f, 0x00, 0x00,
}
