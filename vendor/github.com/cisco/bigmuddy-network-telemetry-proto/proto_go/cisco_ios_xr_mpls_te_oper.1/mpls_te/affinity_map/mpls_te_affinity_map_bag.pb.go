// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_affinity_map_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_affinity_map

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A set of affinity maps
type MplsTeAffinityMapBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAffinityMapBag_KEYS) Reset()         { *m = MplsTeAffinityMapBag_KEYS{} }
func (m *MplsTeAffinityMapBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeAffinityMapBag_KEYS) ProtoMessage()    {}
func (*MplsTeAffinityMapBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_affinity_map_bag_41c00631e01caf16, []int{0}
}
func (m *MplsTeAffinityMapBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAffinityMapBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeAffinityMapBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAffinityMapBag_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsTeAffinityMapBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAffinityMapBag_KEYS.Merge(dst, src)
}
func (m *MplsTeAffinityMapBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeAffinityMapBag_KEYS.Size(m)
}
func (m *MplsTeAffinityMapBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAffinityMapBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAffinityMapBag_KEYS proto.InternalMessageInfo

type MplsTeAffinityMapBag struct {
	// Affinity map array
	AffinityMapArray     []*MplsTeAffinityMapInfo `protobuf:"bytes,50,rep,name=affinity_map_array,json=affinityMapArray" json:"affinity_map_array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MplsTeAffinityMapBag) Reset()         { *m = MplsTeAffinityMapBag{} }
func (m *MplsTeAffinityMapBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeAffinityMapBag) ProtoMessage()    {}
func (*MplsTeAffinityMapBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_affinity_map_bag_41c00631e01caf16, []int{1}
}
func (m *MplsTeAffinityMapBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAffinityMapBag.Unmarshal(m, b)
}
func (m *MplsTeAffinityMapBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAffinityMapBag.Marshal(b, m, deterministic)
}
func (dst *MplsTeAffinityMapBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAffinityMapBag.Merge(dst, src)
}
func (m *MplsTeAffinityMapBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeAffinityMapBag.Size(m)
}
func (m *MplsTeAffinityMapBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAffinityMapBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAffinityMapBag proto.InternalMessageInfo

func (m *MplsTeAffinityMapBag) GetAffinityMapArray() []*MplsTeAffinityMapInfo {
	if m != nil {
		return m.AffinityMapArray
	}
	return nil
}

// Affinity Map
type MplsTeAffinityMapInfo struct {
	// Affinity name
	AffinityName string `protobuf:"bytes,1,opt,name=affinity_name,json=affinityName" json:"affinity_name,omitempty"`
	// Affinity value
	AffinityValue uint32 `protobuf:"varint,2,opt,name=affinity_value,json=affinityValue" json:"affinity_value,omitempty"`
	// EAG value
	AffinityExtendedValue []uint32 `protobuf:"varint,3,rep,packed,name=affinity_extended_value,json=affinityExtendedValue" json:"affinity_extended_value,omitempty"`
	// Affinity bit position
	AffinityBitPosition uint32 `protobuf:"varint,4,opt,name=affinity_bit_position,json=affinityBitPosition" json:"affinity_bit_position,omitempty"`
	// Affinity table id
	AffinityTableId      string   `protobuf:"bytes,5,opt,name=affinity_table_id,json=affinityTableId" json:"affinity_table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAffinityMapInfo) Reset()         { *m = MplsTeAffinityMapInfo{} }
func (m *MplsTeAffinityMapInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAffinityMapInfo) ProtoMessage()    {}
func (*MplsTeAffinityMapInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_affinity_map_bag_41c00631e01caf16, []int{2}
}
func (m *MplsTeAffinityMapInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAffinityMapInfo.Unmarshal(m, b)
}
func (m *MplsTeAffinityMapInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAffinityMapInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAffinityMapInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAffinityMapInfo.Merge(dst, src)
}
func (m *MplsTeAffinityMapInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAffinityMapInfo.Size(m)
}
func (m *MplsTeAffinityMapInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAffinityMapInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAffinityMapInfo proto.InternalMessageInfo

func (m *MplsTeAffinityMapInfo) GetAffinityName() string {
	if m != nil {
		return m.AffinityName
	}
	return ""
}

func (m *MplsTeAffinityMapInfo) GetAffinityValue() uint32 {
	if m != nil {
		return m.AffinityValue
	}
	return 0
}

func (m *MplsTeAffinityMapInfo) GetAffinityExtendedValue() []uint32 {
	if m != nil {
		return m.AffinityExtendedValue
	}
	return nil
}

func (m *MplsTeAffinityMapInfo) GetAffinityBitPosition() uint32 {
	if m != nil {
		return m.AffinityBitPosition
	}
	return 0
}

func (m *MplsTeAffinityMapInfo) GetAffinityTableId() string {
	if m != nil {
		return m.AffinityTableId
	}
	return ""
}

func init() {
	proto.RegisterType((*MplsTeAffinityMapBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.affinity_map.mpls_te_affinity_map_bag_KEYS")
	proto.RegisterType((*MplsTeAffinityMapBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.affinity_map.mpls_te_affinity_map_bag")
	proto.RegisterType((*MplsTeAffinityMapInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.affinity_map.mpls_te_affinity_map_info")
}

func init() {
	proto.RegisterFile("mpls_te_affinity_map_bag.proto", fileDescriptor_mpls_te_affinity_map_bag_41c00631e01caf16)
}

var fileDescriptor_mpls_te_affinity_map_bag_41c00631e01caf16 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0xa9, 0x55, 0xc1, 0x68, 0xfd, 0x89, 0x88, 0x71, 0xa1, 0x96, 0x8a, 0x50, 0x5c, 0x74,
	0x51, 0xc1, 0xbd, 0xc2, 0x2c, 0x06, 0x51, 0xa4, 0x8a, 0xe0, 0xea, 0x92, 0x4e, 0x53, 0xb9, 0xd0,
	0x36, 0x21, 0x8d, 0x3a, 0xf3, 0x1c, 0x3e, 0xb0, 0xd2, 0xda, 0x04, 0x05, 0xbb, 0x98, 0x65, 0xcf,
	0xf7, 0x9d, 0x9e, 0x0b, 0x21, 0x27, 0xb5, 0xaa, 0x5a, 0x30, 0x02, 0x78, 0x59, 0x62, 0x83, 0x66,
	0x01, 0x35, 0x57, 0x90, 0xf3, 0xd7, 0x44, 0x69, 0x69, 0x24, 0x4d, 0x66, 0xd8, 0xce, 0x24, 0xa0,
	0x6c, 0x61, 0xae, 0xc1, 0xca, 0x52, 0x09, 0x9d, 0x0c, 0x1f, 0xc9, 0xef, 0x66, 0x74, 0x4a, 0x8e,
	0xc7, 0xfe, 0x08, 0xb7, 0x93, 0x97, 0xc7, 0xe8, 0xd3, 0x23, 0x6c, 0xcc, 0xa0, 0x1f, 0x84, 0xfe,
	0xc9, 0xb8, 0xd6, 0x7c, 0xc1, 0xd2, 0xd0, 0x8f, 0x37, 0xd3, 0xe9, 0x92, 0xa7, 0x24, 0xff, 0xae,
	0x60, 0x53, 0xca, 0x6c, 0xd7, 0x46, 0x77, 0x5c, 0x5d, 0x77, 0x13, 0xd1, 0x97, 0x47, 0x8e, 0x46,
	0x7d, 0x7a, 0x46, 0x02, 0x17, 0x36, 0xbc, 0x16, 0xcc, 0x0b, 0xbd, 0x78, 0x23, 0xdb, 0xb2, 0xe1,
	0x3d, 0xaf, 0x05, 0x3d, 0x27, 0xdb, 0x4e, 0x7a, 0xe7, 0xd5, 0x9b, 0x60, 0x2b, 0xa1, 0x17, 0x07,
	0x99, 0xab, 0x3e, 0x77, 0x21, 0xbd, 0x22, 0x87, 0x4e, 0x13, 0x73, 0x23, 0x9a, 0x42, 0x14, 0x83,
	0xef, 0x87, 0x7e, 0x1c, 0x64, 0x07, 0x16, 0x4f, 0x06, 0xfa, 0xd3, 0x4b, 0x89, 0x03, 0x90, 0xa3,
	0x01, 0x25, 0x5b, 0x34, 0x28, 0x1b, 0xb6, 0xda, 0xaf, 0xec, 0x5b, 0x78, 0x83, 0xe6, 0x61, 0x40,
	0xf4, 0x82, 0xec, 0xb9, 0x8e, 0xe1, 0x79, 0x25, 0x00, 0x0b, 0xb6, 0xd6, 0xdf, 0xbe, 0x63, 0xc1,
	0x53, 0x97, 0x4f, 0x8b, 0x7c, 0xbd, 0x7f, 0xef, 0xcb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x77,
	0x1e, 0x43, 0xc0, 0x11, 0x02, 0x00, 0x00,
}
