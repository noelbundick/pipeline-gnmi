// Code generated by protoc-gen-go. DO NOT EDIT.
// source: te_stats_autobackup_t.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_auto_tunnel_backup_statistics

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Counters for TE Autobackup
type TeStatsAutobackupT_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeStatsAutobackupT_KEYS) Reset()         { *m = TeStatsAutobackupT_KEYS{} }
func (m *TeStatsAutobackupT_KEYS) String() string { return proto.CompactTextString(m) }
func (*TeStatsAutobackupT_KEYS) ProtoMessage()    {}
func (*TeStatsAutobackupT_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_stats_autobackup_t_a9af7d14ad59a9da, []int{0}
}
func (m *TeStatsAutobackupT_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeStatsAutobackupT_KEYS.Unmarshal(m, b)
}
func (m *TeStatsAutobackupT_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeStatsAutobackupT_KEYS.Marshal(b, m, deterministic)
}
func (dst *TeStatsAutobackupT_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeStatsAutobackupT_KEYS.Merge(dst, src)
}
func (m *TeStatsAutobackupT_KEYS) XXX_Size() int {
	return xxx_messageInfo_TeStatsAutobackupT_KEYS.Size(m)
}
func (m *TeStatsAutobackupT_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TeStatsAutobackupT_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TeStatsAutobackupT_KEYS proto.InternalMessageInfo

type TeStatsAutobackupT struct {
	// Number of connected auto backup tunnels
	Created *TeStatsAutobackupCountersT `protobuf:"bytes,50,opt,name=created" json:"created,omitempty"`
	// Number of connected auto backup tunnels
	Connected *TeStatsAutobackupCountersT `protobuf:"bytes,51,opt,name=connected" json:"connected,omitempty"`
	// Number of NNHOP auto backup tunnels removed while down
	RemovedDown *TeStatsAutobackupCountersT `protobuf:"bytes,52,opt,name=removed_down,json=removedDown" json:"removed_down,omitempty"`
	// Number of auto backup tunnels removed while unused
	RemovedUnused *TeStatsAutobackupCountersT `protobuf:"bytes,53,opt,name=removed_unused,json=removedUnused" json:"removed_unused,omitempty"`
	// Number of auto backup tunnels removed while up and in use
	RemovedInUse *TeStatsAutobackupCountersT `protobuf:"bytes,54,opt,name=removed_in_use,json=removedInUse" json:"removed_in_use,omitempty"`
	// Number of auto backup tunnel attempts rejected because the total number exceeds the range
	RemovedRangeExceeded *TeStatsAutobackupCountersT `protobuf:"bytes,55,opt,name=removed_range_exceeded,json=removedRangeExceeded" json:"removed_range_exceeded,omitempty"`
	// Timestamp when the stat has been cleared
	LastClearedTime      uint32   `protobuf:"varint,56,opt,name=last_cleared_time,json=lastClearedTime" json:"last_cleared_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeStatsAutobackupT) Reset()         { *m = TeStatsAutobackupT{} }
func (m *TeStatsAutobackupT) String() string { return proto.CompactTextString(m) }
func (*TeStatsAutobackupT) ProtoMessage()    {}
func (*TeStatsAutobackupT) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_stats_autobackup_t_a9af7d14ad59a9da, []int{1}
}
func (m *TeStatsAutobackupT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeStatsAutobackupT.Unmarshal(m, b)
}
func (m *TeStatsAutobackupT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeStatsAutobackupT.Marshal(b, m, deterministic)
}
func (dst *TeStatsAutobackupT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeStatsAutobackupT.Merge(dst, src)
}
func (m *TeStatsAutobackupT) XXX_Size() int {
	return xxx_messageInfo_TeStatsAutobackupT.Size(m)
}
func (m *TeStatsAutobackupT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeStatsAutobackupT.DiscardUnknown(m)
}

var xxx_messageInfo_TeStatsAutobackupT proto.InternalMessageInfo

func (m *TeStatsAutobackupT) GetCreated() *TeStatsAutobackupCountersT {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *TeStatsAutobackupT) GetConnected() *TeStatsAutobackupCountersT {
	if m != nil {
		return m.Connected
	}
	return nil
}

func (m *TeStatsAutobackupT) GetRemovedDown() *TeStatsAutobackupCountersT {
	if m != nil {
		return m.RemovedDown
	}
	return nil
}

func (m *TeStatsAutobackupT) GetRemovedUnused() *TeStatsAutobackupCountersT {
	if m != nil {
		return m.RemovedUnused
	}
	return nil
}

func (m *TeStatsAutobackupT) GetRemovedInUse() *TeStatsAutobackupCountersT {
	if m != nil {
		return m.RemovedInUse
	}
	return nil
}

func (m *TeStatsAutobackupT) GetRemovedRangeExceeded() *TeStatsAutobackupCountersT {
	if m != nil {
		return m.RemovedRangeExceeded
	}
	return nil
}

func (m *TeStatsAutobackupT) GetLastClearedTime() uint32 {
	if m != nil {
		return m.LastClearedTime
	}
	return 0
}

// TE Auto Backup Counter Types
type TeStatsAutobackupCountersT struct {
	// Total auto backup tunnels
	TotalTunnels uint32 `protobuf:"varint,1,opt,name=total_tunnels,json=totalTunnels" json:"total_tunnels,omitempty"`
	// Next hop auto backup tunnels only
	NextHopTunnels uint32 `protobuf:"varint,2,opt,name=next_hop_tunnels,json=nextHopTunnels" json:"next_hop_tunnels,omitempty"`
	// Next next hop auto backup tunnels only
	NextNextHopTunnels   uint32   `protobuf:"varint,3,opt,name=next_next_hop_tunnels,json=nextNextHopTunnels" json:"next_next_hop_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeStatsAutobackupCountersT) Reset()         { *m = TeStatsAutobackupCountersT{} }
func (m *TeStatsAutobackupCountersT) String() string { return proto.CompactTextString(m) }
func (*TeStatsAutobackupCountersT) ProtoMessage()    {}
func (*TeStatsAutobackupCountersT) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_stats_autobackup_t_a9af7d14ad59a9da, []int{2}
}
func (m *TeStatsAutobackupCountersT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeStatsAutobackupCountersT.Unmarshal(m, b)
}
func (m *TeStatsAutobackupCountersT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeStatsAutobackupCountersT.Marshal(b, m, deterministic)
}
func (dst *TeStatsAutobackupCountersT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeStatsAutobackupCountersT.Merge(dst, src)
}
func (m *TeStatsAutobackupCountersT) XXX_Size() int {
	return xxx_messageInfo_TeStatsAutobackupCountersT.Size(m)
}
func (m *TeStatsAutobackupCountersT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeStatsAutobackupCountersT.DiscardUnknown(m)
}

var xxx_messageInfo_TeStatsAutobackupCountersT proto.InternalMessageInfo

func (m *TeStatsAutobackupCountersT) GetTotalTunnels() uint32 {
	if m != nil {
		return m.TotalTunnels
	}
	return 0
}

func (m *TeStatsAutobackupCountersT) GetNextHopTunnels() uint32 {
	if m != nil {
		return m.NextHopTunnels
	}
	return 0
}

func (m *TeStatsAutobackupCountersT) GetNextNextHopTunnels() uint32 {
	if m != nil {
		return m.NextNextHopTunnels
	}
	return 0
}

func init() {
	proto.RegisterType((*TeStatsAutobackupT_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.auto_tunnel.backup.statistics.te_stats_autobackup_t_KEYS")
	proto.RegisterType((*TeStatsAutobackupT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.auto_tunnel.backup.statistics.te_stats_autobackup_t")
	proto.RegisterType((*TeStatsAutobackupCountersT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.auto_tunnel.backup.statistics.te_stats_autobackup_counters_t")
}

func init() {
	proto.RegisterFile("te_stats_autobackup_t.proto", fileDescriptor_te_stats_autobackup_t_a9af7d14ad59a9da)
}

var fileDescriptor_te_stats_autobackup_t_a9af7d14ad59a9da = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xcd, 0x4a, 0xeb, 0x40,
	0x14, 0xc7, 0xc9, 0xbd, 0xd0, 0xcb, 0x9d, 0x7e, 0xa8, 0x83, 0x95, 0xa0, 0x22, 0xa5, 0x6e, 0x8a,
	0x8b, 0x80, 0xad, 0x5f, 0x3b, 0x17, 0x5a, 0x50, 0x04, 0x17, 0xb5, 0x5d, 0xb8, 0x3a, 0x4c, 0x27,
	0x07, 0x0d, 0x26, 0x33, 0x61, 0xe6, 0xc4, 0xd6, 0x85, 0x1b, 0x41, 0xdf, 0xc0, 0x17, 0xf0, 0xf5,
	0x7c, 0x09, 0x49, 0x9a, 0xf8, 0x81, 0xc5, 0x8d, 0x90, 0x65, 0xfe, 0xe7, 0x7f, 0xce, 0xef, 0x07,
	0x81, 0x61, 0x6b, 0x84, 0x60, 0x49, 0x90, 0x05, 0x91, 0x90, 0x1e, 0x0b, 0x79, 0x93, 0xc4, 0x40,
	0x5e, 0x6c, 0x34, 0x69, 0x7e, 0x28, 0x03, 0x2b, 0x35, 0x04, 0xda, 0xc2, 0xd4, 0x40, 0x14, 0x87,
	0x16, 0x08, 0x41, 0xc7, 0x68, 0xbc, 0xfc, 0xc3, 0x4b, 0xb7, 0x80, 0x12, 0xa5, 0x30, 0xf4, 0x66,
	0xdb, 0x5e, 0x7a, 0x2e, 0xb0, 0x14, 0x48, 0xdb, 0x5e, 0x67, 0xab, 0x73, 0xef, 0xc3, 0x59, 0xff,
	0xf2, 0xa2, 0xfd, 0x5a, 0x61, 0xcd, 0xb9, 0x63, 0x7e, 0xc7, 0xfe, 0x49, 0x83, 0x82, 0xd0, 0x77,
	0xbb, 0x2d, 0xa7, 0x53, 0xed, 0x82, 0xf7, 0x4b, 0x15, 0x6f, 0x1e, 0x48, 0xea, 0x44, 0x11, 0x1a,
	0x0b, 0x34, 0x28, 0x78, 0xfc, 0x9e, 0xfd, 0x97, 0x5a, 0x29, 0x94, 0x29, 0xbc, 0x57, 0x0e, 0xfc,
	0x83, 0xc8, 0x1f, 0x1c, 0x56, 0x33, 0x18, 0xe9, 0x5b, 0xf4, 0xc1, 0xd7, 0x13, 0xe5, 0xee, 0x94,
	0xa3, 0x50, 0xcd, 0xa1, 0xc7, 0x7a, 0xa2, 0xf8, 0x93, 0xc3, 0x1a, 0x85, 0x44, 0xa2, 0x12, 0x8b,
	0xbe, 0xbb, 0x5b, 0x8e, 0x46, 0x3d, 0xc7, 0x8e, 0x32, 0x2a, 0x7f, 0xfc, 0x24, 0x12, 0x28, 0x48,
	0x2c, 0xba, 0x7b, 0xe5, 0x88, 0x14, 0x3f, 0xe1, 0x54, 0x8d, 0x2c, 0xf2, 0x67, 0x87, 0xad, 0x14,
	0x1e, 0x46, 0xa8, 0x2b, 0x04, 0x9c, 0x4a, 0x44, 0x1f, 0x7d, 0x77, 0xbf, 0x1c, 0x9f, 0xe5, 0x1c,
	0x3f, 0x48, 0xe9, 0xfd, 0x1c, 0xce, 0xb7, 0xd8, 0x52, 0x28, 0x2c, 0x81, 0x0c, 0x51, 0x18, 0xf4,
	0x81, 0x82, 0x08, 0xdd, 0x83, 0x96, 0xd3, 0xa9, 0x0f, 0x16, 0xd2, 0xc1, 0xd1, 0x2c, 0x1f, 0x06,
	0x11, 0xb6, 0x5f, 0x1c, 0xb6, 0xf1, 0x33, 0x84, 0x6f, 0xb2, 0x3a, 0x69, 0x12, 0x61, 0x6e, 0x69,
	0x5d, 0x27, 0x3b, 0x55, 0xcb, 0xc2, 0xe1, 0x2c, 0xe3, 0x1d, 0xb6, 0xa8, 0x70, 0x4a, 0x70, 0xad,
	0xe3, 0xf7, 0xde, 0x9f, 0xac, 0xd7, 0x48, 0xf3, 0x13, 0x1d, 0x17, 0xcd, 0x6d, 0xd6, 0xcc, 0x9a,
	0xdf, 0xea, 0x7f, 0xb3, 0x3a, 0x4f, 0xf3, 0xf3, 0x2f, 0x2b, 0xe3, 0x4a, 0xf6, 0xf0, 0xf4, 0xde,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xc2, 0x60, 0x1b, 0x97, 0x04, 0x00, 0x00,
}
