// Code generated by protoc-gen-go. DO NOT EDIT.
// source: te_nexthop_route.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_next_hop_routes_next_hop_route

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TeNexthopRoute_KEYS struct {
	PrefixAddress        string   `protobuf:"bytes,1,opt,name=prefix_address,json=prefixAddress" json:"prefix_address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,2,opt,name=prefix_length,json=prefixLength" json:"prefix_length,omitempty"`
	NextHopType          string   `protobuf:"bytes,3,opt,name=next_hop_type,json=nextHopType" json:"next_hop_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeNexthopRoute_KEYS) Reset()         { *m = TeNexthopRoute_KEYS{} }
func (m *TeNexthopRoute_KEYS) String() string { return proto.CompactTextString(m) }
func (*TeNexthopRoute_KEYS) ProtoMessage()    {}
func (*TeNexthopRoute_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nexthop_route_182ad3906750ed65, []int{0}
}
func (m *TeNexthopRoute_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeNexthopRoute_KEYS.Unmarshal(m, b)
}
func (m *TeNexthopRoute_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeNexthopRoute_KEYS.Marshal(b, m, deterministic)
}
func (dst *TeNexthopRoute_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeNexthopRoute_KEYS.Merge(dst, src)
}
func (m *TeNexthopRoute_KEYS) XXX_Size() int {
	return xxx_messageInfo_TeNexthopRoute_KEYS.Size(m)
}
func (m *TeNexthopRoute_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TeNexthopRoute_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TeNexthopRoute_KEYS proto.InternalMessageInfo

func (m *TeNexthopRoute_KEYS) GetPrefixAddress() string {
	if m != nil {
		return m.PrefixAddress
	}
	return ""
}

func (m *TeNexthopRoute_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

func (m *TeNexthopRoute_KEYS) GetNextHopType() string {
	if m != nil {
		return m.NextHopType
	}
	return ""
}

type TeNexthopRoute struct {
	PrefixAddress          string          `protobuf:"bytes,50,opt,name=prefix_address,json=prefixAddress" json:"prefix_address,omitempty"`
	PrefixLength           uint32          `protobuf:"varint,51,opt,name=prefix_length,json=prefixLength" json:"prefix_length,omitempty"`
	ExactMatch             bool            `protobuf:"varint,52,opt,name=exact_match,json=exactMatch" json:"exact_match,omitempty"`
	CreateTime             uint32          `protobuf:"varint,53,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	LastUsedTime           uint32          `protobuf:"varint,54,opt,name=last_used_time,json=lastUsedTime" json:"last_used_time,omitempty"`
	ExpireTime             uint32          `protobuf:"varint,55,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
	InstalledTunnelPathNum uint32          `protobuf:"varint,56,opt,name=installed_tunnel_path_num,json=installedTunnelPathNum" json:"installed_tunnel_path_num,omitempty"`
	TunnelPaths            []*TeTunnelPath `protobuf:"bytes,57,rep,name=tunnel_paths,json=tunnelPaths" json:"tunnel_paths,omitempty"`
	ActiveRoute            *TeRibRouteBag  `protobuf:"bytes,58,opt,name=active_route,json=activeRoute" json:"active_route,omitempty"`
	BackupRoute            *TeRibRouteBag  `protobuf:"bytes,59,opt,name=backup_route,json=backupRoute" json:"backup_route,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}        `json:"-"`
	XXX_unrecognized       []byte          `json:"-"`
	XXX_sizecache          int32           `json:"-"`
}

func (m *TeNexthopRoute) Reset()         { *m = TeNexthopRoute{} }
func (m *TeNexthopRoute) String() string { return proto.CompactTextString(m) }
func (*TeNexthopRoute) ProtoMessage()    {}
func (*TeNexthopRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nexthop_route_182ad3906750ed65, []int{1}
}
func (m *TeNexthopRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeNexthopRoute.Unmarshal(m, b)
}
func (m *TeNexthopRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeNexthopRoute.Marshal(b, m, deterministic)
}
func (dst *TeNexthopRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeNexthopRoute.Merge(dst, src)
}
func (m *TeNexthopRoute) XXX_Size() int {
	return xxx_messageInfo_TeNexthopRoute.Size(m)
}
func (m *TeNexthopRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_TeNexthopRoute.DiscardUnknown(m)
}

var xxx_messageInfo_TeNexthopRoute proto.InternalMessageInfo

func (m *TeNexthopRoute) GetPrefixAddress() string {
	if m != nil {
		return m.PrefixAddress
	}
	return ""
}

func (m *TeNexthopRoute) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

func (m *TeNexthopRoute) GetExactMatch() bool {
	if m != nil {
		return m.ExactMatch
	}
	return false
}

func (m *TeNexthopRoute) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *TeNexthopRoute) GetLastUsedTime() uint32 {
	if m != nil {
		return m.LastUsedTime
	}
	return 0
}

func (m *TeNexthopRoute) GetExpireTime() uint32 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *TeNexthopRoute) GetInstalledTunnelPathNum() uint32 {
	if m != nil {
		return m.InstalledTunnelPathNum
	}
	return 0
}

func (m *TeNexthopRoute) GetTunnelPaths() []*TeTunnelPath {
	if m != nil {
		return m.TunnelPaths
	}
	return nil
}

func (m *TeNexthopRoute) GetActiveRoute() *TeRibRouteBag {
	if m != nil {
		return m.ActiveRoute
	}
	return nil
}

func (m *TeNexthopRoute) GetBackupRoute() *TeRibRouteBag {
	if m != nil {
		return m.BackupRoute
	}
	return nil
}

type TeNexthopPath struct {
	Interface            string   `protobuf:"bytes,1,opt,name=interface" json:"interface,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	AbrAddress           string   `protobuf:"bytes,3,opt,name=abr_address,json=abrAddress" json:"abr_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeNexthopPath) Reset()         { *m = TeNexthopPath{} }
func (m *TeNexthopPath) String() string { return proto.CompactTextString(m) }
func (*TeNexthopPath) ProtoMessage()    {}
func (*TeNexthopPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nexthop_route_182ad3906750ed65, []int{2}
}
func (m *TeNexthopPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeNexthopPath.Unmarshal(m, b)
}
func (m *TeNexthopPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeNexthopPath.Marshal(b, m, deterministic)
}
func (dst *TeNexthopPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeNexthopPath.Merge(dst, src)
}
func (m *TeNexthopPath) XXX_Size() int {
	return xxx_messageInfo_TeNexthopPath.Size(m)
}
func (m *TeNexthopPath) XXX_DiscardUnknown() {
	xxx_messageInfo_TeNexthopPath.DiscardUnknown(m)
}

var xxx_messageInfo_TeNexthopPath proto.InternalMessageInfo

func (m *TeNexthopPath) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *TeNexthopPath) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TeNexthopPath) GetAbrAddress() string {
	if m != nil {
		return m.AbrAddress
	}
	return ""
}

type TeTunnelPath struct {
	TunnelId             uint32   `protobuf:"varint,1,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	InterfaceHandle      string   `protobuf:"bytes,2,opt,name=interface_handle,json=interfaceHandle" json:"interface_handle,omitempty"`
	InstallTime          uint32   `protobuf:"varint,3,opt,name=install_time,json=installTime" json:"install_time,omitempty"`
	InstalledMetric      uint32   `protobuf:"varint,4,opt,name=installed_metric,json=installedMetric" json:"installed_metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeTunnelPath) Reset()         { *m = TeTunnelPath{} }
func (m *TeTunnelPath) String() string { return proto.CompactTextString(m) }
func (*TeTunnelPath) ProtoMessage()    {}
func (*TeTunnelPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nexthop_route_182ad3906750ed65, []int{3}
}
func (m *TeTunnelPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeTunnelPath.Unmarshal(m, b)
}
func (m *TeTunnelPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeTunnelPath.Marshal(b, m, deterministic)
}
func (dst *TeTunnelPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeTunnelPath.Merge(dst, src)
}
func (m *TeTunnelPath) XXX_Size() int {
	return xxx_messageInfo_TeTunnelPath.Size(m)
}
func (m *TeTunnelPath) XXX_DiscardUnknown() {
	xxx_messageInfo_TeTunnelPath.DiscardUnknown(m)
}

var xxx_messageInfo_TeTunnelPath proto.InternalMessageInfo

func (m *TeTunnelPath) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *TeTunnelPath) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *TeTunnelPath) GetInstallTime() uint32 {
	if m != nil {
		return m.InstallTime
	}
	return 0
}

func (m *TeTunnelPath) GetInstalledMetric() uint32 {
	if m != nil {
		return m.InstalledMetric
	}
	return 0
}

type TeRibRouteBag struct {
	RouteProtocolName    string           `protobuf:"bytes,1,opt,name=route_protocol_name,json=routeProtocolName" json:"route_protocol_name,omitempty"`
	RouteDistance        uint32           `protobuf:"varint,2,opt,name=route_distance,json=routeDistance" json:"route_distance,omitempty"`
	RouteMetric          uint32           `protobuf:"varint,3,opt,name=route_metric,json=routeMetric" json:"route_metric,omitempty"`
	LastUpdateTime       uint32           `protobuf:"varint,4,opt,name=last_update_time,json=lastUpdateTime" json:"last_update_time,omitempty"`
	IsRegistered         bool             `protobuf:"varint,5,opt,name=is_registered,json=isRegistered" json:"is_registered,omitempty"`
	IsStale              bool             `protobuf:"varint,6,opt,name=is_stale,json=isStale" json:"is_stale,omitempty"`
	IsDefault            bool             `protobuf:"varint,7,opt,name=is_default,json=isDefault" json:"is_default,omitempty"`
	IsConnected          bool             `protobuf:"varint,8,opt,name=is_connected,json=isConnected" json:"is_connected,omitempty"`
	IsPopulated          bool             `protobuf:"varint,9,opt,name=is_populated,json=isPopulated" json:"is_populated,omitempty"`
	RouteType            uint32           `protobuf:"varint,10,opt,name=route_type,json=routeType" json:"route_type,omitempty"`
	NextHopPaths         []*TeNexthopPath `protobuf:"bytes,11,rep,name=next_hop_paths,json=nextHopPaths" json:"next_hop_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TeRibRouteBag) Reset()         { *m = TeRibRouteBag{} }
func (m *TeRibRouteBag) String() string { return proto.CompactTextString(m) }
func (*TeRibRouteBag) ProtoMessage()    {}
func (*TeRibRouteBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nexthop_route_182ad3906750ed65, []int{4}
}
func (m *TeRibRouteBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeRibRouteBag.Unmarshal(m, b)
}
func (m *TeRibRouteBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeRibRouteBag.Marshal(b, m, deterministic)
}
func (dst *TeRibRouteBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeRibRouteBag.Merge(dst, src)
}
func (m *TeRibRouteBag) XXX_Size() int {
	return xxx_messageInfo_TeRibRouteBag.Size(m)
}
func (m *TeRibRouteBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TeRibRouteBag.DiscardUnknown(m)
}

var xxx_messageInfo_TeRibRouteBag proto.InternalMessageInfo

func (m *TeRibRouteBag) GetRouteProtocolName() string {
	if m != nil {
		return m.RouteProtocolName
	}
	return ""
}

func (m *TeRibRouteBag) GetRouteDistance() uint32 {
	if m != nil {
		return m.RouteDistance
	}
	return 0
}

func (m *TeRibRouteBag) GetRouteMetric() uint32 {
	if m != nil {
		return m.RouteMetric
	}
	return 0
}

func (m *TeRibRouteBag) GetLastUpdateTime() uint32 {
	if m != nil {
		return m.LastUpdateTime
	}
	return 0
}

func (m *TeRibRouteBag) GetIsRegistered() bool {
	if m != nil {
		return m.IsRegistered
	}
	return false
}

func (m *TeRibRouteBag) GetIsStale() bool {
	if m != nil {
		return m.IsStale
	}
	return false
}

func (m *TeRibRouteBag) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

func (m *TeRibRouteBag) GetIsConnected() bool {
	if m != nil {
		return m.IsConnected
	}
	return false
}

func (m *TeRibRouteBag) GetIsPopulated() bool {
	if m != nil {
		return m.IsPopulated
	}
	return false
}

func (m *TeRibRouteBag) GetRouteType() uint32 {
	if m != nil {
		return m.RouteType
	}
	return 0
}

func (m *TeRibRouteBag) GetNextHopPaths() []*TeNexthopPath {
	if m != nil {
		return m.NextHopPaths
	}
	return nil
}

func init() {
	proto.RegisterType((*TeNexthopRoute_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.next_hop_routes.next_hop_route.te_nexthop_route_KEYS")
	proto.RegisterType((*TeNexthopRoute)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.next_hop_routes.next_hop_route.te_nexthop_route")
	proto.RegisterType((*TeNexthopPath)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.next_hop_routes.next_hop_route.te_nexthop_path")
	proto.RegisterType((*TeTunnelPath)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.next_hop_routes.next_hop_route.te_tunnel_path")
	proto.RegisterType((*TeRibRouteBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.next_hop_routes.next_hop_route.te_rib_route_bag")
}

func init() {
	proto.RegisterFile("te_nexthop_route.proto", fileDescriptor_te_nexthop_route_182ad3906750ed65)
}

var fileDescriptor_te_nexthop_route_182ad3906750ed65 = []byte{
	// 701 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xcb, 0x6e, 0x13, 0x31,
	0x14, 0x86, 0x95, 0x86, 0xb6, 0xc9, 0x99, 0x24, 0x2d, 0x46, 0x54, 0x53, 0x01, 0x22, 0xa4, 0x20,
	0x85, 0x4d, 0x16, 0x2d, 0xb7, 0xc2, 0x06, 0x44, 0x91, 0x8a, 0xa0, 0x55, 0x98, 0xb6, 0x0b, 0x56,
	0x96, 0x33, 0x73, 0xda, 0x18, 0xe6, 0x26, 0xdb, 0x03, 0xe9, 0x03, 0x20, 0xde, 0x84, 0x17, 0xe4,
	0x05, 0x90, 0x8f, 0x9d, 0xe9, 0x45, 0x5d, 0x20, 0x51, 0x96, 0xfe, 0xfc, 0xcf, 0xf9, 0x8f, 0x3d,
	0xff, 0x31, 0xac, 0x19, 0xe4, 0x39, 0xce, 0xcc, 0xb4, 0x28, 0xb9, 0x2a, 0x2a, 0x83, 0xa3, 0x52,
	0x15, 0xa6, 0x60, 0xaf, 0x63, 0xa9, 0xe3, 0x82, 0xcb, 0x42, 0xf3, 0x99, 0xe2, 0x59, 0x99, 0x6a,
	0x6e, 0x90, 0x17, 0x25, 0xaa, 0x91, 0x5f, 0x8c, 0xec, 0x67, 0xbc, 0xfe, 0x4e, 0x5f, 0x5a, 0x0f,
	0x7e, 0x36, 0xe0, 0xf6, 0xe5, 0xe2, 0xfc, 0xc3, 0xbb, 0xcf, 0x07, 0xec, 0x11, 0xf4, 0x4a, 0x85,
	0xc7, 0x72, 0xc6, 0x45, 0x92, 0x28, 0xd4, 0x3a, 0x6c, 0xf4, 0x1b, 0xc3, 0x76, 0xd4, 0x75, 0xf4,
	0x8d, 0x83, 0x6c, 0x03, 0x3c, 0xe0, 0x29, 0xe6, 0x27, 0x66, 0x1a, 0x2e, 0xf4, 0x1b, 0xc3, 0x6e,
	0xd4, 0x71, 0xf0, 0x23, 0x31, 0x36, 0x80, 0x6e, 0xed, 0x6b, 0x4e, 0x4b, 0x0c, 0x9b, 0x54, 0x2a,
	0xb0, 0x70, 0xb7, 0x28, 0x0f, 0x4f, 0x4b, 0x1c, 0xfc, 0x58, 0x84, 0xd5, 0xcb, 0x9d, 0x5c, 0xd1,
	0xc4, 0xe6, 0x5f, 0x35, 0xb1, 0x75, 0x45, 0x13, 0xf7, 0x21, 0xc0, 0x99, 0x88, 0x0d, 0xcf, 0x84,
	0x89, 0xa7, 0xe1, 0x93, 0x7e, 0x63, 0xd8, 0x8a, 0x80, 0xd0, 0x9e, 0x25, 0x56, 0x10, 0x2b, 0x14,
	0x06, 0xb9, 0x91, 0x19, 0x86, 0x4f, 0xa9, 0x06, 0x38, 0x74, 0x28, 0x33, 0x64, 0x0f, 0xa1, 0x97,
	0x0a, 0x6d, 0x78, 0xa5, 0x31, 0x71, 0x9a, 0x67, 0xce, 0xc7, 0xd2, 0x23, 0x8d, 0x09, 0xa9, 0xc8,
	0xa7, 0x94, 0xca, 0x97, 0x79, 0xee, 0xca, 0x38, 0x44, 0x82, 0x6d, 0x58, 0x97, 0xb9, 0x36, 0x22,
	0x4d, 0x6d, 0x99, 0x2a, 0xcf, 0x31, 0xe5, 0xa5, 0x30, 0x53, 0x9e, 0x57, 0x59, 0xf8, 0x82, 0xe4,
	0x6b, 0xb5, 0xe0, 0x90, 0xf6, 0xc7, 0xc2, 0x4c, 0xf7, 0xab, 0x8c, 0x69, 0xe8, 0x9c, 0xfb, 0x40,
	0x87, 0xdb, 0xfd, 0xe6, 0x30, 0xd8, 0x1c, 0x8f, 0xfe, 0x35, 0x07, 0x23, 0x7b, 0xe8, 0xb3, 0xc2,
	0x51, 0x60, 0x6a, 0x5b, 0xcd, 0x2a, 0xe8, 0x88, 0xd8, 0xc8, 0x6f, 0xe8, 0xb4, 0xe1, 0xcb, 0x7e,
	0x63, 0x18, 0x6c, 0x46, 0xd7, 0x62, 0xaa, 0xe4, 0xc4, 0x87, 0x6e, 0x22, 0x4e, 0xa2, 0xc0, 0xf9,
	0x44, 0xf4, 0xef, 0x2b, 0xe8, 0x4c, 0x44, 0xfc, 0xb5, 0xf2, 0xea, 0xf0, 0xd5, 0xff, 0xb3, 0x75,
	0x3e, 0x64, 0x3b, 0xf8, 0x02, 0x2b, 0xe7, 0x62, 0x68, 0x6f, 0x83, 0xdd, 0x85, 0xb6, 0xcc, 0x0d,
	0xaa, 0x63, 0x11, 0xa3, 0x9f, 0x82, 0x33, 0xc0, 0x42, 0x58, 0x9e, 0x87, 0x73, 0x81, 0xf6, 0xe6,
	0x4b, 0x9b, 0x04, 0x31, 0x51, 0x75, 0x74, 0x5d, 0xe8, 0x41, 0x4c, 0x94, 0xcf, 0xed, 0xe0, 0x57,
	0x03, 0x7a, 0x17, 0x6f, 0x9e, 0xdd, 0x81, 0xb6, 0x5f, 0xca, 0x84, 0xbc, 0xba, 0x51, 0xcb, 0x81,
	0xf7, 0x09, 0x7b, 0x0c, 0xab, 0xb5, 0x2f, 0x9f, 0x8a, 0x3c, 0x49, 0xd1, 0x7b, 0xae, 0xd4, 0x7c,
	0x97, 0x30, 0x7b, 0x00, 0x1d, 0x9f, 0x21, 0x17, 0xc3, 0x26, 0x95, 0x0a, 0x3c, 0xa3, 0x1c, 0x52,
	0xb5, 0x79, 0x0e, 0x33, 0x34, 0x4a, 0xc6, 0xe1, 0x0d, 0x92, 0xad, 0xd4, 0x7c, 0x8f, 0xf0, 0xe0,
	0x77, 0x93, 0x86, 0xf3, 0xc2, 0xb5, 0xb1, 0x11, 0xdc, 0x72, 0x0b, 0x7a, 0x8c, 0xe2, 0x22, 0xe5,
	0xb9, 0xc8, 0xe6, 0x17, 0x74, 0x93, 0xb6, 0xc6, 0x7e, 0x67, 0x5f, 0x64, 0x34, 0xcc, 0x4e, 0x9f,
	0x48, 0x6d, 0x44, 0x1e, 0xa3, 0x7f, 0x2b, 0xba, 0x44, 0x77, 0x3c, 0xb4, 0x9d, 0x3b, 0x99, 0x6f,
	0xc9, 0x77, 0x4e, 0xcc, 0xb5, 0xc3, 0x86, 0xb0, 0xea, 0x06, 0xb1, 0x4c, 0xea, 0x71, 0x75, 0x9d,
	0xd3, 0x80, 0x1e, 0x11, 0xa6, 0x33, 0x6e, 0x40, 0x57, 0x6a, 0xae, 0xf0, 0x44, 0x6a, 0x83, 0x0a,
	0x93, 0x70, 0x91, 0xc6, 0xbe, 0x23, 0x75, 0x54, 0x33, 0xb6, 0x0e, 0x2d, 0xa9, 0xb9, 0x3d, 0x31,
	0x86, 0x4b, 0xb4, 0xbf, 0x2c, 0xf5, 0x81, 0x5d, 0xb2, 0x7b, 0x00, 0x52, 0xf3, 0x04, 0x8f, 0x45,
	0x95, 0x9a, 0x70, 0x99, 0x36, 0xdb, 0x52, 0xef, 0x38, 0x40, 0xb7, 0xac, 0x79, 0x5c, 0xe4, 0x39,
	0xc6, 0x06, 0x93, 0xb0, 0x45, 0x82, 0x40, 0xea, 0xb7, 0x73, 0xe4, 0x25, 0x65, 0x51, 0x56, 0xa9,
	0xb0, 0x92, 0xf6, 0x5c, 0x32, 0x9e, 0x23, 0x6b, 0xe2, 0x4e, 0x4c, 0x6f, 0x23, 0xd0, 0x41, 0xda,
	0x44, 0xec, 0xcb, 0xc8, 0xbe, 0x43, 0xaf, 0x4e, 0xb0, 0x1b, 0xfb, 0x80, 0xc6, 0xfe, 0xd3, 0xb5,
	0x8c, 0xc2, 0xf9, 0xa4, 0x47, 0x1d, 0xff, 0x22, 0xd3, 0xe0, 0x4f, 0x96, 0xe8, 0xc7, 0x6e, 0xfd,
	0x09, 0x00, 0x00, 0xff, 0xff, 0x55, 0xe1, 0xe4, 0x09, 0x7f, 0x06, 0x00, 0x00,
}
