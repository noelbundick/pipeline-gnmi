// Code generated by protoc-gen-go. DO NOT EDIT.
// source: te_nsr_issu_status_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_nsr_status

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// NSR/ISSU sync status information
type TeNsrIssuStatusInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeNsrIssuStatusInfo_KEYS) Reset()         { *m = TeNsrIssuStatusInfo_KEYS{} }
func (m *TeNsrIssuStatusInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*TeNsrIssuStatusInfo_KEYS) ProtoMessage()    {}
func (*TeNsrIssuStatusInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{0}
}
func (m *TeNsrIssuStatusInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.Unmarshal(m, b)
}
func (m *TeNsrIssuStatusInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.Marshal(b, m, deterministic)
}
func (dst *TeNsrIssuStatusInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.Merge(dst, src)
}
func (m *TeNsrIssuStatusInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.Size(m)
}
func (m *TeNsrIssuStatusInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TeNsrIssuStatusInfo_KEYS proto.InternalMessageInfo

type TeNsrIssuStatusInfo struct {
	// Process role
	Role string `protobuf:"bytes,50,opt,name=role" json:"role,omitempty"`
	// Sync information for the NSR and ISSU
	SyncStatusInformation *TeSyncStatusInfo `protobuf:"bytes,51,opt,name=sync_status_information,json=syncStatusInformation" json:"sync_status_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *TeNsrIssuStatusInfo) Reset()         { *m = TeNsrIssuStatusInfo{} }
func (m *TeNsrIssuStatusInfo) String() string { return proto.CompactTextString(m) }
func (*TeNsrIssuStatusInfo) ProtoMessage()    {}
func (*TeNsrIssuStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{1}
}
func (m *TeNsrIssuStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeNsrIssuStatusInfo.Unmarshal(m, b)
}
func (m *TeNsrIssuStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeNsrIssuStatusInfo.Marshal(b, m, deterministic)
}
func (dst *TeNsrIssuStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeNsrIssuStatusInfo.Merge(dst, src)
}
func (m *TeNsrIssuStatusInfo) XXX_Size() int {
	return xxx_messageInfo_TeNsrIssuStatusInfo.Size(m)
}
func (m *TeNsrIssuStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeNsrIssuStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeNsrIssuStatusInfo proto.InternalMessageInfo

func (m *TeNsrIssuStatusInfo) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *TeNsrIssuStatusInfo) GetSyncStatusInformation() *TeSyncStatusInfo {
	if m != nil {
		return m.SyncStatusInformation
	}
	return nil
}

// IDT status information
type TeIdtStatus struct {
	// Ready status
	IsReadyStatus bool `protobuf:"varint,1,opt,name=is_ready_status,json=isReadyStatus" json:"is_ready_status,omitempty"`
	// Not ready reason
	Reason string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	// IDT start timestampe in seconds
	IdtStartTime uint32 `protobuf:"varint,3,opt,name=idt_start_time,json=idtStartTime" json:"idt_start_time,omitempty"`
	// IDT end timestampe in seconds
	IdtEndTime uint32 `protobuf:"varint,4,opt,name=idt_end_time,json=idtEndTime" json:"idt_end_time,omitempty"`
	// Declare ready timestampe in seconds
	DeclareTime uint32 `protobuf:"varint,5,opt,name=declare_time,json=declareTime" json:"declare_time,omitempty"`
	// Withdraw ready timestampe in seconds
	WithdrawTime         uint32   `protobuf:"varint,6,opt,name=withdraw_time,json=withdrawTime" json:"withdraw_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeIdtStatus) Reset()         { *m = TeIdtStatus{} }
func (m *TeIdtStatus) String() string { return proto.CompactTextString(m) }
func (*TeIdtStatus) ProtoMessage()    {}
func (*TeIdtStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{2}
}
func (m *TeIdtStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeIdtStatus.Unmarshal(m, b)
}
func (m *TeIdtStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeIdtStatus.Marshal(b, m, deterministic)
}
func (dst *TeIdtStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeIdtStatus.Merge(dst, src)
}
func (m *TeIdtStatus) XXX_Size() int {
	return xxx_messageInfo_TeIdtStatus.Size(m)
}
func (m *TeIdtStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TeIdtStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TeIdtStatus proto.InternalMessageInfo

func (m *TeIdtStatus) GetIsReadyStatus() bool {
	if m != nil {
		return m.IsReadyStatus
	}
	return false
}

func (m *TeIdtStatus) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *TeIdtStatus) GetIdtStartTime() uint32 {
	if m != nil {
		return m.IdtStartTime
	}
	return 0
}

func (m *TeIdtStatus) GetIdtEndTime() uint32 {
	if m != nil {
		return m.IdtEndTime
	}
	return 0
}

func (m *TeIdtStatus) GetDeclareTime() uint32 {
	if m != nil {
		return m.DeclareTime
	}
	return 0
}

func (m *TeIdtStatus) GetWithdrawTime() uint32 {
	if m != nil {
		return m.WithdrawTime
	}
	return 0
}

// Sync pending VIF information
type TeVifPendingInfo struct {
	// Pending reason
	PendingReason string `protobuf:"bytes,1,opt,name=pending_reason,json=pendingReason" json:"pending_reason,omitempty"`
	// Tunnel name
	TunnelName           string   `protobuf:"bytes,2,opt,name=tunnel_name,json=tunnelName" json:"tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeVifPendingInfo) Reset()         { *m = TeVifPendingInfo{} }
func (m *TeVifPendingInfo) String() string { return proto.CompactTextString(m) }
func (*TeVifPendingInfo) ProtoMessage()    {}
func (*TeVifPendingInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{3}
}
func (m *TeVifPendingInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeVifPendingInfo.Unmarshal(m, b)
}
func (m *TeVifPendingInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeVifPendingInfo.Marshal(b, m, deterministic)
}
func (dst *TeVifPendingInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeVifPendingInfo.Merge(dst, src)
}
func (m *TeVifPendingInfo) XXX_Size() int {
	return xxx_messageInfo_TeVifPendingInfo.Size(m)
}
func (m *TeVifPendingInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeVifPendingInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeVifPendingInfo proto.InternalMessageInfo

func (m *TeVifPendingInfo) GetPendingReason() string {
	if m != nil {
		return m.PendingReason
	}
	return ""
}

func (m *TeVifPendingInfo) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

// Sync pending S2L information
type TeS2LPendingInfo struct {
	// Pending reason
	PendingReason string `protobuf:"bytes,1,opt,name=pending_reason,json=pendingReason" json:"pending_reason,omitempty"`
	// Signaled name
	SignaledName string `protobuf:"bytes,2,opt,name=signaled_name,json=signaledName" json:"signaled_name,omitempty"`
	// S2L role
	S2LRole              string   `protobuf:"bytes,3,opt,name=s2_l_role,json=s2LRole" json:"s2_l_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeS2LPendingInfo) Reset()         { *m = TeS2LPendingInfo{} }
func (m *TeS2LPendingInfo) String() string { return proto.CompactTextString(m) }
func (*TeS2LPendingInfo) ProtoMessage()    {}
func (*TeS2LPendingInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{4}
}
func (m *TeS2LPendingInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LPendingInfo.Unmarshal(m, b)
}
func (m *TeS2LPendingInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LPendingInfo.Marshal(b, m, deterministic)
}
func (dst *TeS2LPendingInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LPendingInfo.Merge(dst, src)
}
func (m *TeS2LPendingInfo) XXX_Size() int {
	return xxx_messageInfo_TeS2LPendingInfo.Size(m)
}
func (m *TeS2LPendingInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LPendingInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LPendingInfo proto.InternalMessageInfo

func (m *TeS2LPendingInfo) GetPendingReason() string {
	if m != nil {
		return m.PendingReason
	}
	return ""
}

func (m *TeS2LPendingInfo) GetSignaledName() string {
	if m != nil {
		return m.SignaledName
	}
	return ""
}

func (m *TeS2LPendingInfo) GetS2LRole() string {
	if m != nil {
		return m.S2LRole
	}
	return ""
}

// Sync Status information
type TeSyncIdtInfo struct {
	// Current IDT information
	CurrentIdtInfo *TeIdtStatus `protobuf:"bytes,1,opt,name=current_idt_info,json=currentIdtInfo" json:"current_idt_info,omitempty"`
	// Previous IDT information
	PreviousIdtStatus    *TeIdtStatus `protobuf:"bytes,2,opt,name=previous_idt_status,json=previousIdtStatus" json:"previous_idt_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TeSyncIdtInfo) Reset()         { *m = TeSyncIdtInfo{} }
func (m *TeSyncIdtInfo) String() string { return proto.CompactTextString(m) }
func (*TeSyncIdtInfo) ProtoMessage()    {}
func (*TeSyncIdtInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{5}
}
func (m *TeSyncIdtInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSyncIdtInfo.Unmarshal(m, b)
}
func (m *TeSyncIdtInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSyncIdtInfo.Marshal(b, m, deterministic)
}
func (dst *TeSyncIdtInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSyncIdtInfo.Merge(dst, src)
}
func (m *TeSyncIdtInfo) XXX_Size() int {
	return xxx_messageInfo_TeSyncIdtInfo.Size(m)
}
func (m *TeSyncIdtInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSyncIdtInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSyncIdtInfo proto.InternalMessageInfo

func (m *TeSyncIdtInfo) GetCurrentIdtInfo() *TeIdtStatus {
	if m != nil {
		return m.CurrentIdtInfo
	}
	return nil
}

func (m *TeSyncIdtInfo) GetPreviousIdtStatus() *TeIdtStatus {
	if m != nil {
		return m.PreviousIdtStatus
	}
	return nil
}

// Master Sync status information
type TeSyncStatusMasterInfo struct {
	// Sync status IDT information
	Idt                  *TeSyncIdtInfo `protobuf:"bytes,1,opt,name=idt" json:"idt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TeSyncStatusMasterInfo) Reset()         { *m = TeSyncStatusMasterInfo{} }
func (m *TeSyncStatusMasterInfo) String() string { return proto.CompactTextString(m) }
func (*TeSyncStatusMasterInfo) ProtoMessage()    {}
func (*TeSyncStatusMasterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{6}
}
func (m *TeSyncStatusMasterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSyncStatusMasterInfo.Unmarshal(m, b)
}
func (m *TeSyncStatusMasterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSyncStatusMasterInfo.Marshal(b, m, deterministic)
}
func (dst *TeSyncStatusMasterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSyncStatusMasterInfo.Merge(dst, src)
}
func (m *TeSyncStatusMasterInfo) XXX_Size() int {
	return xxx_messageInfo_TeSyncStatusMasterInfo.Size(m)
}
func (m *TeSyncStatusMasterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSyncStatusMasterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSyncStatusMasterInfo proto.InternalMessageInfo

func (m *TeSyncStatusMasterInfo) GetIdt() *TeSyncIdtInfo {
	if m != nil {
		return m.Idt
	}
	return nil
}

// Sync status slave Information
type TeSyncStatusSlaveInfo struct {
	// Sync status IDT information
	Idt *TeSyncIdtInfo `protobuf:"bytes,1,opt,name=idt" json:"idt,omitempty"`
	// Pending tunnels details
	VifPending []*TeVifPendingInfo `protobuf:"bytes,2,rep,name=vif_pending,json=vifPending" json:"vif_pending,omitempty"`
	// Pending sub-LSPs details
	S2LPending []*TeS2LPendingInfo `protobuf:"bytes,3,rep,name=s2_l_pending,json=s2LPending" json:"s2_l_pending,omitempty"`
	// Tunnels in sync
	InsyncTunnels uint32 `protobuf:"varint,4,opt,name=insync_tunnels,json=insyncTunnels" json:"insync_tunnels,omitempty"`
	// Sub-LSPs in sync
	InsyncSubLsPs uint32 `protobuf:"varint,5,opt,name=insync_sub_ls_ps,json=insyncSubLsPs" json:"insync_sub_ls_ps,omitempty"`
	// Tunnels in sync pending
	PendingTunnels uint32 `protobuf:"varint,6,opt,name=pending_tunnels,json=pendingTunnels" json:"pending_tunnels,omitempty"`
	// Sub-LSPs in sync pending
	PendingSubLsPs       uint32   `protobuf:"varint,7,opt,name=pending_sub_ls_ps,json=pendingSubLsPs" json:"pending_sub_ls_ps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeSyncStatusSlaveInfo) Reset()         { *m = TeSyncStatusSlaveInfo{} }
func (m *TeSyncStatusSlaveInfo) String() string { return proto.CompactTextString(m) }
func (*TeSyncStatusSlaveInfo) ProtoMessage()    {}
func (*TeSyncStatusSlaveInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{7}
}
func (m *TeSyncStatusSlaveInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSyncStatusSlaveInfo.Unmarshal(m, b)
}
func (m *TeSyncStatusSlaveInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSyncStatusSlaveInfo.Marshal(b, m, deterministic)
}
func (dst *TeSyncStatusSlaveInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSyncStatusSlaveInfo.Merge(dst, src)
}
func (m *TeSyncStatusSlaveInfo) XXX_Size() int {
	return xxx_messageInfo_TeSyncStatusSlaveInfo.Size(m)
}
func (m *TeSyncStatusSlaveInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSyncStatusSlaveInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSyncStatusSlaveInfo proto.InternalMessageInfo

func (m *TeSyncStatusSlaveInfo) GetIdt() *TeSyncIdtInfo {
	if m != nil {
		return m.Idt
	}
	return nil
}

func (m *TeSyncStatusSlaveInfo) GetVifPending() []*TeVifPendingInfo {
	if m != nil {
		return m.VifPending
	}
	return nil
}

func (m *TeSyncStatusSlaveInfo) GetS2LPending() []*TeS2LPendingInfo {
	if m != nil {
		return m.S2LPending
	}
	return nil
}

func (m *TeSyncStatusSlaveInfo) GetInsyncTunnels() uint32 {
	if m != nil {
		return m.InsyncTunnels
	}
	return 0
}

func (m *TeSyncStatusSlaveInfo) GetInsyncSubLsPs() uint32 {
	if m != nil {
		return m.InsyncSubLsPs
	}
	return 0
}

func (m *TeSyncStatusSlaveInfo) GetPendingTunnels() uint32 {
	if m != nil {
		return m.PendingTunnels
	}
	return 0
}

func (m *TeSyncStatusSlaveInfo) GetPendingSubLsPs() uint32 {
	if m != nil {
		return m.PendingSubLsPs
	}
	return 0
}

// Sync information for the NSR and ISSU based on master or slave role
type TeSyncStatusInfo struct {
	SyncShowType string `protobuf:"bytes,1,opt,name=sync_show_type,json=syncShowType" json:"sync_show_type,omitempty"`
	// Slave sync information
	SlaveSyncInformation *TeSyncStatusSlaveInfo `protobuf:"bytes,2,opt,name=slave_sync_information,json=slaveSyncInformation" json:"slave_sync_information,omitempty"`
	// Master sync information
	MasterSyncInformation *TeSyncStatusMasterInfo `protobuf:"bytes,3,opt,name=master_sync_information,json=masterSyncInformation" json:"master_sync_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *TeSyncStatusInfo) Reset()         { *m = TeSyncStatusInfo{} }
func (m *TeSyncStatusInfo) String() string { return proto.CompactTextString(m) }
func (*TeSyncStatusInfo) ProtoMessage()    {}
func (*TeSyncStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0, []int{8}
}
func (m *TeSyncStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSyncStatusInfo.Unmarshal(m, b)
}
func (m *TeSyncStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSyncStatusInfo.Marshal(b, m, deterministic)
}
func (dst *TeSyncStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSyncStatusInfo.Merge(dst, src)
}
func (m *TeSyncStatusInfo) XXX_Size() int {
	return xxx_messageInfo_TeSyncStatusInfo.Size(m)
}
func (m *TeSyncStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSyncStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSyncStatusInfo proto.InternalMessageInfo

func (m *TeSyncStatusInfo) GetSyncShowType() string {
	if m != nil {
		return m.SyncShowType
	}
	return ""
}

func (m *TeSyncStatusInfo) GetSlaveSyncInformation() *TeSyncStatusSlaveInfo {
	if m != nil {
		return m.SlaveSyncInformation
	}
	return nil
}

func (m *TeSyncStatusInfo) GetMasterSyncInformation() *TeSyncStatusMasterInfo {
	if m != nil {
		return m.MasterSyncInformation
	}
	return nil
}

func init() {
	proto.RegisterType((*TeNsrIssuStatusInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_nsr_issu_status_info_KEYS")
	proto.RegisterType((*TeNsrIssuStatusInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_nsr_issu_status_info")
	proto.RegisterType((*TeIdtStatus)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_idt_status")
	proto.RegisterType((*TeVifPendingInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_vif_pending_info")
	proto.RegisterType((*TeS2LPendingInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_s2l_pending_info")
	proto.RegisterType((*TeSyncIdtInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_sync_idt_info")
	proto.RegisterType((*TeSyncStatusMasterInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_sync_status_master_info")
	proto.RegisterType((*TeSyncStatusSlaveInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_sync_status_slave_info")
	proto.RegisterType((*TeSyncStatusInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_sync_status_info")
}

func init() {
	proto.RegisterFile("te_nsr_issu_status_info.proto", fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0)
}

var fileDescriptor_te_nsr_issu_status_info_60bab45af797e9c0 = []byte{
	// 687 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x95, 0x9b, 0x7e, 0xed, 0xd7, 0x9b, 0x38, 0x6d, 0xa7, 0xb4, 0x0d, 0x15, 0x3f, 0xc1, 0xa5,
	0x10, 0x24, 0x94, 0x85, 0xbb, 0x44, 0x42, 0x62, 0x51, 0x41, 0x45, 0x85, 0x2a, 0xa7, 0x1b, 0x16,
	0x68, 0xe4, 0xd8, 0xb7, 0xed, 0x08, 0x7b, 0x6c, 0xcd, 0x4c, 0x12, 0xb2, 0xa8, 0xc4, 0xe3, 0xf0,
	0x12, 0xbc, 0x08, 0x1b, 0x76, 0x3c, 0x07, 0xf2, 0xfc, 0x34, 0xc1, 0xa8, 0x8b, 0xa6, 0x62, 0xe7,
	0x39, 0x3a, 0x39, 0xe7, 0x5e, 0xfb, 0x9c, 0x09, 0x3c, 0x54, 0x48, 0xb9, 0x14, 0x94, 0x49, 0x39,
	0xa2, 0x52, 0xc5, 0x6a, 0x24, 0x29, 0xe3, 0xe7, 0x45, 0xbf, 0x14, 0x85, 0x2a, 0xc8, 0xcb, 0x84,
	0xc9, 0xa4, 0xa0, 0xac, 0x90, 0xf4, 0x8b, 0xa0, 0x79, 0x99, 0x49, 0xaa, 0x90, 0x16, 0x25, 0x8a,
	0xbe, 0x3d, 0xf4, 0xb9, 0x14, 0x7d, 0xf3, 0xc3, 0xe0, 0x11, 0x3c, 0xb8, 0x41, 0x8e, 0xbe, 0x3f,
	0xfa, 0x38, 0x08, 0xbe, 0x79, 0xb0, 0x7b, 0x03, 0x81, 0x10, 0x58, 0x16, 0x45, 0x86, 0x9d, 0xb0,
	0xeb, 0xf5, 0xd6, 0x22, 0xfd, 0x4c, 0xa6, 0xb0, 0x2b, 0xa7, 0x3c, 0x99, 0xe7, 0x89, 0x3c, 0x56,
	0xac, 0xe0, 0x9d, 0xc3, 0xae, 0xd7, 0x6b, 0x86, 0x6f, 0xfa, 0xb7, 0x99, 0xaf, 0xaf, 0x90, 0xd6,
	0xf5, 0xa2, 0xed, 0x0a, 0x19, 0x68, 0xe0, 0x78, 0xa6, 0x1f, 0xfc, 0xf4, 0xc0, 0x57, 0x48, 0x59,
	0xaa, 0x2c, 0x9b, 0x3c, 0x83, 0x75, 0x26, 0xa9, 0xc0, 0x38, 0x9d, 0x5a, 0xa8, 0xe3, 0x75, 0xbd,
	0xde, 0xff, 0x91, 0xcf, 0x64, 0x54, 0xa1, 0x46, 0x84, 0xec, 0xc0, 0x8a, 0xc0, 0x58, 0x16, 0xbc,
	0xb3, 0xa4, 0x57, 0xb1, 0x27, 0xf2, 0x14, 0xda, 0x56, 0x4d, 0x28, 0xaa, 0x58, 0x8e, 0x9d, 0x46,
	0xd7, 0xeb, 0xf9, 0x51, 0x8b, 0xa5, 0x6a, 0x50, 0x81, 0x67, 0x2c, 0x47, 0xd2, 0x85, 0xea, 0x4c,
	0x91, 0xa7, 0x86, 0xb3, 0xac, 0x39, 0xc0, 0x52, 0x75, 0xc4, 0x53, 0xcd, 0x78, 0x02, 0xad, 0x14,
	0x93, 0x2c, 0x16, 0x68, 0x18, 0xff, 0x69, 0x46, 0xd3, 0x62, 0x9a, 0xb2, 0x0f, 0xfe, 0x84, 0xa9,
	0xcb, 0x54, 0xc4, 0x13, 0xc3, 0x59, 0x31, 0x4e, 0x0e, 0xac, 0x48, 0xc1, 0x27, 0xd8, 0x52, 0x48,
	0xc7, 0xec, 0x9c, 0x96, 0xc8, 0x53, 0xc6, 0x2f, 0xcc, 0x77, 0x38, 0x80, 0xb6, 0x3b, 0xdb, 0x35,
	0x3c, 0xbd, 0x86, 0x6f, 0xd1, 0xc8, 0x6c, 0xf3, 0x18, 0x9a, 0x6a, 0xc4, 0x39, 0x66, 0x94, 0xc7,
	0x39, 0xda, 0x55, 0xc1, 0x40, 0x1f, 0xe2, 0x1c, 0x83, 0x2b, 0x2d, 0x2f, 0xc3, 0x6c, 0x21, 0xf9,
	0x7d, 0xf0, 0x25, 0xbb, 0xe0, 0x71, 0x86, 0xe9, 0xbc, 0x41, 0xcb, 0x81, 0x95, 0x05, 0xd9, 0x83,
	0x35, 0x19, 0xd2, 0x8c, 0xea, 0xdc, 0x34, 0x34, 0x61, 0x55, 0x86, 0x27, 0x51, 0x91, 0x61, 0xf0,
	0xcb, 0x83, 0x0d, 0xf7, 0xb9, 0xab, 0x17, 0xaa, 0xcd, 0x11, 0x36, 0x92, 0x91, 0x10, 0xc8, 0xd5,
	0x35, 0xa6, 0xed, 0x9b, 0xe1, 0xab, 0x5b, 0x07, 0x69, 0x96, 0x8c, 0xa8, 0x6d, 0x45, 0x8f, 0x53,
	0x55, 0x45, 0x88, 0x7c, 0x86, 0xad, 0x52, 0xe0, 0x98, 0x15, 0x55, 0xc6, 0xae, 0x69, 0x7a, 0x85,
	0x3b, 0x3a, 0x6d, 0x3a, 0xdd, 0x63, 0x9d, 0x99, 0xaa, 0x73, 0x1c, 0xf6, 0x6a, 0xb1, 0xce, 0x63,
	0xa9, 0x50, 0x98, 0x8d, 0x4f, 0xa1, 0xc1, 0x52, 0x65, 0x97, 0x7c, 0xbd, 0x58, 0x5b, 0xdc, 0xab,
	0x8a, 0x2a, 0xa9, 0xe0, 0x47, 0x03, 0xee, 0xd7, 0x0c, 0x65, 0x16, 0x8f, 0xf1, 0x1f, 0xf9, 0x91,
	0x21, 0x34, 0xe7, 0x32, 0xda, 0x59, 0xea, 0x36, 0x16, 0xea, 0x7d, 0x3d, 0xe7, 0x11, 0x8c, 0xd9,
	0xf9, 0xa9, 0x01, 0x48, 0x02, 0x2d, 0x1d, 0x24, 0x67, 0xd2, 0x58, 0xd0, 0xa4, 0x9e, 0xf6, 0x08,
	0x64, 0x78, 0xe2, 0x4c, 0x0e, 0xa0, 0xcd, 0xb8, 0x5e, 0xd0, 0xb4, 0x44, 0xda, 0x6e, 0xfb, 0x06,
	0x3d, 0x33, 0x20, 0x79, 0x0e, 0x1b, 0x96, 0x26, 0x47, 0x43, 0x9a, 0x49, 0x5a, 0x4a, 0x5b, 0x71,
	0x4b, 0x1c, 0x8c, 0x86, 0x27, 0xf2, 0xb4, 0x22, 0xae, 0x3b, 0x2f, 0x27, 0x68, 0x6a, 0xee, 0x0a,
	0xe6, 0x14, 0x5f, 0xc0, 0xa6, 0x23, 0xce, 0x24, 0x57, 0xff, 0xa0, 0x5a, 0xcd, 0xe0, 0xfb, 0x92,
	0x69, 0x6d, 0xed, 0x92, 0xac, 0xee, 0x2e, 0x83, 0x5d, 0x16, 0x13, 0xaa, 0xa6, 0x25, 0xda, 0xd6,
	0xb6, 0xf4, 0x40, 0x97, 0xc5, 0xe4, 0x6c, 0x5a, 0x22, 0xb9, 0x82, 0x1d, 0x13, 0x05, 0xf3, 0x19,
	0xe7, 0x6e, 0x6b, 0x13, 0xfd, 0xb7, 0x77, 0xba, 0xad, 0x67, 0x29, 0x8b, 0xee, 0xe9, 0xe7, 0xc1,
	0x94, 0x27, 0x73, 0x57, 0x36, 0xf9, 0xea, 0xc1, 0xae, 0xcd, 0xfe, 0x5f, 0x03, 0x34, 0xf4, 0x00,
	0xef, 0xee, 0x34, 0xc0, 0x5c, 0xaf, 0xa2, 0x6d, 0x73, 0xa8, 0x8d, 0x30, 0x5c, 0xd1, 0xff, 0x9a,
	0x87, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x26, 0xe2, 0x39, 0x3a, 0x56, 0x07, 0x00, 0x00,
}
