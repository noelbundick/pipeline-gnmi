// Code generated by protoc-gen-go. DO NOT EDIT.
// source: te_sr_igp_area.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_segment_routing_srigp_area_infos_srigp_area_info

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A IGP area information for Segment-Routing
type TeSrIgpArea_KEYS struct {
	Protocol             string   `protobuf:"bytes,1,opt,name=protocol" json:"protocol,omitempty"`
	IgpInstance          string   `protobuf:"bytes,2,opt,name=igp_instance,json=igpInstance" json:"igp_instance,omitempty"`
	Area                 uint32   `protobuf:"varint,3,opt,name=area" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeSrIgpArea_KEYS) Reset()         { *m = TeSrIgpArea_KEYS{} }
func (m *TeSrIgpArea_KEYS) String() string { return proto.CompactTextString(m) }
func (*TeSrIgpArea_KEYS) ProtoMessage()    {}
func (*TeSrIgpArea_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_sr_igp_area_97f2a42a030f7dcb, []int{0}
}
func (m *TeSrIgpArea_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSrIgpArea_KEYS.Unmarshal(m, b)
}
func (m *TeSrIgpArea_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSrIgpArea_KEYS.Marshal(b, m, deterministic)
}
func (dst *TeSrIgpArea_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSrIgpArea_KEYS.Merge(dst, src)
}
func (m *TeSrIgpArea_KEYS) XXX_Size() int {
	return xxx_messageInfo_TeSrIgpArea_KEYS.Size(m)
}
func (m *TeSrIgpArea_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSrIgpArea_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TeSrIgpArea_KEYS proto.InternalMessageInfo

func (m *TeSrIgpArea_KEYS) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *TeSrIgpArea_KEYS) GetIgpInstance() string {
	if m != nil {
		return m.IgpInstance
	}
	return ""
}

func (m *TeSrIgpArea_KEYS) GetArea() uint32 {
	if m != nil {
		return m.Area
	}
	return 0
}

type TeSrIgpArea struct {
	// True if the Segment-Routing is enabled in this area
	SegmentRoutingEnabled bool `protobuf:"varint,50,opt,name=segment_routing_enabled,json=segmentRoutingEnabled" json:"segment_routing_enabled,omitempty"`
	// True if the strict SPF is enabled in this area
	StrictSpfEnabled bool `protobuf:"varint,51,opt,name=strict_spf_enabled,json=strictSpfEnabled" json:"strict_spf_enabled,omitempty"`
	// IGP type
	IgpType string `protobuf:"bytes,52,opt,name=igp_type,json=igpType" json:"igp_type,omitempty"`
	// IGP Instance name
	IgpInstance string `protobuf:"bytes,53,opt,name=igp_instance,json=igpInstance" json:"igp_instance,omitempty"`
	// IGP Area ID
	IgpArea uint32 `protobuf:"varint,54,opt,name=igp_area,json=igpArea" json:"igp_area,omitempty"`
	// IGP-area format
	IgpAreaFormat        string   `protobuf:"bytes,55,opt,name=igp_area_format,json=igpAreaFormat" json:"igp_area_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeSrIgpArea) Reset()         { *m = TeSrIgpArea{} }
func (m *TeSrIgpArea) String() string { return proto.CompactTextString(m) }
func (*TeSrIgpArea) ProtoMessage()    {}
func (*TeSrIgpArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_te_sr_igp_area_97f2a42a030f7dcb, []int{1}
}
func (m *TeSrIgpArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSrIgpArea.Unmarshal(m, b)
}
func (m *TeSrIgpArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSrIgpArea.Marshal(b, m, deterministic)
}
func (dst *TeSrIgpArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSrIgpArea.Merge(dst, src)
}
func (m *TeSrIgpArea) XXX_Size() int {
	return xxx_messageInfo_TeSrIgpArea.Size(m)
}
func (m *TeSrIgpArea) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSrIgpArea.DiscardUnknown(m)
}

var xxx_messageInfo_TeSrIgpArea proto.InternalMessageInfo

func (m *TeSrIgpArea) GetSegmentRoutingEnabled() bool {
	if m != nil {
		return m.SegmentRoutingEnabled
	}
	return false
}

func (m *TeSrIgpArea) GetStrictSpfEnabled() bool {
	if m != nil {
		return m.StrictSpfEnabled
	}
	return false
}

func (m *TeSrIgpArea) GetIgpType() string {
	if m != nil {
		return m.IgpType
	}
	return ""
}

func (m *TeSrIgpArea) GetIgpInstance() string {
	if m != nil {
		return m.IgpInstance
	}
	return ""
}

func (m *TeSrIgpArea) GetIgpArea() uint32 {
	if m != nil {
		return m.IgpArea
	}
	return 0
}

func (m *TeSrIgpArea) GetIgpAreaFormat() string {
	if m != nil {
		return m.IgpAreaFormat
	}
	return ""
}

func init() {
	proto.RegisterType((*TeSrIgpArea_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.segment_routing.srigp_area_infos.srigp_area_info.te_sr_igp_area_KEYS")
	proto.RegisterType((*TeSrIgpArea)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.segment_routing.srigp_area_infos.srigp_area_info.te_sr_igp_area")
}

func init() {
	proto.RegisterFile("te_sr_igp_area.proto", fileDescriptor_te_sr_igp_area_97f2a42a030f7dcb)
}

var fileDescriptor_te_sr_igp_area_97f2a42a030f7dcb = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x50, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x55, 0x00, 0x41, 0x30, 0x14, 0x90, 0x01, 0x61, 0x98, 0x42, 0x07, 0x94, 0x01, 0x65, 0xa0,
	0x50, 0x66, 0x86, 0x22, 0x21, 0xb6, 0x94, 0x85, 0xe9, 0x94, 0x86, 0x4b, 0xb0, 0x94, 0xd8, 0x96,
	0x6d, 0x24, 0xfa, 0xcb, 0x59, 0x51, 0x2e, 0x6e, 0xa4, 0xb6, 0x9b, 0x7d, 0xef, 0xde, 0xd7, 0xb1,
	0x0b, 0x8f, 0xe0, 0x2c, 0xc8, 0xda, 0x40, 0x61, 0xb1, 0xc8, 0x8c, 0xd5, 0x5e, 0xf3, 0xbc, 0x94,
	0xae, 0xd4, 0x20, 0xb5, 0x83, 0x5f, 0x0b, 0xad, 0x69, 0x1c, 0x78, 0x04, 0x6d, 0xd0, 0x66, 0xe1,
	0x93, 0x39, 0xac, 0x5b, 0x54, 0x1e, 0xac, 0xfe, 0xf1, 0x52, 0xd5, 0x99, 0xb3, 0x2b, 0x0d, 0x90,
	0xaa, 0xd2, 0x6e, 0x73, 0x30, 0xfe, 0x66, 0xe7, 0xeb, 0x5e, 0xf0, 0x3e, 0xfb, 0x9c, 0xf3, 0x1b,
	0x16, 0x93, 0x67, 0xa9, 0x1b, 0x11, 0x25, 0x51, 0x7a, 0x98, 0x0f, 0x7f, 0x7e, 0xcb, 0x8e, 0xbb,
	0x65, 0xa9, 0x9c, 0x2f, 0x54, 0x89, 0x62, 0x87, 0xf0, 0x23, 0x59, 0x9b, 0xb7, 0x30, 0xe2, 0x9c,
	0xed, 0x75, 0x5a, 0x62, 0x37, 0x89, 0xd2, 0x51, 0x4e, 0xef, 0xf1, 0x5f, 0xc4, 0x4e, 0xd6, 0xad,
	0xf8, 0x94, 0x5d, 0x6d, 0x04, 0x06, 0x54, 0xc5, 0xa2, 0xc1, 0x2f, 0xf1, 0x90, 0x44, 0x69, 0x9c,
	0x5f, 0x06, 0x38, 0xef, 0xd1, 0x59, 0x0f, 0xf2, 0x7b, 0xc6, 0x9d, 0xb7, 0xb2, 0xf4, 0xe0, 0x4c,
	0x35, 0x50, 0x26, 0x44, 0x39, 0xeb, 0x91, 0xb9, 0xa9, 0x56, 0xdb, 0xd7, 0x2c, 0xee, 0x1c, 0xfd,
	0xd2, 0xa0, 0x78, 0xa4, 0xac, 0x07, 0xb2, 0x36, 0x1f, 0x4b, 0x83, 0x5b, 0x55, 0x9e, 0xb6, 0xab,
	0x04, 0x36, 0xd5, 0x99, 0x52, 0x9d, 0x8e, 0xfd, 0xd2, 0xc5, 0xbf, 0x63, 0xa7, 0xc3, 0xd5, 0x2a,
	0x6d, 0xdb, 0xc2, 0x8b, 0x67, 0x12, 0x18, 0x85, 0x8d, 0x57, 0x1a, 0x2e, 0xf6, 0xe9, 0x74, 0x93,
	0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x61, 0xaf, 0xf0, 0xd6, 0x01, 0x00, 0x00,
}
