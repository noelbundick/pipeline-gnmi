// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_topology_global_info_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_topology_global

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MPLS TE Topology Global Information
type MplsTeTopologyGlobalInfoBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTopologyGlobalInfoBag_KEYS) Reset()         { *m = MplsTeTopologyGlobalInfoBag_KEYS{} }
func (m *MplsTeTopologyGlobalInfoBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyGlobalInfoBag_KEYS) ProtoMessage()    {}
func (*MplsTeTopologyGlobalInfoBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_topology_global_info_bag_de27a9d74803334c, []int{0}
}
func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsTeTopologyGlobalInfoBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.Merge(dst, src)
}
func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.Size(m)
}
func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS proto.InternalMessageInfo

type MplsTeTopologyGlobalInfoBag struct {
	// Information for areas
	Areas []*MplsTeAreaInfo `protobuf:"bytes,50,rep,name=areas" json:"areas,omitempty"`
	// Interval in seconds to hold down a neighbor after a signalling error
	HoldDownInterval uint32 `protobuf:"varint,51,opt,name=hold_down_interval,json=holdDownInterval" json:"hold_down_interval,omitempty"`
	// Link add/remove counter
	LinkAddRemoveCount uint32 `protobuf:"varint,52,opt,name=link_add_remove_count,json=linkAddRemoveCount" json:"link_add_remove_count,omitempty"`
	// Local BC Model ID
	LocalModelId         uint32   `protobuf:"varint,53,opt,name=local_model_id,json=localModelId" json:"local_model_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTopologyGlobalInfoBag) Reset()         { *m = MplsTeTopologyGlobalInfoBag{} }
func (m *MplsTeTopologyGlobalInfoBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyGlobalInfoBag) ProtoMessage()    {}
func (*MplsTeTopologyGlobalInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_topology_global_info_bag_de27a9d74803334c, []int{1}
}
func (m *MplsTeTopologyGlobalInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag.Unmarshal(m, b)
}
func (m *MplsTeTopologyGlobalInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag.Marshal(b, m, deterministic)
}
func (dst *MplsTeTopologyGlobalInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyGlobalInfoBag.Merge(dst, src)
}
func (m *MplsTeTopologyGlobalInfoBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag.Size(m)
}
func (m *MplsTeTopologyGlobalInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyGlobalInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyGlobalInfoBag proto.InternalMessageInfo

func (m *MplsTeTopologyGlobalInfoBag) GetAreas() []*MplsTeAreaInfo {
	if m != nil {
		return m.Areas
	}
	return nil
}

func (m *MplsTeTopologyGlobalInfoBag) GetHoldDownInterval() uint32 {
	if m != nil {
		return m.HoldDownInterval
	}
	return 0
}

func (m *MplsTeTopologyGlobalInfoBag) GetLinkAddRemoveCount() uint32 {
	if m != nil {
		return m.LinkAddRemoveCount
	}
	return 0
}

func (m *MplsTeTopologyGlobalInfoBag) GetLocalModelId() uint32 {
	if m != nil {
		return m.LocalModelId
	}
	return 0
}

// MPLS TE Node's Segment-Routing Information
type TeSrNodeInfo struct {
	// Segment-Routing Node-SID
	SegmentId uint32 `protobuf:"varint,1,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
	// Node-SID local absolute value
	SegmentIdLocalAbsoluteValue uint32 `protobuf:"varint,2,opt,name=segment_id_local_absolute_value,json=segmentIdLocalAbsoluteValue" json:"segment_id_local_absolute_value,omitempty"`
	// Segment-Routring global block start value
	SrgbStart uint32 `protobuf:"varint,3,opt,name=srgb_start,json=srgbStart" json:"srgb_start,omitempty"`
	// Segment-Routing global block size
	SrgbSize             uint32   `protobuf:"varint,4,opt,name=srgb_size,json=srgbSize" json:"srgb_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeSrNodeInfo) Reset()         { *m = TeSrNodeInfo{} }
func (m *TeSrNodeInfo) String() string { return proto.CompactTextString(m) }
func (*TeSrNodeInfo) ProtoMessage()    {}
func (*TeSrNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_topology_global_info_bag_de27a9d74803334c, []int{2}
}
func (m *TeSrNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSrNodeInfo.Unmarshal(m, b)
}
func (m *TeSrNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSrNodeInfo.Marshal(b, m, deterministic)
}
func (dst *TeSrNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSrNodeInfo.Merge(dst, src)
}
func (m *TeSrNodeInfo) XXX_Size() int {
	return xxx_messageInfo_TeSrNodeInfo.Size(m)
}
func (m *TeSrNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSrNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSrNodeInfo proto.InternalMessageInfo

func (m *TeSrNodeInfo) GetSegmentId() uint32 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

func (m *TeSrNodeInfo) GetSegmentIdLocalAbsoluteValue() uint32 {
	if m != nil {
		return m.SegmentIdLocalAbsoluteValue
	}
	return 0
}

func (m *TeSrNodeInfo) GetSrgbStart() uint32 {
	if m != nil {
		return m.SrgbStart
	}
	return 0
}

func (m *TeSrNodeInfo) GetSrgbSize() uint32 {
	if m != nil {
		return m.SrgbSize
	}
	return 0
}

// Global information for an MPLS-TE area
type MplsTeAreaInfo struct {
	// Protocol used
	Protocol string `protobuf:"bytes,1,opt,name=protocol" json:"protocol,omitempty"`
	// The node's IGP id
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// The area's id
	AreaId string `protobuf:"bytes,3,opt,name=area_id,json=areaId" json:"area_id,omitempty"`
	// Local SID and SRBG
	LocalSidAndSrbg      *TeSrNodeInfo `protobuf:"bytes,4,opt,name=local_sid_and_srbg,json=localSidAndSrbg" json:"local_sid_and_srbg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MplsTeAreaInfo) Reset()         { *m = MplsTeAreaInfo{} }
func (m *MplsTeAreaInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAreaInfo) ProtoMessage()    {}
func (*MplsTeAreaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_topology_global_info_bag_de27a9d74803334c, []int{3}
}
func (m *MplsTeAreaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAreaInfo.Unmarshal(m, b)
}
func (m *MplsTeAreaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAreaInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAreaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAreaInfo.Merge(dst, src)
}
func (m *MplsTeAreaInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAreaInfo.Size(m)
}
func (m *MplsTeAreaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAreaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAreaInfo proto.InternalMessageInfo

func (m *MplsTeAreaInfo) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *MplsTeAreaInfo) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MplsTeAreaInfo) GetAreaId() string {
	if m != nil {
		return m.AreaId
	}
	return ""
}

func (m *MplsTeAreaInfo) GetLocalSidAndSrbg() *TeSrNodeInfo {
	if m != nil {
		return m.LocalSidAndSrbg
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeTopologyGlobalInfoBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.topology.global.mpls_te_topology_global_info_bag_KEYS")
	proto.RegisterType((*MplsTeTopologyGlobalInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.topology.global.mpls_te_topology_global_info_bag")
	proto.RegisterType((*TeSrNodeInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.topology.global.te_sr_node_info")
	proto.RegisterType((*MplsTeAreaInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.topology.global.mpls_te_area_info")
}

func init() {
	proto.RegisterFile("mpls_te_topology_global_info_bag.proto", fileDescriptor_mpls_te_topology_global_info_bag_de27a9d74803334c)
}

var fileDescriptor_mpls_te_topology_global_info_bag_de27a9d74803334c = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0x56, 0x5a, 0x08, 0x5d, 0x17, 0x28, 0x58, 0x42, 0xac, 0xa8, 0x10, 0x51, 0xc4, 0x4f, 0x0f,
	0x68, 0xa5, 0xa6, 0xf0, 0x00, 0x81, 0x70, 0x58, 0x01, 0x97, 0x8d, 0x84, 0x04, 0x97, 0x91, 0x77,
	0xc7, 0x2c, 0x16, 0x8e, 0x67, 0x65, 0x3b, 0x29, 0xf4, 0xce, 0x0b, 0xf1, 0x28, 0x3c, 0x11, 0xf2,
	0xec, 0xa6, 0x48, 0x70, 0x88, 0xe8, 0x71, 0xbe, 0xbf, 0xf9, 0x6c, 0x8d, 0x78, 0xba, 0xea, 0x6c,
	0x80, 0xa8, 0x21, 0x52, 0x47, 0x96, 0xda, 0xef, 0xd0, 0x5a, 0xaa, 0x95, 0x05, 0xe3, 0x3e, 0x13,
	0xd4, 0xaa, 0x2d, 0x3a, 0x4f, 0x91, 0xe4, 0x69, 0x63, 0x42, 0x43, 0x60, 0x28, 0xc0, 0x37, 0x0f,
	0x5b, 0x13, 0x75, 0xda, 0x17, 0xc3, 0x50, 0x6c, 0x13, 0x8a, 0x3e, 0x61, 0xfa, 0x4c, 0x3c, 0xd9,
	0x15, 0x0e, 0x6f, 0xdf, 0x7c, 0x5c, 0x4e, 0x7f, 0xec, 0x89, 0xc9, 0x2e, 0xa5, 0xfc, 0x24, 0xae,
	0x2b, 0xaf, 0x55, 0xc8, 0x67, 0x93, 0xfd, 0x93, 0xc3, 0xd9, 0xa2, 0xf8, 0xef, 0x42, 0x5b, 0x1c,
	0x52, 0x0e, 0x07, 0x57, 0x7d, 0xa4, 0x7c, 0x2e, 0xe4, 0x17, 0xb2, 0x08, 0x48, 0xe7, 0x0e, 0x8c,
	0x8b, 0xda, 0x6f, 0x94, 0xcd, 0xcf, 0x26, 0xa3, 0x93, 0x5b, 0xd5, 0x9d, 0xc4, 0x2c, 0xe8, 0xdc,
	0x95, 0x03, 0x2e, 0x4f, 0xc5, 0x3d, 0x6b, 0xdc, 0x57, 0x50, 0x88, 0xe0, 0xf5, 0x8a, 0x36, 0x1a,
	0x1a, 0x5a, 0xbb, 0x98, 0xbf, 0x60, 0x83, 0x4c, 0xe4, 0x1c, 0xb1, 0x62, 0xea, 0x75, 0x62, 0xe4,
	0x63, 0x71, 0xdb, 0x52, 0xa3, 0x2c, 0xac, 0x08, 0xb5, 0x05, 0x83, 0xf9, 0x4b, 0xd6, 0xde, 0x64,
	0xf4, 0x7d, 0x02, 0x4b, 0x9c, 0xfe, 0x1c, 0x89, 0xa3, 0xa8, 0x21, 0x78, 0x70, 0x84, 0x9a, 0x1b,
	0xca, 0x87, 0x42, 0x04, 0xdd, 0xae, 0xb4, 0x8b, 0xc9, 0x35, 0x62, 0x57, 0x36, 0x20, 0x25, 0xca,
	0x85, 0x78, 0xf4, 0x87, 0x86, 0x7e, 0x87, 0xaa, 0x03, 0xd9, 0x75, 0xd4, 0xb0, 0x51, 0x76, 0xad,
	0xf3, 0x3d, 0xf6, 0x1c, 0x5f, 0x7a, 0xde, 0x25, 0xd1, 0x7c, 0xd0, 0x7c, 0x48, 0x12, 0x5e, 0xe2,
	0xdb, 0x1a, 0x42, 0x54, 0x3e, 0xe6, 0xfb, 0xc3, 0x12, 0xdf, 0xd6, 0xcb, 0x04, 0xc8, 0x63, 0x91,
	0xf5, 0xb4, 0xb9, 0xd0, 0xf9, 0x35, 0x66, 0x0f, 0x98, 0x35, 0x17, 0x7a, 0xfa, 0x6b, 0x24, 0xee,
	0xfe, 0xf3, 0xb1, 0xf2, 0x81, 0x38, 0xe0, 0xbb, 0x69, 0xc8, 0x72, 0xe9, 0xac, 0xba, 0x9c, 0xe5,
	0x7d, 0x71, 0xa3, 0x7f, 0x1f, 0x72, 0xb7, 0xac, 0x1a, 0xa7, 0xb1, 0xc4, 0x44, 0xf4, 0x09, 0xc8,
	0x1d, 0xb2, 0x6a, 0x9c, 0xc6, 0x12, 0x25, 0x09, 0xd9, 0x3f, 0x2d, 0x18, 0x04, 0xe5, 0x10, 0x82,
	0xaf, 0x5b, 0x6e, 0x72, 0x38, 0x7b, 0x75, 0x85, 0x43, 0xf8, 0xeb, 0x93, 0xab, 0x23, 0x4e, 0x5f,
	0x1a, 0x9c, 0x3b, 0x5c, 0xfa, 0xba, 0xad, 0xc7, 0x5c, 0xf6, 0xec, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x1c, 0x8d, 0xaa, 0x4a, 0x1e, 0x03, 0x00, 0x00,
}
