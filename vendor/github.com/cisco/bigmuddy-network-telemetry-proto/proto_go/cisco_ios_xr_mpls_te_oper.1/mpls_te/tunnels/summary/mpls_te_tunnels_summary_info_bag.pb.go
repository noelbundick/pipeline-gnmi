// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_tunnels_summary_info_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_tunnels_summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MPLS TE Tunnel Summary Information
type MplsTeTunnelsSummaryInfoBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelsSummaryInfoBag_KEYS) Reset()         { *m = MplsTeTunnelsSummaryInfoBag_KEYS{} }
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsSummaryInfoBag_KEYS) ProtoMessage()    {}
func (*MplsTeTunnelsSummaryInfoBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{0}
}
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.Merge(dst, src)
}
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.Size(m)
}
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS proto.InternalMessageInfo

type MplsTeTunnelsSummaryInfoBag struct {
	// PCALC tiebreaker
	PcalcTiebreaker uint32 `protobuf:"varint,50,opt,name=pcalc_tiebreaker,json=pcalcTiebreaker" json:"pcalc_tiebreaker,omitempty"`
	// Describes how the path selection tiebreaker was specified:default, or globally set
	TiebreakerQualifier string `protobuf:"bytes,51,opt,name=tiebreaker_qualifier,json=tiebreakerQualifier" json:"tiebreaker_qualifier,omitempty"`
	// Status of te_control
	TeProcessStatus string `protobuf:"bytes,52,opt,name=te_process_status,json=teProcessStatus" json:"te_process_status,omitempty"`
	// Status of rsvp
	IsRsvpProcessEnabled bool `protobuf:"varint,53,opt,name=is_rsvp_process_enabled,json=isRsvpProcessEnabled" json:"is_rsvp_process_enabled,omitempty"`
	// TRUE if forwarding is enabled
	IsForwardingEnabled bool `protobuf:"varint,54,opt,name=is_forwarding_enabled,json=isForwardingEnabled" json:"is_forwarding_enabled,omitempty"`
	// Total tunnel heads activated
	ActivatedHeads uint32 `protobuf:"varint,55,opt,name=activated_heads,json=activatedHeads" json:"activated_heads,omitempty"`
	// Total tunnel heads deactivated
	DeactivatedHeads uint32 `protobuf:"varint,56,opt,name=deactivated_heads,json=deactivatedHeads" json:"deactivated_heads,omitempty"`
	// Number of heads recovered
	RecoveredHeads uint32 `protobuf:"varint,57,opt,name=recovered_heads,json=recoveredHeads" json:"recovered_heads,omitempty"`
	// TRUE if periodic reoptimization is on
	IsPeriodicReoptimizationOn bool `protobuf:"varint,58,opt,name=is_periodic_reoptimization_on,json=isPeriodicReoptimizationOn" json:"is_periodic_reoptimization_on,omitempty"`
	// Reoptimization period in seconds
	ReoptimizationPeriod uint32 `protobuf:"varint,59,opt,name=reoptimization_period,json=reoptimizationPeriod" json:"reoptimization_period,omitempty"`
	// Time left till next reoptimization (seconds)
	NextReoptimizationTimer uint32 `protobuf:"varint,60,opt,name=next_reoptimization_timer,json=nextReoptimizationTimer" json:"next_reoptimization_timer,omitempty"`
	// Counter with number of auto-bw enabled tunnels
	AutoBandwidthTunnels uint32 `protobuf:"varint,61,opt,name=auto_bandwidth_tunnels,json=autoBandwidthTunnels" json:"auto_bandwidth_tunnels,omitempty"`
	// Collection period in minutes
	AutoBandwidthCollectionPeriod uint32 `protobuf:"varint,62,opt,name=auto_bandwidth_collection_period,json=autoBandwidthCollectionPeriod" json:"auto_bandwidth_collection_period,omitempty"`
	// TRUE if periodic frr promotion is on
	IsPromotionOn bool `protobuf:"varint,63,opt,name=is_promotion_on,json=isPromotionOn" json:"is_promotion_on,omitempty"`
	// FRR promotion period in seconds
	PromotionPeriod uint32 `protobuf:"varint,64,opt,name=promotion_period,json=promotionPeriod" json:"promotion_period,omitempty"`
	// Time left till next FRR promotion (seconds)
	NextPromotionTimer uint32 `protobuf:"varint,65,opt,name=next_promotion_timer,json=nextPromotionTimer" json:"next_promotion_timer,omitempty"`
	// Tunnel head check period (seconds)
	TunnelCheckPeriod uint32 `protobuf:"varint,66,opt,name=tunnel_check_period,json=tunnelCheckPeriod" json:"tunnel_check_period,omitempty"`
	// Time left till next FRR promotion (seconds)
	NextCheckTime uint32 `protobuf:"varint,67,opt,name=next_check_time,json=nextCheckTime" json:"next_check_time,omitempty"`
	// Tunnel head verify period (seconds)
	TunnelVerifyPeriod uint32 `protobuf:"varint,68,opt,name=tunnel_verify_period,json=tunnelVerifyPeriod" json:"tunnel_verify_period,omitempty"`
	// Time left till next FRR promotion (seconds)
	NextVerifyTimer uint32 `protobuf:"varint,69,opt,name=next_verify_timer,json=nextVerifyTimer" json:"next_verify_timer,omitempty"`
	// FRR tunnels in Up state at head end
	FrrHeadTunnels uint32 `protobuf:"varint,70,opt,name=frr_head_tunnels,json=frrHeadTunnels" json:"frr_head_tunnels,omitempty"`
	// FRR protected tunnels in Up state at head end
	ProtectedHeadTunnels uint32 `protobuf:"varint,71,opt,name=protected_head_tunnels,json=protectedHeadTunnels" json:"protected_head_tunnels,omitempty"`
	// FRR rerouted tunnels in Up state at head end
	ReroutedHeadTunnels uint32 `protobuf:"varint,72,opt,name=rerouted_head_tunnels,json=reroutedHeadTunnels" json:"rerouted_head_tunnels,omitempty"`
	// FRR tunnels at mid point
	FrrMidPointTunnels uint32 `protobuf:"varint,73,opt,name=frr_mid_point_tunnels,json=frrMidPointTunnels" json:"frr_mid_point_tunnels,omitempty"`
	// FRR protected tunnels at mid point
	ProtectedMidPointTunnels uint32 `protobuf:"varint,74,opt,name=protected_mid_point_tunnels,json=protectedMidPointTunnels" json:"protected_mid_point_tunnels,omitempty"`
	// FRR rerouted tunnels at mid point
	ReroutedMidPointTunnels uint32 `protobuf:"varint,75,opt,name=rerouted_mid_point_tunnels,json=reroutedMidPointTunnels" json:"rerouted_mid_point_tunnels,omitempty"`
	// FRR link protected tunnels
	LinkProtectedTunnels uint32 `protobuf:"varint,76,opt,name=link_protected_tunnels,json=linkProtectedTunnels" json:"link_protected_tunnels,omitempty"`
	// FRR node protected tunnels
	NodeProtectedTunnels uint32 `protobuf:"varint,77,opt,name=node_protected_tunnels,json=nodeProtectedTunnels" json:"node_protected_tunnels,omitempty"`
	// FRR BW protected tunnels
	BwProtectedTunnels uint32 `protobuf:"varint,78,opt,name=bw_protected_tunnels,json=bwProtectedTunnels" json:"bw_protected_tunnels,omitempty"`
	// P2P FRR tunnels in Up state at head end
	FrrP2PHeadTunnels uint32 `protobuf:"varint,79,opt,name=frr_p2_p_head_tunnels,json=frrP2PHeadTunnels" json:"frr_p2_p_head_tunnels,omitempty"`
	// P2P FRR protected tunnels in Up state at head end
	ProtectedP2PHeadTunnels uint32 `protobuf:"varint,80,opt,name=protected_p2_p_head_tunnels,json=protectedP2PHeadTunnels" json:"protected_p2_p_head_tunnels,omitempty"`
	// P2P FRR rerouted tunnels in Up state at head end
	ReroutedP2PHeadTunnels uint32 `protobuf:"varint,81,opt,name=rerouted_p2_p_head_tunnels,json=reroutedP2PHeadTunnels" json:"rerouted_p2_p_head_tunnels,omitempty"`
	// P2P FRR tunnels at mid point
	FrrP2PMidPointTunnels uint32 `protobuf:"varint,82,opt,name=frr_p2_p_mid_point_tunnels,json=frrP2PMidPointTunnels" json:"frr_p2_p_mid_point_tunnels,omitempty"`
	// P2P FRR protected tunnels at mid point
	ProtectedP2PMidPointTunnels uint32 `protobuf:"varint,83,opt,name=protected_p2_p_mid_point_tunnels,json=protectedP2PMidPointTunnels" json:"protected_p2_p_mid_point_tunnels,omitempty"`
	// P2P FRR rerouted tunnels at mid point
	ReroutedP2PMidPointTunnels uint32 `protobuf:"varint,84,opt,name=rerouted_p2_p_mid_point_tunnels,json=reroutedP2PMidPointTunnels" json:"rerouted_p2_p_mid_point_tunnels,omitempty"`
	// P2P FRR link protected tunnels
	LinkProtectedP2PTunnels uint32 `protobuf:"varint,85,opt,name=link_protected_p2_p_tunnels,json=linkProtectedP2PTunnels" json:"link_protected_p2_p_tunnels,omitempty"`
	// P2P FRR node protected tunnels
	NodeProtectedP2PTunnels uint32 `protobuf:"varint,86,opt,name=node_protected_p2_p_tunnels,json=nodeProtectedP2PTunnels" json:"node_protected_p2_p_tunnels,omitempty"`
	// P2P FRR BW protected tunnels
	BwProtectedP2PTunnels uint32 `protobuf:"varint,87,opt,name=bw_protected_p2_p_tunnels,json=bwProtectedP2PTunnels" json:"bw_protected_p2_p_tunnels,omitempty"`
	// FRR backup tunnels in Up state
	BackupTunnels uint32 `protobuf:"varint,88,opt,name=backup_tunnels,json=backupTunnels" json:"backup_tunnels,omitempty"`
	// FRR backup tunnels assigned
	BackupsAssigned uint32 `protobuf:"varint,89,opt,name=backups_assigned,json=backupsAssigned" json:"backups_assigned,omitempty"`
	// FRR Protected Interfaces
	FrrProtectedInterfaces uint32 `protobuf:"varint,90,opt,name=frr_protected_interfaces,json=frrProtectedInterfaces" json:"frr_protected_interfaces,omitempty"`
	// FRR Rerouted Interfaces
	ReroutedInterfaces uint32 `protobuf:"varint,91,opt,name=rerouted_interfaces,json=reroutedInterfaces" json:"rerouted_interfaces,omitempty"`
	// p2p Tunnel interfaces
	P2PHeadTunnels uint32 `protobuf:"varint,92,opt,name=p2_p_head_tunnels,json=p2PHeadTunnels" json:"p2_p_head_tunnels,omitempty"`
	// p2p Tunnel interfaces in Up state
	UpP2PHeadTunnels uint32 `protobuf:"varint,93,opt,name=up_p2_p_head_tunnels,json=upP2PHeadTunnels" json:"up_p2_p_head_tunnels,omitempty"`
	// p2p Tunnel up via a dynamic path
	DynamicUpP2PHeadTunnels uint32 `protobuf:"varint,94,opt,name=dynamic_up_p2_p_head_tunnels,json=dynamicUpP2PHeadTunnels" json:"dynamic_up_p2_p_head_tunnels,omitempty"`
	// p2p Tunnel interfaces with FRR configuration
	FrrConfigP2PHeadTunnels uint32 `protobuf:"varint,95,opt,name=frr_config_p2_p_head_tunnels,json=frrConfigP2PHeadTunnels" json:"frr_config_p2_p_head_tunnels,omitempty"`
	// p2p Destinations at Head
	P2PHeadDestinations uint32 `protobuf:"varint,96,opt,name=p2_p_head_destinations,json=p2PHeadDestinations" json:"p2_p_head_destinations,omitempty"`
	// p2p Destinations in Up state at Head
	P2PHeadDestinationsUp uint32 `protobuf:"varint,97,opt,name=p2_p_head_destinations_up,json=p2PHeadDestinationsUp" json:"p2_p_head_destinations_up,omitempty"`
	// p2p S2Ls BW Protected
	BwProtectedP2PS2Ls uint32 `protobuf:"varint,98,opt,name=bw_protected_p2_p_s2_ls,json=bwProtectedP2PS2Ls" json:"bw_protected_p2_p_s2_ls,omitempty"`
	// p2p S2Ls Link Protected
	LinkProtectedP2PS2Ls uint32 `protobuf:"varint,99,opt,name=link_protected_p2_p_s2_ls,json=linkProtectedP2PS2Ls" json:"link_protected_p2_p_s2_ls,omitempty"`
	// p2p S2Ls in Up state at Head
	UpP2PHeadS2Ls uint32 `protobuf:"varint,100,opt,name=up_p2_p_head_s2_ls,json=upP2PHeadS2Ls" json:"up_p2_p_head_s2_ls,omitempty"`
	// p2p S2Ls in signalling-proceeding state at Head
	ProceedingP2PHeadS2Ls uint32 `protobuf:"varint,101,opt,name=proceeding_p2_p_head_s2_ls,json=proceedingP2PHeadS2Ls" json:"proceeding_p2_p_head_s2_ls,omitempty"`
	// p2p S2Ls recovering at Head
	RecoveringP2PHeadS2Ls uint32 `protobuf:"varint,102,opt,name=recovering_p2_p_head_s2_ls,json=recoveringP2PHeadS2Ls" json:"recovering_p2_p_head_s2_ls,omitempty"`
	// p2p S2Ls with FRR requested at Head
	FrrP2PHeadS2Ls uint32 `protobuf:"varint,103,opt,name=frr_p2_p_head_s2_ls,json=frrP2PHeadS2Ls" json:"frr_p2_p_head_s2_ls,omitempty"`
	// p2p S2Ls FRR Protected at Head
	ProtectedP2PHeadS2Ls uint32 `protobuf:"varint,104,opt,name=protected_p2_p_head_s2_ls,json=protectedP2PHeadS2Ls" json:"protected_p2_p_head_s2_ls,omitempty"`
	// p2p S2Ls FRR Rerouted at Head
	ReroutedP2PHeadS2Ls uint32 `protobuf:"varint,105,opt,name=rerouted_p2_p_head_s2_ls,json=reroutedP2PHeadS2Ls" json:"rerouted_p2_p_head_s2_ls,omitempty"`
	// p2p S2Ls at Mid
	P2PMidPointS2Ls uint32 `protobuf:"varint,106,opt,name=p2_p_mid_point_s2_ls,json=p2PMidPointS2Ls" json:"p2_p_mid_point_s2_ls,omitempty"`
	// p2p S2Ls in Up state at Mid
	UpP2PMidPointS2Ls uint32 `protobuf:"varint,107,opt,name=up_p2_p_mid_point_s2_ls,json=upP2PMidPointS2Ls" json:"up_p2_p_mid_point_s2_ls,omitempty"`
	// p2p S2Ls in signalling=proceeding state at Mid
	ProceedingP2PMidPointS2Ls uint32 `protobuf:"varint,108,opt,name=proceeding_p2_p_mid_point_s2_ls,json=proceedingP2PMidPointS2Ls" json:"proceeding_p2_p_mid_point_s2_ls,omitempty"`
	// p2p S2Ls with FRR requested at Mid
	FrrP2PMidPointS2Ls uint32 `protobuf:"varint,109,opt,name=frr_p2_p_mid_point_s2_ls,json=frrP2PMidPointS2Ls" json:"frr_p2_p_mid_point_s2_ls,omitempty"`
	// p2p S2Ls FRR Protected at Mid
	ProtectedP2PMidPointS2Ls uint32 `protobuf:"varint,110,opt,name=protected_p2_p_mid_point_s2_ls,json=protectedP2PMidPointS2Ls" json:"protected_p2_p_mid_point_s2_ls,omitempty"`
	// p2p S2Ls FRR Rerouted at Mid
	ReroutedP2PMidPointS2Ls uint32 `protobuf:"varint,111,opt,name=rerouted_p2_p_mid_point_s2_ls,json=reroutedP2PMidPointS2Ls" json:"rerouted_p2_p_mid_point_s2_ls,omitempty"`
	// p2p S2Ls at Tail
	P2PTailS2Ls uint32 `protobuf:"varint,112,opt,name=p2_p_tail_s2_ls,json=p2PTailS2Ls" json:"p2_p_tail_s2_ls,omitempty"`
	// p2p S2Ls in Up state at Tail
	UpP2PTailS2Ls uint32 `protobuf:"varint,113,opt,name=up_p2_p_tail_s2_ls,json=upP2PTailS2Ls" json:"up_p2_p_tail_s2_ls,omitempty"`
	// p2p Tunnel tail interfaces
	P2PTailTunnels uint32 `protobuf:"varint,114,opt,name=p2_p_tail_tunnels,json=p2PTailTunnels" json:"p2_p_tail_tunnels,omitempty"`
	// Tunnels configured with Path Protect
	PathProtectConfiguredTunnels uint32 `protobuf:"varint,115,opt,name=path_protect_configured_tunnels,json=pathProtectConfiguredTunnels" json:"path_protect_configured_tunnels,omitempty"`
	// Path Protect configured tunnels connected/up
	PathProtectConfiguredTunnelsUp uint32 `protobuf:"varint,116,opt,name=path_protect_configured_tunnels_up,json=pathProtectConfiguredTunnelsUp" json:"path_protect_configured_tunnels_up,omitempty"`
	// Tunnels with standby LSP up
	PathProtectConfiguredTunnelsStandbyUp uint32 `protobuf:"varint,117,opt,name=path_protect_configured_tunnels_standby_up,json=pathProtectConfiguredTunnelsStandbyUp" json:"path_protect_configured_tunnels_standby_up,omitempty"`
	// Link diverse paths
	LinkDiversePaths uint32 `protobuf:"varint,118,opt,name=link_diverse_paths,json=linkDiversePaths" json:"link_diverse_paths,omitempty"`
	// Node diverse paths
	NodeDiversePaths uint32 `protobuf:"varint,119,opt,name=node_diverse_paths,json=nodeDiversePaths" json:"node_diverse_paths,omitempty"`
	// Link and Node diverse paths
	LinkAndNodeDiversePaths uint32 `protobuf:"varint,120,opt,name=link_and_node_diverse_paths,json=linkAndNodeDiversePaths" json:"link_and_node_diverse_paths,omitempty"`
	// User defined paths
	UserDefinedPaths uint32 `protobuf:"varint,121,opt,name=user_defined_paths,json=userDefinedPaths" json:"user_defined_paths,omitempty"`
	// P2MP Tunnel interfaces
	P2MpHeadTunnels uint32 `protobuf:"varint,122,opt,name=p2_mp_head_tunnels,json=p2MpHeadTunnels" json:"p2_mp_head_tunnels,omitempty"`
	// P2MP Tunnel interfaces in Up state
	UpP2MpHeadTunnels uint32 `protobuf:"varint,123,opt,name=up_p2_mp_head_tunnels,json=upP2MpHeadTunnels" json:"up_p2_mp_head_tunnels,omitempty"`
	// P2MP Tunnel interfaces with FRR configuration
	FrrConfigP2MpHeadTunnels uint32 `protobuf:"varint,124,opt,name=frr_config_p2_mp_head_tunnels,json=frrConfigP2MpHeadTunnels" json:"frr_config_p2_mp_head_tunnels,omitempty"`
	// P2MP Destinations at Head
	P2MpHeadDestinations uint32 `protobuf:"varint,125,opt,name=p2_mp_head_destinations,json=p2MpHeadDestinations" json:"p2_mp_head_destinations,omitempty"`
	// P2MP Destinations in Up state at Head
	UpP2MpHeadDestinations uint32 `protobuf:"varint,126,opt,name=up_p2_mp_head_destinations,json=upP2MpHeadDestinations" json:"up_p2_mp_head_destinations,omitempty"`
	// P2MP S2Ls BW Protected
	BwProtectedP2MpS2Ls uint32 `protobuf:"varint,127,opt,name=bw_protected_p2_mp_s2_ls,json=bwProtectedP2MpS2Ls" json:"bw_protected_p2_mp_s2_ls,omitempty"`
	// P2MP S2Ls Link Protected
	LinkProtectedP2MpS2Ls uint32 `protobuf:"varint,128,opt,name=link_protected_p2_mp_s2_ls,json=linkProtectedP2MpS2Ls" json:"link_protected_p2_mp_s2_ls,omitempty"`
	// P2MP S2Ls in Up state at Head
	UpP2MpHeadS2Ls uint32 `protobuf:"varint,129,opt,name=up_p2_mp_head_s2_ls,json=upP2MpHeadS2Ls" json:"up_p2_mp_head_s2_ls,omitempty"`
	// P2MP S2Ls in signalling-proceeding state at Head
	ProceedingP2MpHeadS2Ls uint32 `protobuf:"varint,130,opt,name=proceeding_p2_mp_head_s2_ls,json=proceedingP2MpHeadS2Ls" json:"proceeding_p2_mp_head_s2_ls,omitempty"`
	// P2MP S2Ls with FRR requested at Head
	FrrP2MpHeadS2Ls uint32 `protobuf:"varint,131,opt,name=frr_p2_mp_head_s2_ls,json=frrP2MpHeadS2Ls" json:"frr_p2_mp_head_s2_ls,omitempty"`
	// P2MP S2Ls FRR Protected at Head
	ProtectedP2MpHeadS2Ls uint32 `protobuf:"varint,132,opt,name=protected_p2_mp_head_s2_ls,json=protectedP2MpHeadS2Ls" json:"protected_p2_mp_head_s2_ls,omitempty"`
	// P2MP S2Ls FRR Rerouted at Head
	ReroutedP2MpHeadS2Ls uint32 `protobuf:"varint,133,opt,name=rerouted_p2_mp_head_s2_ls,json=reroutedP2MpHeadS2Ls" json:"rerouted_p2_mp_head_s2_ls,omitempty"`
	// P2MP S2Ls at Mid
	P2MpMidPointS2Ls uint32 `protobuf:"varint,134,opt,name=p2_mp_mid_point_s2_ls,json=p2MpMidPointS2Ls" json:"p2_mp_mid_point_s2_ls,omitempty"`
	// P2MP S2Ls in Up state at Mid
	UpP2MpMidPointS2Ls uint32 `protobuf:"varint,135,opt,name=up_p2_mp_mid_point_s2_ls,json=upP2MpMidPointS2Ls" json:"up_p2_mp_mid_point_s2_ls,omitempty"`
	// P2MP S2Ls in signalling=proceeding state at Mid
	ProceedingP2MpMidPointS2Ls uint32 `protobuf:"varint,136,opt,name=proceeding_p2_mp_mid_point_s2_ls,json=proceedingP2MpMidPointS2Ls" json:"proceeding_p2_mp_mid_point_s2_ls,omitempty"`
	// P2MP S2Ls with FRR requested at Mid
	FrrP2MpMidPointS2Ls uint32 `protobuf:"varint,137,opt,name=frr_p2_mp_mid_point_s2_ls,json=frrP2MpMidPointS2Ls" json:"frr_p2_mp_mid_point_s2_ls,omitempty"`
	// P2MP S2Ls FRR Protected at Mid
	ProtectedP2MpMidPointS2Ls uint32 `protobuf:"varint,138,opt,name=protected_p2_mp_mid_point_s2_ls,json=protectedP2MpMidPointS2Ls" json:"protected_p2_mp_mid_point_s2_ls,omitempty"`
	// P2MP S2Ls FRR Rerouted at Mid
	ReroutedP2MpMidPointS2Ls uint32 `protobuf:"varint,139,opt,name=rerouted_p2_mp_mid_point_s2_ls,json=reroutedP2MpMidPointS2Ls" json:"rerouted_p2_mp_mid_point_s2_ls,omitempty"`
	// P2MP S2Ls at Tail
	P2MpTailS2Ls uint32 `protobuf:"varint,140,opt,name=p2_mp_tail_s2_ls,json=p2MpTailS2Ls" json:"p2_mp_tail_s2_ls,omitempty"`
	// P2MP S2Ls in Up state at Tail
	UpP2MpTailS2Ls uint32 `protobuf:"varint,141,opt,name=up_p2_mp_tail_s2_ls,json=upP2MpTailS2Ls" json:"up_p2_mp_tail_s2_ls,omitempty"`
	// Bidirectional Head Tunnel interfaces
	BidirHeadTunnels uint32 `protobuf:"varint,142,opt,name=bidir_head_tunnels,json=bidirHeadTunnels" json:"bidir_head_tunnels,omitempty"`
	// Connected Bidirectional Head Tunnel interfaces
	BidirHeadTunnelsUp uint32 `protobuf:"varint,143,opt,name=bidir_head_tunnels_up,json=bidirHeadTunnelsUp" json:"bidir_head_tunnels_up,omitempty"`
	// Associated Bidirectional Head Tunnels
	BidirHeadTunnelsAssociated uint32 `protobuf:"varint,144,opt,name=bidir_head_tunnels_associated,json=bidirHeadTunnelsAssociated" json:"bidir_head_tunnels_associated,omitempty"`
	// Corouted Bidirectional Head Tunnels
	BidirHeadTunnelsCorouted uint32 `protobuf:"varint,145,opt,name=bidir_head_tunnels_corouted,json=bidirHeadTunnelsCorouted" json:"bidir_head_tunnels_corouted,omitempty"`
	// Connected Bidirectional Head Tunnel interfaces
	BidirHeadLsPsUp uint32 `protobuf:"varint,146,opt,name=bidir_head_ls_ps_up,json=bidirHeadLsPsUp" json:"bidir_head_ls_ps_up,omitempty"`
	// Proceeding Bidirectional Head LSPs
	BidirHeadLsPsProceeding uint32 `protobuf:"varint,147,opt,name=bidir_head_ls_ps_proceeding,json=bidirHeadLsPsProceeding" json:"bidir_head_ls_ps_proceeding,omitempty"`
	// Associated Bidirectional Head LSPs
	BidirHeadLsPsAssociated uint32 `protobuf:"varint,148,opt,name=bidir_head_ls_ps_associated,json=bidirHeadLsPsAssociated" json:"bidir_head_ls_ps_associated,omitempty"`
	// Standby Bidirectional Head LSPs
	BidirHeadLsPsStandby uint32 `protobuf:"varint,149,opt,name=bidir_head_ls_ps_standby,json=bidirHeadLsPsStandby" json:"bidir_head_ls_ps_standby,omitempty"`
	// Bidirectional Mid Tunnel interfaces
	BidirMidTunnels uint32 `protobuf:"varint,150,opt,name=bidir_mid_tunnels,json=bidirMidTunnels" json:"bidir_mid_tunnels,omitempty"`
	// Connected Bidirectional Mid Tunnel interfaces
	BidirMidTunnelsUp uint32 `protobuf:"varint,151,opt,name=bidir_mid_tunnels_up,json=bidirMidTunnelsUp" json:"bidir_mid_tunnels_up,omitempty"`
	// Proceeding Bidirectional Mid LSPs
	BidirMidLsPsProceeding uint32 `protobuf:"varint,152,opt,name=bidir_mid_ls_ps_proceeding,json=bidirMidLsPsProceeding" json:"bidir_mid_ls_ps_proceeding,omitempty"`
	// Associated Bidirectional Mid LSPs
	BidirMidLsPsAssociated uint32 `protobuf:"varint,153,opt,name=bidir_mid_ls_ps_associated,json=bidirMidLsPsAssociated" json:"bidir_mid_ls_ps_associated,omitempty"`
	// Standby Bidirectional Mid LSPs
	BidirMidLsPsStandby uint32 `protobuf:"varint,154,opt,name=bidir_mid_ls_ps_standby,json=bidirMidLsPsStandby" json:"bidir_mid_ls_ps_standby,omitempty"`
	// Bidirectional Tail LSPs
	BidirTailLsPs uint32 `protobuf:"varint,155,opt,name=bidir_tail_ls_ps,json=bidirTailLsPs" json:"bidir_tail_ls_ps,omitempty"`
	// Connected Bidirectional Tail LSPs
	BidirTailLsPsUp uint32 `protobuf:"varint,156,opt,name=bidir_tail_ls_ps_up,json=bidirTailLsPsUp" json:"bidir_tail_ls_ps_up,omitempty"`
	// Proceeding Bidirectional Tail LSPs
	BidirTailLsPsProceeding uint32 `protobuf:"varint,157,opt,name=bidir_tail_ls_ps_proceeding,json=bidirTailLsPsProceeding" json:"bidir_tail_ls_ps_proceeding,omitempty"`
	// Associated Bidirectional Tail LSPs
	BidirTailLsPsAssociated uint32 `protobuf:"varint,158,opt,name=bidir_tail_ls_ps_associated,json=bidirTailLsPsAssociated" json:"bidir_tail_ls_ps_associated,omitempty"`
	// Standby Bidirectional Tail LSPs
	BidirTailLsPsStandby uint32 `protobuf:"varint,159,opt,name=bidir_tail_ls_ps_standby,json=bidirTailLsPsStandby" json:"bidir_tail_ls_ps_standby,omitempty"`
	// Corouted Bidirectional Tail LSPs
	BidirTailLsPsCorouted uint32 `protobuf:"varint,160,opt,name=bidir_tail_ls_ps_corouted,json=bidirTailLsPsCorouted" json:"bidir_tail_ls_ps_corouted,omitempty"`
	// Autobackup summary
	AutobackupSummary *MplsTeAutotunBackupSummaryInfo `protobuf:"bytes,161,opt,name=autobackup_summary,json=autobackupSummary" json:"autobackup_summary,omitempty"`
	// Automesh summary
	AutoMeshSummary *MplsTeAutotunMeshSummaryInfo `protobuf:"bytes,162,opt,name=auto_mesh_summary,json=autoMeshSummary" json:"auto_mesh_summary,omitempty"`
	// Automesh Onehop summary
	AutoMeshOneHopSummary *MplsTeAutotunMeshOnehopSummaryInfo `protobuf:"bytes,163,opt,name=auto_mesh_one_hop_summary,json=autoMeshOneHopSummary" json:"auto_mesh_one_hop_summary,omitempty"`
	// GMPLS-UNI summary
	GmplsUniSummary *MplsTeGmplsUniSummaryInfo `protobuf:"bytes,164,opt,name=gmpls_uni_summary,json=gmplsUniSummary" json:"gmpls_uni_summary,omitempty"`
	// GMPLS-NNI summary
	GmplsNniSummary *MplsTeGmplsNniSummaryInfo `protobuf:"bytes,165,opt,name=gmpls_nni_summary,json=gmplsNniSummary" json:"gmpls_nni_summary,omitempty"`
	// Current Tunnel convergemce summary information
	CurrentTunnelConvergenceSummary *TeConvTblSummaryBag `protobuf:"bytes,166,opt,name=current_tunnel_convergence_summary,json=currentTunnelConvergenceSummary" json:"current_tunnel_convergence_summary,omitempty"`
	// Last Tunnel convergemce summary information
	LastTunnelConvergenceSummary *TeConvTblSummaryBag `protobuf:"bytes,167,opt,name=last_tunnel_convergence_summary,json=lastTunnelConvergenceSummary" json:"last_tunnel_convergence_summary,omitempty"`
	// Auto-tunnel server tunnel summary
	AutoTunServerSummary *MplsTeAutotunSvrSummaryInfo `protobuf:"bytes,168,opt,name=auto_tun_server_summary,json=autoTunServerSummary" json:"auto_tun_server_summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *MplsTeTunnelsSummaryInfoBag) Reset()         { *m = MplsTeTunnelsSummaryInfoBag{} }
func (m *MplsTeTunnelsSummaryInfoBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsSummaryInfoBag) ProtoMessage()    {}
func (*MplsTeTunnelsSummaryInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{1}
}
func (m *MplsTeTunnelsSummaryInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.Unmarshal(m, b)
}
func (m *MplsTeTunnelsSummaryInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.Marshal(b, m, deterministic)
}
func (dst *MplsTeTunnelsSummaryInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.Merge(dst, src)
}
func (m *MplsTeTunnelsSummaryInfoBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.Size(m)
}
func (m *MplsTeTunnelsSummaryInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsSummaryInfoBag proto.InternalMessageInfo

func (m *MplsTeTunnelsSummaryInfoBag) GetPcalcTiebreaker() uint32 {
	if m != nil {
		return m.PcalcTiebreaker
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetTiebreakerQualifier() string {
	if m != nil {
		return m.TiebreakerQualifier
	}
	return ""
}

func (m *MplsTeTunnelsSummaryInfoBag) GetTeProcessStatus() string {
	if m != nil {
		return m.TeProcessStatus
	}
	return ""
}

func (m *MplsTeTunnelsSummaryInfoBag) GetIsRsvpProcessEnabled() bool {
	if m != nil {
		return m.IsRsvpProcessEnabled
	}
	return false
}

func (m *MplsTeTunnelsSummaryInfoBag) GetIsForwardingEnabled() bool {
	if m != nil {
		return m.IsForwardingEnabled
	}
	return false
}

func (m *MplsTeTunnelsSummaryInfoBag) GetActivatedHeads() uint32 {
	if m != nil {
		return m.ActivatedHeads
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetDeactivatedHeads() uint32 {
	if m != nil {
		return m.DeactivatedHeads
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetRecoveredHeads() uint32 {
	if m != nil {
		return m.RecoveredHeads
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetIsPeriodicReoptimizationOn() bool {
	if m != nil {
		return m.IsPeriodicReoptimizationOn
	}
	return false
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReoptimizationPeriod() uint32 {
	if m != nil {
		return m.ReoptimizationPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNextReoptimizationTimer() uint32 {
	if m != nil {
		return m.NextReoptimizationTimer
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoBandwidthTunnels() uint32 {
	if m != nil {
		return m.AutoBandwidthTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoBandwidthCollectionPeriod() uint32 {
	if m != nil {
		return m.AutoBandwidthCollectionPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetIsPromotionOn() bool {
	if m != nil {
		return m.IsPromotionOn
	}
	return false
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPromotionPeriod() uint32 {
	if m != nil {
		return m.PromotionPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNextPromotionTimer() uint32 {
	if m != nil {
		return m.NextPromotionTimer
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetTunnelCheckPeriod() uint32 {
	if m != nil {
		return m.TunnelCheckPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNextCheckTime() uint32 {
	if m != nil {
		return m.NextCheckTime
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetTunnelVerifyPeriod() uint32 {
	if m != nil {
		return m.TunnelVerifyPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNextVerifyTimer() uint32 {
	if m != nil {
		return m.NextVerifyTimer
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrHeadTunnels() uint32 {
	if m != nil {
		return m.FrrHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedHeadTunnels() uint32 {
	if m != nil {
		return m.ProtectedHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedHeadTunnels() uint32 {
	if m != nil {
		return m.ReroutedHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrMidPointTunnels() uint32 {
	if m != nil {
		return m.FrrMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedMidPointTunnels() uint32 {
	if m != nil {
		return m.ProtectedMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedMidPointTunnels() uint32 {
	if m != nil {
		return m.ReroutedMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkProtectedTunnels() uint32 {
	if m != nil {
		return m.LinkProtectedTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNodeProtectedTunnels() uint32 {
	if m != nil {
		return m.NodeProtectedTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBwProtectedTunnels() uint32 {
	if m != nil {
		return m.BwProtectedTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2PHeadTunnels() uint32 {
	if m != nil {
		return m.FrrP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2PHeadTunnels() uint32 {
	if m != nil {
		return m.ProtectedP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2PHeadTunnels() uint32 {
	if m != nil {
		return m.ReroutedP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2PMidPointTunnels() uint32 {
	if m != nil {
		return m.FrrP2PMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2PMidPointTunnels() uint32 {
	if m != nil {
		return m.ProtectedP2PMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2PMidPointTunnels() uint32 {
	if m != nil {
		return m.ReroutedP2PMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkProtectedP2PTunnels() uint32 {
	if m != nil {
		return m.LinkProtectedP2PTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNodeProtectedP2PTunnels() uint32 {
	if m != nil {
		return m.NodeProtectedP2PTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBwProtectedP2PTunnels() uint32 {
	if m != nil {
		return m.BwProtectedP2PTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBackupTunnels() uint32 {
	if m != nil {
		return m.BackupTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBackupsAssigned() uint32 {
	if m != nil {
		return m.BackupsAssigned
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrProtectedInterfaces() uint32 {
	if m != nil {
		return m.FrrProtectedInterfaces
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedInterfaces() uint32 {
	if m != nil {
		return m.ReroutedInterfaces
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PHeadTunnels() uint32 {
	if m != nil {
		return m.P2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2PHeadTunnels() uint32 {
	if m != nil {
		return m.UpP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetDynamicUpP2PHeadTunnels() uint32 {
	if m != nil {
		return m.DynamicUpP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrConfigP2PHeadTunnels() uint32 {
	if m != nil {
		return m.FrrConfigP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PHeadDestinations() uint32 {
	if m != nil {
		return m.P2PHeadDestinations
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PHeadDestinationsUp() uint32 {
	if m != nil {
		return m.P2PHeadDestinationsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBwProtectedP2PS2Ls() uint32 {
	if m != nil {
		return m.BwProtectedP2PS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkProtectedP2PS2Ls() uint32 {
	if m != nil {
		return m.LinkProtectedP2PS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.UpP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProceedingP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.ProceedingP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetRecoveringP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.RecoveringP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.FrrP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.ProtectedP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.ReroutedP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.P2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.UpP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProceedingP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.ProceedingP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.FrrP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.ProtectedP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.ReroutedP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PTailS2Ls() uint32 {
	if m != nil {
		return m.P2PTailS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2PTailS2Ls() uint32 {
	if m != nil {
		return m.UpP2PTailS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PTailTunnels() uint32 {
	if m != nil {
		return m.P2PTailTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPathProtectConfiguredTunnels() uint32 {
	if m != nil {
		return m.PathProtectConfiguredTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPathProtectConfiguredTunnelsUp() uint32 {
	if m != nil {
		return m.PathProtectConfiguredTunnelsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPathProtectConfiguredTunnelsStandbyUp() uint32 {
	if m != nil {
		return m.PathProtectConfiguredTunnelsStandbyUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkDiversePaths() uint32 {
	if m != nil {
		return m.LinkDiversePaths
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNodeDiversePaths() uint32 {
	if m != nil {
		return m.NodeDiversePaths
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkAndNodeDiversePaths() uint32 {
	if m != nil {
		return m.LinkAndNodeDiversePaths
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUserDefinedPaths() uint32 {
	if m != nil {
		return m.UserDefinedPaths
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2MpHeadTunnels() uint32 {
	if m != nil {
		return m.P2MpHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpHeadTunnels() uint32 {
	if m != nil {
		return m.UpP2MpHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrConfigP2MpHeadTunnels() uint32 {
	if m != nil {
		return m.FrrConfigP2MpHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2MpHeadDestinations() uint32 {
	if m != nil {
		return m.P2MpHeadDestinations
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpHeadDestinations() uint32 {
	if m != nil {
		return m.UpP2MpHeadDestinations
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBwProtectedP2MpS2Ls() uint32 {
	if m != nil {
		return m.BwProtectedP2MpS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkProtectedP2MpS2Ls() uint32 {
	if m != nil {
		return m.LinkProtectedP2MpS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.UpP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProceedingP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.ProceedingP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.FrrP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.ProtectedP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.ReroutedP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.P2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.UpP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProceedingP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.ProceedingP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.FrrP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.ProtectedP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.ReroutedP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2MpTailS2Ls() uint32 {
	if m != nil {
		return m.P2MpTailS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpTailS2Ls() uint32 {
	if m != nil {
		return m.UpP2MpTailS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadTunnels() uint32 {
	if m != nil {
		return m.BidirHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadTunnelsUp() uint32 {
	if m != nil {
		return m.BidirHeadTunnelsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadTunnelsAssociated() uint32 {
	if m != nil {
		return m.BidirHeadTunnelsAssociated
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadTunnelsCorouted() uint32 {
	if m != nil {
		return m.BidirHeadTunnelsCorouted
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadLsPsUp() uint32 {
	if m != nil {
		return m.BidirHeadLsPsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadLsPsProceeding() uint32 {
	if m != nil {
		return m.BidirHeadLsPsProceeding
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadLsPsAssociated() uint32 {
	if m != nil {
		return m.BidirHeadLsPsAssociated
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadLsPsStandby() uint32 {
	if m != nil {
		return m.BidirHeadLsPsStandby
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidTunnels() uint32 {
	if m != nil {
		return m.BidirMidTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidTunnelsUp() uint32 {
	if m != nil {
		return m.BidirMidTunnelsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidLsPsProceeding() uint32 {
	if m != nil {
		return m.BidirMidLsPsProceeding
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidLsPsAssociated() uint32 {
	if m != nil {
		return m.BidirMidLsPsAssociated
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidLsPsStandby() uint32 {
	if m != nil {
		return m.BidirMidLsPsStandby
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPs() uint32 {
	if m != nil {
		return m.BidirTailLsPs
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsUp() uint32 {
	if m != nil {
		return m.BidirTailLsPsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsProceeding() uint32 {
	if m != nil {
		return m.BidirTailLsPsProceeding
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsAssociated() uint32 {
	if m != nil {
		return m.BidirTailLsPsAssociated
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsStandby() uint32 {
	if m != nil {
		return m.BidirTailLsPsStandby
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsCorouted() uint32 {
	if m != nil {
		return m.BidirTailLsPsCorouted
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutobackupSummary() *MplsTeAutotunBackupSummaryInfo {
	if m != nil {
		return m.AutobackupSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoMeshSummary() *MplsTeAutotunMeshSummaryInfo {
	if m != nil {
		return m.AutoMeshSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoMeshOneHopSummary() *MplsTeAutotunMeshOnehopSummaryInfo {
	if m != nil {
		return m.AutoMeshOneHopSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetGmplsUniSummary() *MplsTeGmplsUniSummaryInfo {
	if m != nil {
		return m.GmplsUniSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetGmplsNniSummary() *MplsTeGmplsNniSummaryInfo {
	if m != nil {
		return m.GmplsNniSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetCurrentTunnelConvergenceSummary() *TeConvTblSummaryBag {
	if m != nil {
		return m.CurrentTunnelConvergenceSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLastTunnelConvergenceSummary() *TeConvTblSummaryBag {
	if m != nil {
		return m.LastTunnelConvergenceSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoTunServerSummary() *MplsTeAutotunSvrSummaryInfo {
	if m != nil {
		return m.AutoTunServerSummary
	}
	return nil
}

// P2MP auto-tunnel summary per client information
type MplsTeAutotunP2MpInfo struct {
	// Total number of client P2MP auto-tunnels
	AutoP2MpTunnel uint32 `protobuf:"varint,1,opt,name=auto_p2_mp_tunnel,json=autoP2MpTunnel" json:"auto_p2_mp_tunnel,omitempty"`
	// Total number of client P2MP auto-tunnel destinations
	AutoP2MpDestinations uint32 `protobuf:"varint,2,opt,name=auto_p2_mp_destinations,json=autoP2MpDestinations" json:"auto_p2_mp_destinations,omitempty"`
	// Total number of client P2MP auto-tunnel destinations that are up
	UpAutoP2MpDestinations uint32 `protobuf:"varint,3,opt,name=up_auto_p2_mp_destinations,json=upAutoP2MpDestinations" json:"up_auto_p2_mp_destinations,omitempty"`
	// Total number of client P2MP auto-tunnel destinations that are down
	DownAutoP2MpDestinations uint32 `protobuf:"varint,4,opt,name=down_auto_p2_mp_destinations,json=downAutoP2MpDestinations" json:"down_auto_p2_mp_destinations,omitempty"`
	// Total number of client P2MP auto-tunnels that are up
	UpAutoP2MpTunnels uint32 `protobuf:"varint,5,opt,name=up_auto_p2_mp_tunnels,json=upAutoP2MpTunnels" json:"up_auto_p2_mp_tunnels,omitempty"`
	// Total number of client P2MP auto-tunnels that are down
	DownAutoP2MpTunnels uint32 `protobuf:"varint,6,opt,name=down_auto_p2_mp_tunnels,json=downAutoP2MpTunnels" json:"down_auto_p2_mp_tunnels,omitempty"`
	// Total number of client P2MP auto-tunnels that are FRR enabled
	FrrAutoP2MpTunnels   uint32   `protobuf:"varint,7,opt,name=frr_auto_p2_mp_tunnels,json=frrAutoP2MpTunnels" json:"frr_auto_p2_mp_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutotunP2MpInfo) Reset()         { *m = MplsTeAutotunP2MpInfo{} }
func (m *MplsTeAutotunP2MpInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunP2MpInfo) ProtoMessage()    {}
func (*MplsTeAutotunP2MpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{2}
}
func (m *MplsTeAutotunP2MpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunP2MpInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunP2MpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunP2MpInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAutotunP2MpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunP2MpInfo.Merge(dst, src)
}
func (m *MplsTeAutotunP2MpInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunP2MpInfo.Size(m)
}
func (m *MplsTeAutotunP2MpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunP2MpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunP2MpInfo proto.InternalMessageInfo

func (m *MplsTeAutotunP2MpInfo) GetAutoP2MpTunnel() uint32 {
	if m != nil {
		return m.AutoP2MpTunnel
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetAutoP2MpDestinations() uint32 {
	if m != nil {
		return m.AutoP2MpDestinations
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetUpAutoP2MpDestinations() uint32 {
	if m != nil {
		return m.UpAutoP2MpDestinations
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetDownAutoP2MpDestinations() uint32 {
	if m != nil {
		return m.DownAutoP2MpDestinations
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetUpAutoP2MpTunnels() uint32 {
	if m != nil {
		return m.UpAutoP2MpTunnels
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetDownAutoP2MpTunnels() uint32 {
	if m != nil {
		return m.DownAutoP2MpTunnels
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetFrrAutoP2MpTunnels() uint32 {
	if m != nil {
		return m.FrrAutoP2MpTunnels
	}
	return 0
}

// P2P auto-tunnel summary per client information
type MplsTeAutotunP2PInfo struct {
	// Total number of client P2P auto-tunnels
	AutoP2PTunnel uint32 `protobuf:"varint,1,opt,name=auto_p2_p_tunnel,json=autoP2PTunnel" json:"auto_p2_p_tunnel,omitempty"`
	// Total number of client P2P auto-tunnels that are up
	UpAutoP2PTunnels uint32 `protobuf:"varint,2,opt,name=up_auto_p2_p_tunnels,json=upAutoP2PTunnels" json:"up_auto_p2_p_tunnels,omitempty"`
	// Total number of client P2P auto-tunnels that are down
	DownAutoP2PTunnels   uint32   `protobuf:"varint,3,opt,name=down_auto_p2_p_tunnels,json=downAutoP2PTunnels" json:"down_auto_p2_p_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutotunP2PInfo) Reset()         { *m = MplsTeAutotunP2PInfo{} }
func (m *MplsTeAutotunP2PInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunP2PInfo) ProtoMessage()    {}
func (*MplsTeAutotunP2PInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{3}
}
func (m *MplsTeAutotunP2PInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunP2PInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunP2PInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunP2PInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAutotunP2PInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunP2PInfo.Merge(dst, src)
}
func (m *MplsTeAutotunP2PInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunP2PInfo.Size(m)
}
func (m *MplsTeAutotunP2PInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunP2PInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunP2PInfo proto.InternalMessageInfo

func (m *MplsTeAutotunP2PInfo) GetAutoP2PTunnel() uint32 {
	if m != nil {
		return m.AutoP2PTunnel
	}
	return 0
}

func (m *MplsTeAutotunP2PInfo) GetUpAutoP2PTunnels() uint32 {
	if m != nil {
		return m.UpAutoP2PTunnels
	}
	return 0
}

func (m *MplsTeAutotunP2PInfo) GetDownAutoP2PTunnels() uint32 {
	if m != nil {
		return m.DownAutoP2PTunnels
	}
	return 0
}

// Auto-tunnel server client summary
type MplsTeAutotunSvrInfo struct {
	// P2MP info for a client
	P2MpInfo *MplsTeAutotunP2MpInfo `protobuf:"bytes,1,opt,name=p2_mp_info,json=p2MpInfo" json:"p2_mp_info,omitempty"`
	// P2P info for a client
	P2PInfo *MplsTeAutotunP2PInfo `protobuf:"bytes,2,opt,name=p2_p_info,json=p2PInfo" json:"p2_p_info,omitempty"`
	// Client's protocol type
	ProtocolType string `protobuf:"bytes,3,opt,name=protocol_type,json=protocolType" json:"protocol_type,omitempty"`
	// Client Instance name
	ClientInstanceName string `protobuf:"bytes,4,opt,name=client_instance_name,json=clientInstanceName" json:"client_instance_name,omitempty"`
	// Client ID
	ClientId             uint32   `protobuf:"varint,5,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutotunSvrInfo) Reset()         { *m = MplsTeAutotunSvrInfo{} }
func (m *MplsTeAutotunSvrInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunSvrInfo) ProtoMessage()    {}
func (*MplsTeAutotunSvrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{4}
}
func (m *MplsTeAutotunSvrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunSvrInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunSvrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunSvrInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAutotunSvrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunSvrInfo.Merge(dst, src)
}
func (m *MplsTeAutotunSvrInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunSvrInfo.Size(m)
}
func (m *MplsTeAutotunSvrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunSvrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunSvrInfo proto.InternalMessageInfo

func (m *MplsTeAutotunSvrInfo) GetP2MpInfo() *MplsTeAutotunP2MpInfo {
	if m != nil {
		return m.P2MpInfo
	}
	return nil
}

func (m *MplsTeAutotunSvrInfo) GetP2PInfo() *MplsTeAutotunP2PInfo {
	if m != nil {
		return m.P2PInfo
	}
	return nil
}

func (m *MplsTeAutotunSvrInfo) GetProtocolType() string {
	if m != nil {
		return m.ProtocolType
	}
	return ""
}

func (m *MplsTeAutotunSvrInfo) GetClientInstanceName() string {
	if m != nil {
		return m.ClientInstanceName
	}
	return ""
}

func (m *MplsTeAutotunSvrInfo) GetClientId() uint32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

// Auto-tunnel server summary information
type MplsTeAutotunSvrSummaryInfo struct {
	// List of auto-tunnel server clients
	ClientsSummary []*MplsTeAutotunSvrInfo `protobuf:"bytes,1,rep,name=clients_summary,json=clientsSummary" json:"clients_summary,omitempty"`
	// Total number of P2MP auto-tunnels
	TotalAutoP2MpTunnels *MplsTeAutotunP2MpInfo `protobuf:"bytes,2,opt,name=total_auto_p2_mp_tunnels,json=totalAutoP2MpTunnels" json:"total_auto_p2_mp_tunnels,omitempty"`
	// Total number of P2P auto-tunnels
	TotalAutoP2PTunnels  *MplsTeAutotunP2PInfo `protobuf:"bytes,3,opt,name=total_auto_p2_p_tunnels,json=totalAutoP2PTunnels" json:"total_auto_p2_p_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MplsTeAutotunSvrSummaryInfo) Reset()         { *m = MplsTeAutotunSvrSummaryInfo{} }
func (m *MplsTeAutotunSvrSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunSvrSummaryInfo) ProtoMessage()    {}
func (*MplsTeAutotunSvrSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{5}
}
func (m *MplsTeAutotunSvrSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunSvrSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAutotunSvrSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.Merge(dst, src)
}
func (m *MplsTeAutotunSvrSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.Size(m)
}
func (m *MplsTeAutotunSvrSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunSvrSummaryInfo proto.InternalMessageInfo

func (m *MplsTeAutotunSvrSummaryInfo) GetClientsSummary() []*MplsTeAutotunSvrInfo {
	if m != nil {
		return m.ClientsSummary
	}
	return nil
}

func (m *MplsTeAutotunSvrSummaryInfo) GetTotalAutoP2MpTunnels() *MplsTeAutotunP2MpInfo {
	if m != nil {
		return m.TotalAutoP2MpTunnels
	}
	return nil
}

func (m *MplsTeAutotunSvrSummaryInfo) GetTotalAutoP2PTunnels() *MplsTeAutotunP2PInfo {
	if m != nil {
		return m.TotalAutoP2PTunnels
	}
	return nil
}

// Autotunnel backup summary information
type MplsTeAutotunBackupSummaryInfo struct {
	// Total number of autobackup tunnels
	Autobackups uint32 `protobuf:"varint,1,opt,name=autobackups" json:"autobackups,omitempty"`
	// Total number of autobackup tunnels that are up
	UpAutobackups uint32 `protobuf:"varint,2,opt,name=up_autobackups,json=upAutobackups" json:"up_autobackups,omitempty"`
	// Total number of autobackup tunnels that are down
	DownAutobackups uint32 `protobuf:"varint,3,opt,name=down_autobackups,json=downAutobackups" json:"down_autobackups,omitempty"`
	// Total number of autobackup tunnels that are unused
	UnusedAutobackups uint32 `protobuf:"varint,4,opt,name=unused_autobackups,json=unusedAutobackups" json:"unused_autobackups,omitempty"`
	// Total number of autobackup tunnels that are NHOP
	NextHopAutobackups uint32 `protobuf:"varint,5,opt,name=next_hop_autobackups,json=nextHopAutobackups" json:"next_hop_autobackups,omitempty"`
	// Total number of autobackup tunnels that are NNHOP
	NextNextHopAutobackups uint32 `protobuf:"varint,6,opt,name=next_next_hop_autobackups,json=nextNextHopAutobackups" json:"next_next_hop_autobackups,omitempty"`
	// Total number of autobackup tunnels that are using SRLG strict
	SrlgStrictAutobackups uint32 `protobuf:"varint,7,opt,name=srlg_strict_autobackups,json=srlgStrictAutobackups" json:"srlg_strict_autobackups,omitempty"`
	// Total number of autobackup tunnels that are using SRLG preferred
	SrlgPreferredAutobackups uint32 `protobuf:"varint,8,opt,name=srlg_preferred_autobackups,json=srlgPreferredAutobackups" json:"srlg_preferred_autobackups,omitempty"`
	// Total number of autobackup tunnels that are using weighted SRLG
	SrlgWeightedAutobackups uint32 `protobuf:"varint,9,opt,name=srlg_weighted_autobackups,json=srlgWeightedAutobackups" json:"srlg_weighted_autobackups,omitempty"`
	// Total number of autobackup protected LSPs with NHOP and no SRLG
	NextHopAutobackupProtectedLsPs uint32 `protobuf:"varint,10,opt,name=next_hop_autobackup_protected_ls_ps,json=nextHopAutobackupProtectedLsPs" json:"next_hop_autobackup_protected_ls_ps,omitempty"`
	// Total number of autobackup protected LSPs with NNHOP and no SRLG
	NextNextHopAutobackupProtectedLsPs uint32 `protobuf:"varint,11,opt,name=next_next_hop_autobackup_protected_ls_ps,json=nextNextHopAutobackupProtectedLsPs" json:"next_next_hop_autobackup_protected_ls_ps,omitempty"`
	// Total number of autobackup protected LSPs with NHOP and SRLG
	NextHopSrlgAutobackupProtectedLsPs uint32 `protobuf:"varint,12,opt,name=next_hop_srlg_autobackup_protected_ls_ps,json=nextHopSrlgAutobackupProtectedLsPs" json:"next_hop_srlg_autobackup_protected_ls_ps,omitempty"`
	// Total number of autobackup protected LSPs with NNHOP and SRLG
	NextNextHopSrlgAutobackupProtectedLsPs uint32 `protobuf:"varint,13,opt,name=next_next_hop_srlg_autobackup_protected_ls_ps,json=nextNextHopSrlgAutobackupProtectedLsPs" json:"next_next_hop_srlg_autobackup_protected_ls_ps,omitempty"`
	// Total number of autobackup protected S2L Families with NHOP and no SRLG
	NextHopAutobackupProtectedS2LFamilies uint32 `protobuf:"varint,14,opt,name=next_hop_autobackup_protected_s2_l_families,json=nextHopAutobackupProtectedS2LFamilies" json:"next_hop_autobackup_protected_s2_l_families,omitempty"`
	// Total number of autobackup protected S2L Families with NNHOP and no SRLG
	NextNextHopAutobackupProtectedS2LFamilies uint32 `protobuf:"varint,15,opt,name=next_next_hop_autobackup_protected_s2_l_families,json=nextNextHopAutobackupProtectedS2LFamilies" json:"next_next_hop_autobackup_protected_s2_l_families,omitempty"`
	// Total number of autobackup protected S2L Families with NHOP and SRLG
	NextHopSrlgAutobackupProtectedS2LFamilies uint32 `protobuf:"varint,16,opt,name=next_hop_srlg_autobackup_protected_s2_l_families,json=nextHopSrlgAutobackupProtectedS2LFamilies" json:"next_hop_srlg_autobackup_protected_s2_l_families,omitempty"`
	// Total number of autobackup protected S2L Families with NNHOP and SRLG
	NextNextHopSrlgAutobackupProtectedS2LFamilies uint32 `protobuf:"varint,17,opt,name=next_next_hop_srlg_autobackup_protected_s2_l_families,json=nextNextHopSrlgAutobackupProtectedS2LFamilies" json:"next_next_hop_srlg_autobackup_protected_s2_l_families,omitempty"`
	// Total number of autobackup protected S2Ls with NHOP and no SRLG
	NextHopAutobackupProtectedS2Ls uint32 `protobuf:"varint,18,opt,name=next_hop_autobackup_protected_s2_ls,json=nextHopAutobackupProtectedS2Ls" json:"next_hop_autobackup_protected_s2_ls,omitempty"`
	// Total number of autobackup protected S2Ls with NNHOP and no SRLG
	NextNextHopAutobackupProtectedS2Ls uint32 `protobuf:"varint,19,opt,name=next_next_hop_autobackup_protected_s2_ls,json=nextNextHopAutobackupProtectedS2Ls" json:"next_next_hop_autobackup_protected_s2_ls,omitempty"`
	// Total number of autobackup protected S2Ls with NHOP and SRLG
	NextHopSrlgAutobackupProtectedS2Ls uint32 `protobuf:"varint,20,opt,name=next_hop_srlg_autobackup_protected_s2_ls,json=nextHopSrlgAutobackupProtectedS2Ls" json:"next_hop_srlg_autobackup_protected_s2_ls,omitempty"`
	// Total number of autobackup protected S2Ls with NNHOP and SRLG
	NextNextHopSrlgAutobackupProtectedS2Ls uint32   `protobuf:"varint,21,opt,name=next_next_hop_srlg_autobackup_protected_s2_ls,json=nextNextHopSrlgAutobackupProtectedS2Ls" json:"next_next_hop_srlg_autobackup_protected_s2_ls,omitempty"`
	XXX_NoUnkeyedLiteral                   struct{} `json:"-"`
	XXX_unrecognized                       []byte   `json:"-"`
	XXX_sizecache                          int32    `json:"-"`
}

func (m *MplsTeAutotunBackupSummaryInfo) Reset()         { *m = MplsTeAutotunBackupSummaryInfo{} }
func (m *MplsTeAutotunBackupSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunBackupSummaryInfo) ProtoMessage()    {}
func (*MplsTeAutotunBackupSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{6}
}
func (m *MplsTeAutotunBackupSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunBackupSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAutotunBackupSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.Merge(dst, src)
}
func (m *MplsTeAutotunBackupSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.Size(m)
}
func (m *MplsTeAutotunBackupSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunBackupSummaryInfo proto.InternalMessageInfo

func (m *MplsTeAutotunBackupSummaryInfo) GetAutobackups() uint32 {
	if m != nil {
		return m.Autobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetUpAutobackups() uint32 {
	if m != nil {
		return m.UpAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetDownAutobackups() uint32 {
	if m != nil {
		return m.DownAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetUnusedAutobackups() uint32 {
	if m != nil {
		return m.UnusedAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopAutobackups() uint32 {
	if m != nil {
		return m.NextHopAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopAutobackups() uint32 {
	if m != nil {
		return m.NextNextHopAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetSrlgStrictAutobackups() uint32 {
	if m != nil {
		return m.SrlgStrictAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetSrlgPreferredAutobackups() uint32 {
	if m != nil {
		return m.SrlgPreferredAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetSrlgWeightedAutobackups() uint32 {
	if m != nil {
		return m.SrlgWeightedAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopAutobackupProtectedLsPs() uint32 {
	if m != nil {
		return m.NextHopAutobackupProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopAutobackupProtectedLsPs() uint32 {
	if m != nil {
		return m.NextNextHopAutobackupProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopSrlgAutobackupProtectedLsPs() uint32 {
	if m != nil {
		return m.NextHopSrlgAutobackupProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopSrlgAutobackupProtectedLsPs() uint32 {
	if m != nil {
		return m.NextNextHopSrlgAutobackupProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopAutobackupProtectedS2LFamilies() uint32 {
	if m != nil {
		return m.NextHopAutobackupProtectedS2LFamilies
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopAutobackupProtectedS2LFamilies() uint32 {
	if m != nil {
		return m.NextNextHopAutobackupProtectedS2LFamilies
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopSrlgAutobackupProtectedS2LFamilies() uint32 {
	if m != nil {
		return m.NextHopSrlgAutobackupProtectedS2LFamilies
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopSrlgAutobackupProtectedS2LFamilies() uint32 {
	if m != nil {
		return m.NextNextHopSrlgAutobackupProtectedS2LFamilies
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopAutobackupProtectedS2Ls() uint32 {
	if m != nil {
		return m.NextHopAutobackupProtectedS2Ls
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopAutobackupProtectedS2Ls() uint32 {
	if m != nil {
		return m.NextNextHopAutobackupProtectedS2Ls
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopSrlgAutobackupProtectedS2Ls() uint32 {
	if m != nil {
		return m.NextHopSrlgAutobackupProtectedS2Ls
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopSrlgAutobackupProtectedS2Ls() uint32 {
	if m != nil {
		return m.NextNextHopSrlgAutobackupProtectedS2Ls
	}
	return 0
}

// Autotunnel mesh summary information
type MplsTeAutotunMeshSummaryInfo struct {
	// Total number of automesh tunnels
	AutoMeshTunnels uint32 `protobuf:"varint,1,opt,name=auto_mesh_tunnels,json=autoMeshTunnels" json:"auto_mesh_tunnels,omitempty"`
	// Total number of automesh tunnels that are up
	UpAutoMeshTunnels uint32 `protobuf:"varint,2,opt,name=up_auto_mesh_tunnels,json=upAutoMeshTunnels" json:"up_auto_mesh_tunnels,omitempty"`
	// Total number of automesh tunnels that are down
	DownAutoMeshTunnels uint32 `protobuf:"varint,3,opt,name=down_auto_mesh_tunnels,json=downAutoMeshTunnels" json:"down_auto_mesh_tunnels,omitempty"`
	// Total number of automesh tunnels that are FRR enabled
	FrrAutoMeshTunnels uint32 `protobuf:"varint,4,opt,name=frr_auto_mesh_tunnels,json=frrAutoMeshTunnels" json:"frr_auto_mesh_tunnels,omitempty"`
	// Total number of automesh mesh-groups
	AutoMeshGroups uint32 `protobuf:"varint,5,opt,name=auto_mesh_groups,json=autoMeshGroups" json:"auto_mesh_groups,omitempty"`
	// Total number of automesh destinations
	AutoMeshDestinations uint32   `protobuf:"varint,6,opt,name=auto_mesh_destinations,json=autoMeshDestinations" json:"auto_mesh_destinations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutotunMeshSummaryInfo) Reset()         { *m = MplsTeAutotunMeshSummaryInfo{} }
func (m *MplsTeAutotunMeshSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunMeshSummaryInfo) ProtoMessage()    {}
func (*MplsTeAutotunMeshSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{7}
}
func (m *MplsTeAutotunMeshSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunMeshSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAutotunMeshSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.Merge(dst, src)
}
func (m *MplsTeAutotunMeshSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.Size(m)
}
func (m *MplsTeAutotunMeshSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunMeshSummaryInfo proto.InternalMessageInfo

func (m *MplsTeAutotunMeshSummaryInfo) GetAutoMeshTunnels() uint32 {
	if m != nil {
		return m.AutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetUpAutoMeshTunnels() uint32 {
	if m != nil {
		return m.UpAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetDownAutoMeshTunnels() uint32 {
	if m != nil {
		return m.DownAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetFrrAutoMeshTunnels() uint32 {
	if m != nil {
		return m.FrrAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetAutoMeshGroups() uint32 {
	if m != nil {
		return m.AutoMeshGroups
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetAutoMeshDestinations() uint32 {
	if m != nil {
		return m.AutoMeshDestinations
	}
	return 0
}

// Autotunnel mesh onehop summary information
type MplsTeAutotunMeshOnehopSummaryInfo struct {
	// Total number of automesh onehop tunnels
	AutoMeshOneHopTunnels uint32 `protobuf:"varint,1,opt,name=auto_mesh_one_hop_tunnels,json=autoMeshOneHopTunnels" json:"auto_mesh_one_hop_tunnels,omitempty"`
	// Total number of automesh onehop tunnels that are up
	UpAutoMeshOneHopTunnels uint32 `protobuf:"varint,2,opt,name=up_auto_mesh_one_hop_tunnels,json=upAutoMeshOneHopTunnels" json:"up_auto_mesh_one_hop_tunnels,omitempty"`
	// Total number of automesh onehop tunnels that are down
	DownAutoMeshOneHopTunnels uint32 `protobuf:"varint,3,opt,name=down_auto_mesh_one_hop_tunnels,json=downAutoMeshOneHopTunnels" json:"down_auto_mesh_one_hop_tunnels,omitempty"`
	// Total number of automesh onehop tunnels that are FRR enabled
	FrrAutoMeshTunnels uint32 `protobuf:"varint,4,opt,name=frr_auto_mesh_tunnels,json=frrAutoMeshTunnels" json:"frr_auto_mesh_tunnels,omitempty"`
	// Total number of automesh onehop mesh-groups
	AutoMeshOneHopGroups uint32 `protobuf:"varint,5,opt,name=auto_mesh_one_hop_groups,json=autoMeshOneHopGroups" json:"auto_mesh_one_hop_groups,omitempty"`
	// Total number of automesh onehop destinations
	AutoMeshOneHopDestinations uint32   `protobuf:"varint,6,opt,name=auto_mesh_one_hop_destinations,json=autoMeshOneHopDestinations" json:"auto_mesh_one_hop_destinations,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) Reset()         { *m = MplsTeAutotunMeshOnehopSummaryInfo{} }
func (m *MplsTeAutotunMeshOnehopSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunMeshOnehopSummaryInfo) ProtoMessage()    {}
func (*MplsTeAutotunMeshOnehopSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{8}
}
func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAutotunMeshOnehopSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.Merge(dst, src)
}
func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.Size(m)
}
func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo proto.InternalMessageInfo

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetAutoMeshOneHopTunnels() uint32 {
	if m != nil {
		return m.AutoMeshOneHopTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetUpAutoMeshOneHopTunnels() uint32 {
	if m != nil {
		return m.UpAutoMeshOneHopTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetDownAutoMeshOneHopTunnels() uint32 {
	if m != nil {
		return m.DownAutoMeshOneHopTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetFrrAutoMeshTunnels() uint32 {
	if m != nil {
		return m.FrrAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetAutoMeshOneHopGroups() uint32 {
	if m != nil {
		return m.AutoMeshOneHopGroups
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetAutoMeshOneHopDestinations() uint32 {
	if m != nil {
		return m.AutoMeshOneHopDestinations
	}
	return 0
}

// TE LSP datapoint information
type TeLspDatapointInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeLspDatapointInfo) Reset()         { *m = TeLspDatapointInfo{} }
func (m *TeLspDatapointInfo) String() string { return proto.CompactTextString(m) }
func (*TeLspDatapointInfo) ProtoMessage()    {}
func (*TeLspDatapointInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{9}
}
func (m *TeLspDatapointInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspDatapointInfo.Unmarshal(m, b)
}
func (m *TeLspDatapointInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspDatapointInfo.Marshal(b, m, deterministic)
}
func (dst *TeLspDatapointInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspDatapointInfo.Merge(dst, src)
}
func (m *TeLspDatapointInfo) XXX_Size() int {
	return xxx_messageInfo_TeLspDatapointInfo.Size(m)
}
func (m *TeLspDatapointInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspDatapointInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspDatapointInfo proto.InternalMessageInfo

// Convergence table bag entry
type TeTableDatapointInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeTableDatapointInfo) Reset()         { *m = TeTableDatapointInfo{} }
func (m *TeTableDatapointInfo) String() string { return proto.CompactTextString(m) }
func (*TeTableDatapointInfo) ProtoMessage()    {}
func (*TeTableDatapointInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{10}
}
func (m *TeTableDatapointInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeTableDatapointInfo.Unmarshal(m, b)
}
func (m *TeTableDatapointInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeTableDatapointInfo.Marshal(b, m, deterministic)
}
func (dst *TeTableDatapointInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeTableDatapointInfo.Merge(dst, src)
}
func (m *TeTableDatapointInfo) XXX_Size() int {
	return xxx_messageInfo_TeTableDatapointInfo.Size(m)
}
func (m *TeTableDatapointInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeTableDatapointInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeTableDatapointInfo proto.InternalMessageInfo

// TE tunnels convergence summary information bag
type TeConvTblSummaryBag struct {
	// FRR active Tunnel count
	TunnelFrrActiveCount uint32 `protobuf:"varint,1,opt,name=tunnel_frr_active_count,json=tunnelFrrActiveCount" json:"tunnel_frr_active_count,omitempty"`
	// FRR triggered Tunnel count
	TunnelFrrTotalCount uint32 `protobuf:"varint,2,opt,name=tunnel_frr_total_count,json=tunnelFrrTotalCount" json:"tunnel_frr_total_count,omitempty"`
	// Tunnel converged count
	TunnelConvergedCount uint32 `protobuf:"varint,3,opt,name=tunnel_converged_count,json=tunnelConvergedCount" json:"tunnel_converged_count,omitempty"`
	// Tunnel convergence complete timestamp (clocktime in nsecs)
	TunnelTotalConvergenceCompleteTime uint64 `protobuf:"varint,4,opt,name=tunnel_total_convergence_complete_time,json=tunnelTotalConvergenceCompleteTime" json:"tunnel_total_convergence_complete_time,omitempty"`
	// Table path-out entry
	TablePathOut *TeTableDatapointInfo `protobuf:"bytes,5,opt,name=table_path_out,json=tablePathOut" json:"table_path_out,omitempty"`
	// Table resv-in entry
	TableResvIn *TeTableDatapointInfo `protobuf:"bytes,6,opt,name=table_resv_in,json=tableResvIn" json:"table_resv_in,omitempty"`
	// Table label rewrite entry
	TableLabelRewrite *TeTableDatapointInfo `protobuf:"bytes,7,opt,name=table_label_rewrite,json=tableLabelRewrite" json:"table_label_rewrite,omitempty"`
	// Table PCALC entry
	TablePcalc *TeTableDatapointInfo `protobuf:"bytes,8,opt,name=table_pcalc,json=tablePcalc" json:"table_pcalc,omitempty"`
	// Table Tunnel rewrite entry
	TableTunnelRewrite *TeTableDatapointInfo `protobuf:"bytes,9,opt,name=table_tunnel_rewrite,json=tableTunnelRewrite" json:"table_tunnel_rewrite,omitempty"`
	// Table FRR trigger entry
	TableFrrTrigger      *TeTableDatapointInfo `protobuf:"bytes,10,opt,name=table_frr_trigger,json=tableFrrTrigger" json:"table_frr_trigger,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TeConvTblSummaryBag) Reset()         { *m = TeConvTblSummaryBag{} }
func (m *TeConvTblSummaryBag) String() string { return proto.CompactTextString(m) }
func (*TeConvTblSummaryBag) ProtoMessage()    {}
func (*TeConvTblSummaryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{11}
}
func (m *TeConvTblSummaryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeConvTblSummaryBag.Unmarshal(m, b)
}
func (m *TeConvTblSummaryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeConvTblSummaryBag.Marshal(b, m, deterministic)
}
func (dst *TeConvTblSummaryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeConvTblSummaryBag.Merge(dst, src)
}
func (m *TeConvTblSummaryBag) XXX_Size() int {
	return xxx_messageInfo_TeConvTblSummaryBag.Size(m)
}
func (m *TeConvTblSummaryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TeConvTblSummaryBag.DiscardUnknown(m)
}

var xxx_messageInfo_TeConvTblSummaryBag proto.InternalMessageInfo

func (m *TeConvTblSummaryBag) GetTunnelFrrActiveCount() uint32 {
	if m != nil {
		return m.TunnelFrrActiveCount
	}
	return 0
}

func (m *TeConvTblSummaryBag) GetTunnelFrrTotalCount() uint32 {
	if m != nil {
		return m.TunnelFrrTotalCount
	}
	return 0
}

func (m *TeConvTblSummaryBag) GetTunnelConvergedCount() uint32 {
	if m != nil {
		return m.TunnelConvergedCount
	}
	return 0
}

func (m *TeConvTblSummaryBag) GetTunnelTotalConvergenceCompleteTime() uint64 {
	if m != nil {
		return m.TunnelTotalConvergenceCompleteTime
	}
	return 0
}

func (m *TeConvTblSummaryBag) GetTablePathOut() *TeTableDatapointInfo {
	if m != nil {
		return m.TablePathOut
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTableResvIn() *TeTableDatapointInfo {
	if m != nil {
		return m.TableResvIn
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTableLabelRewrite() *TeTableDatapointInfo {
	if m != nil {
		return m.TableLabelRewrite
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTablePcalc() *TeTableDatapointInfo {
	if m != nil {
		return m.TablePcalc
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTableTunnelRewrite() *TeTableDatapointInfo {
	if m != nil {
		return m.TableTunnelRewrite
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTableFrrTrigger() *TeTableDatapointInfo {
	if m != nil {
		return m.TableFrrTrigger
	}
	return nil
}

// GMPLS-UNI summary information
type MplsTeGmplsUniSummaryInfo struct {
	// Tunnel heads in up state
	HeadsUp uint32 `protobuf:"varint,1,opt,name=heads_up,json=headsUp" json:"heads_up,omitempty"`
	// Tunnel heads in down state
	HeadsDown uint32 `protobuf:"varint,2,opt,name=heads_down,json=headsDown" json:"heads_down,omitempty"`
	// Tunnel tails in up state
	TailsUp uint32 `protobuf:"varint,3,opt,name=tails_up,json=tailsUp" json:"tails_up,omitempty"`
	// Tunnel tails in down state
	TailsDown            uint32   `protobuf:"varint,4,opt,name=tails_down,json=tailsDown" json:"tails_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeGmplsUniSummaryInfo) Reset()         { *m = MplsTeGmplsUniSummaryInfo{} }
func (m *MplsTeGmplsUniSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeGmplsUniSummaryInfo) ProtoMessage()    {}
func (*MplsTeGmplsUniSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{12}
}
func (m *MplsTeGmplsUniSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeGmplsUniSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeGmplsUniSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeGmplsUniSummaryInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeGmplsUniSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeGmplsUniSummaryInfo.Merge(dst, src)
}
func (m *MplsTeGmplsUniSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeGmplsUniSummaryInfo.Size(m)
}
func (m *MplsTeGmplsUniSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeGmplsUniSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeGmplsUniSummaryInfo proto.InternalMessageInfo

func (m *MplsTeGmplsUniSummaryInfo) GetHeadsUp() uint32 {
	if m != nil {
		return m.HeadsUp
	}
	return 0
}

func (m *MplsTeGmplsUniSummaryInfo) GetHeadsDown() uint32 {
	if m != nil {
		return m.HeadsDown
	}
	return 0
}

func (m *MplsTeGmplsUniSummaryInfo) GetTailsUp() uint32 {
	if m != nil {
		return m.TailsUp
	}
	return 0
}

func (m *MplsTeGmplsUniSummaryInfo) GetTailsDown() uint32 {
	if m != nil {
		return m.TailsDown
	}
	return 0
}

// GMPLS-NNI summary information
type MplsTeGmplsNniSummaryInfo struct {
	// Tunnel heads in up state
	HeadsUp uint32 `protobuf:"varint,1,opt,name=heads_up,json=headsUp" json:"heads_up,omitempty"`
	// Tunnel heads in down state
	HeadsDown uint32 `protobuf:"varint,2,opt,name=heads_down,json=headsDown" json:"heads_down,omitempty"`
	// Tunnel mids in up state
	MidsUp uint32 `protobuf:"varint,3,opt,name=mids_up,json=midsUp" json:"mids_up,omitempty"`
	// Tunnel mids in down state
	MidsDown uint32 `protobuf:"varint,4,opt,name=mids_down,json=midsDown" json:"mids_down,omitempty"`
	// Tunnel tails in up state
	TailsUp uint32 `protobuf:"varint,5,opt,name=tails_up,json=tailsUp" json:"tails_up,omitempty"`
	// Tunnel tails in down state
	TailsDown            uint32   `protobuf:"varint,6,opt,name=tails_down,json=tailsDown" json:"tails_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeGmplsNniSummaryInfo) Reset()         { *m = MplsTeGmplsNniSummaryInfo{} }
func (m *MplsTeGmplsNniSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeGmplsNniSummaryInfo) ProtoMessage()    {}
func (*MplsTeGmplsNniSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e, []int{13}
}
func (m *MplsTeGmplsNniSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeGmplsNniSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeGmplsNniSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeGmplsNniSummaryInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeGmplsNniSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeGmplsNniSummaryInfo.Merge(dst, src)
}
func (m *MplsTeGmplsNniSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeGmplsNniSummaryInfo.Size(m)
}
func (m *MplsTeGmplsNniSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeGmplsNniSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeGmplsNniSummaryInfo proto.InternalMessageInfo

func (m *MplsTeGmplsNniSummaryInfo) GetHeadsUp() uint32 {
	if m != nil {
		return m.HeadsUp
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetHeadsDown() uint32 {
	if m != nil {
		return m.HeadsDown
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetMidsUp() uint32 {
	if m != nil {
		return m.MidsUp
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetMidsDown() uint32 {
	if m != nil {
		return m.MidsDown
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetTailsUp() uint32 {
	if m != nil {
		return m.TailsUp
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetTailsDown() uint32 {
	if m != nil {
		return m.TailsDown
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsTeTunnelsSummaryInfoBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_tunnels_summary_info_bag_KEYS")
	proto.RegisterType((*MplsTeTunnelsSummaryInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_tunnels_summary_info_bag")
	proto.RegisterType((*MplsTeAutotunP2MpInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_p2mp_info")
	proto.RegisterType((*MplsTeAutotunP2PInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_p2p_info")
	proto.RegisterType((*MplsTeAutotunSvrInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_svr_info")
	proto.RegisterType((*MplsTeAutotunSvrSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_svr_summary_info")
	proto.RegisterType((*MplsTeAutotunBackupSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_backup_summary_info")
	proto.RegisterType((*MplsTeAutotunMeshSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_mesh_summary_info")
	proto.RegisterType((*MplsTeAutotunMeshOnehopSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_mesh_onehop_summary_info")
	proto.RegisterType((*TeLspDatapointInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.te_lsp_datapoint_info")
	proto.RegisterType((*TeTableDatapointInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.te_table_datapoint_info")
	proto.RegisterType((*TeConvTblSummaryBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.te_conv_tbl_summary_bag")
	proto.RegisterType((*MplsTeGmplsUniSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_gmpls_uni_summary_info")
	proto.RegisterType((*MplsTeGmplsNniSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_gmpls_nni_summary_info")
}

func init() {
	proto.RegisterFile("mpls_te_tunnels_summary_info_bag.proto", fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e)
}

var fileDescriptor_mpls_te_tunnels_summary_info_bag_6176438ad1480a4e = []byte{
	// 3390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x9a, 0x79, 0x7b, 0x1c, 0xc5,
	0xd1, 0xc0, 0x9f, 0xb5, 0x8d, 0x6d, 0x95, 0x6d, 0x1d, 0xa3, 0x63, 0x47, 0xf2, 0xa5, 0x57, 0xbc,
	0xb6, 0x65, 0x1b, 0x0b, 0xb3, 0xb6, 0xf0, 0x81, 0x6d, 0x90, 0x65, 0x1b, 0x1b, 0x5f, 0xcb, 0x4a,
	0x82, 0x17, 0x78, 0xc9, 0x64, 0x76, 0xa6, 0x77, 0x35, 0x78, 0x76, 0x66, 0x98, 0x99, 0x5d, 0x61,
	0x42, 0x48, 0x48, 0x08, 0x39, 0xc8, 0x49, 0x80, 0x90, 0xfb, 0x20, 0x09, 0x79, 0x9e, 0x7c, 0x85,
	0x7c, 0x80, 0x3c, 0xf9, 0x2b, 0xdf, 0x21, 0x5f, 0x24, 0x4f, 0x77, 0x75, 0xcf, 0x74, 0xf7, 0x8c,
	0x0e, 0xc8, 0xe6, 0x4f, 0x75, 0xd5, 0xaf, 0xaa, 0xba, 0xba, 0xba, 0xba, 0x7b, 0x56, 0x70, 0xb4,
	0x13, 0xf9, 0x89, 0x95, 0x12, 0x2b, 0xed, 0x06, 0x01, 0xf1, 0x13, 0x2b, 0xe9, 0x76, 0x3a, 0x76,
	0xfc, 0xd0, 0xf2, 0x82, 0x56, 0x68, 0x35, 0xed, 0xf6, 0x5c, 0x14, 0x87, 0x69, 0x68, 0x3c, 0xe1,
	0x78, 0x89, 0x13, 0x5a, 0x5e, 0x98, 0x58, 0x6f, 0xc4, 0x96, 0x80, 0xc2, 0x88, 0xc4, 0x73, 0xfc,
	0x8f, 0x39, 0x6e, 0x61, 0x8e, 0x5b, 0x98, 0x39, 0x06, 0x47, 0x36, 0x33, 0x6e, 0xdd, 0xbe, 0xfe,
	0xd2, 0xd2, 0xcc, 0xdf, 0xce, 0xc3, 0xf4, 0x66, 0x9a, 0xc6, 0x71, 0x18, 0x8e, 0x1c, 0xdb, 0x77,
	0xac, 0xd4, 0x23, 0xcd, 0x98, 0xd8, 0x0f, 0x48, 0x6c, 0xd6, 0xa6, 0x2b, 0xb3, 0xfb, 0x1a, 0x43,
	0x6c, 0x7c, 0x39, 0x1b, 0x36, 0x9e, 0x80, 0xb1, 0x5c, 0xc9, 0x7a, 0xbd, 0x6b, 0xfb, 0x5e, 0xcb,
	0x23, 0xb1, 0x79, 0x66, 0xba, 0x32, 0x3b, 0xd0, 0x18, 0xcd, 0x65, 0xcf, 0x0b, 0x91, 0x71, 0x02,
	0x46, 0x52, 0x62, 0x45, 0x71, 0xe8, 0x90, 0x24, 0xb1, 0x92, 0xd4, 0x4e, 0xbb, 0x89, 0x79, 0x96,
	0xe9, 0x0f, 0xa5, 0xa4, 0x8e, 0xe3, 0x4b, 0x6c, 0xd8, 0x98, 0x87, 0xaa, 0x97, 0x58, 0x71, 0xd2,
	0x8b, 0x32, 0x80, 0x04, 0x76, 0xd3, 0x27, 0xae, 0x39, 0x3f, 0x5d, 0x99, 0xdd, 0xdd, 0x18, 0xf3,
	0x92, 0x46, 0xd2, 0x8b, 0x38, 0x75, 0x1d, 0x65, 0x46, 0x0d, 0xc6, 0xbd, 0xc4, 0x6a, 0x85, 0xf1,
	0x9a, 0x1d, 0xbb, 0x5e, 0xd0, 0xce, 0xa0, 0x27, 0x19, 0x34, 0xea, 0x25, 0x37, 0x32, 0x99, 0x60,
	0x8e, 0xc1, 0x90, 0xed, 0xa4, 0x5e, 0xcf, 0x4e, 0x89, 0x6b, 0xad, 0x12, 0xdb, 0x4d, 0xcc, 0x73,
	0x6c, 0xce, 0x83, 0xd9, 0xf0, 0x4d, 0x3a, 0x6a, 0x9c, 0x84, 0x11, 0x97, 0xe8, 0xaa, 0xe7, 0x99,
	0xea, 0xb0, 0x24, 0x40, 0xe5, 0x63, 0x30, 0x14, 0x13, 0x27, 0xec, 0x91, 0x38, 0x53, 0xbd, 0x80,
	0x56, 0xb3, 0x61, 0x54, 0x5c, 0x80, 0x83, 0x5e, 0x62, 0x45, 0x24, 0xf6, 0x42, 0xd7, 0x73, 0xac,
	0x98, 0x84, 0x51, 0xea, 0x75, 0xbc, 0x37, 0xed, 0xd4, 0x0b, 0x03, 0x2b, 0x0c, 0xcc, 0x8b, 0x2c,
	0xf4, 0x29, 0x2f, 0xa9, 0x73, 0x9d, 0x86, 0xa2, 0x72, 0x3f, 0x30, 0xce, 0xc0, 0xb8, 0x86, 0xa1,
	0x39, 0xf3, 0x29, 0xe6, 0x71, 0x4c, 0x15, 0xa2, 0x19, 0xe3, 0x22, 0x4c, 0x06, 0xe4, 0x8d, 0x54,
	0x77, 0x98, 0x7a, 0x1d, 0x12, 0x9b, 0x97, 0x18, 0x58, 0xa5, 0x0a, 0xaa, 0xb7, 0x65, 0x2a, 0x36,
	0xce, 0xc2, 0x84, 0xdd, 0x4d, 0x69, 0xcd, 0x04, 0xee, 0x9a, 0xe7, 0xa6, 0xab, 0xa2, 0xa4, 0xcc,
	0xcb, 0xe8, 0x91, 0x4a, 0xaf, 0x0a, 0xe1, 0x32, 0xca, 0x8c, 0x67, 0x61, 0x5a, 0xa3, 0x9c, 0xd0,
	0xf7, 0x89, 0x23, 0x47, 0x7c, 0x85, 0xf1, 0x07, 0x15, 0x7e, 0x31, 0xd3, 0xe2, 0xa1, 0x1f, 0x85,
	0x21, 0x9a, 0xb2, 0x38, 0xec, 0x84, 0x22, 0x49, 0x4f, 0xb3, 0x24, 0xed, 0xf3, 0x92, 0xba, 0x18,
	0xbd, 0x1f, 0xb0, 0x72, 0xce, 0x94, 0xb8, 0x83, 0x67, 0x78, 0x39, 0x8b, 0x71, 0x6e, 0xf2, 0x34,
	0x8c, 0xb1, 0x6c, 0xe4, 0xfa, 0x98, 0x88, 0x05, 0xa6, 0x6e, 0x50, 0x59, 0x66, 0x19, 0x73, 0x30,
	0x07, 0xa3, 0x38, 0x69, 0xcb, 0x59, 0x25, 0xce, 0x03, 0x61, 0xff, 0x2a, 0x03, 0x46, 0x50, 0xb4,
	0x48, 0x25, 0x79, 0xd0, 0xcc, 0x03, 0x6a, 0x53, 0xeb, 0xe6, 0x22, 0xd3, 0xdd, 0x47, 0x87, 0x99,
	0x26, 0x35, 0x4c, 0x23, 0xe1, 0x76, 0x7b, 0x24, 0xf6, 0x5a, 0x0f, 0x85, 0xe1, 0x6b, 0x18, 0x09,
	0xca, 0x5e, 0x60, 0x22, 0x6e, 0xf9, 0x04, 0x8c, 0x30, 0xcb, 0x5c, 0x1f, 0x03, 0xbf, 0x8e, 0xf3,
	0xa4, 0x02, 0x54, 0xc6, 0xa8, 0x67, 0x61, 0xb8, 0x15, 0xc7, 0xac, 0x20, 0xb3, 0x35, 0xbb, 0x81,
	0x75, 0xd9, 0x8a, 0x63, 0x5a, 0x91, 0x62, 0xb5, 0xce, 0xc2, 0x04, 0xed, 0x4a, 0xc4, 0x11, 0xb5,
	0x9e, 0xe9, 0x3f, 0x8b, 0x6b, 0x9c, 0x49, 0x65, 0xaa, 0x46, 0x4b, 0x31, 0x0e, 0xbb, 0x05, 0xe8,
	0x26, 0x83, 0x46, 0x85, 0x50, 0x66, 0x9e, 0x80, 0x71, 0x1a, 0x53, 0xc7, 0x73, 0xad, 0x28, 0xf4,
	0x82, 0x34, 0x63, 0x6e, 0xe1, 0x94, 0x5b, 0x71, 0x7c, 0xd7, 0x73, 0xeb, 0x54, 0x24, 0x90, 0xcb,
	0xb0, 0x3f, 0x0f, 0xae, 0x08, 0x3e, 0xc7, 0x40, 0x33, 0x53, 0xd1, 0xf1, 0xa7, 0x60, 0x2a, 0x8b,
	0xb2, 0x48, 0xdf, 0xc6, 0xe2, 0x17, 0x1a, 0x3a, 0x7c, 0x16, 0x26, 0x7c, 0x2f, 0x78, 0x60, 0xe5,
	0x01, 0x08, 0xf0, 0x0e, 0x26, 0x86, 0x4a, 0xeb, 0x42, 0x28, 0x51, 0x41, 0xe8, 0x92, 0x12, 0xea,
	0x2e, 0x52, 0x54, 0x5a, 0xa0, 0x4e, 0xc3, 0x58, 0x73, 0xad, 0x84, 0xb9, 0x87, 0x99, 0x69, 0xae,
	0x95, 0x10, 0x2c, 0x99, 0x51, 0xcd, 0x8a, 0xd4, 0x05, 0xb8, 0x8f, 0x85, 0xd9, 0x8a, 0xe3, 0x7a,
	0xad, 0x2e, 0xa7, 0xff, 0x92, 0x9c, 0xcb, 0x22, 0x57, 0xc7, 0x6c, 0x64, 0x2a, 0x1a, 0x7d, 0x51,
	0x4a, 0x65, 0x11, 0x7e, 0x9e, 0xc1, 0x13, 0x42, 0x43, 0x63, 0x2f, 0xc0, 0x54, 0x16, 0x6b, 0x71,
	0x19, 0x1a, 0x8c, 0x1d, 0xc7, 0x80, 0xf5, 0x45, 0xb8, 0x0e, 0xd3, 0x5a, 0xd0, 0x45, 0x03, 0x4b,
	0xcc, 0xc0, 0x7e, 0x39, 0x72, 0xdd, 0xcc, 0x22, 0x1c, 0x56, 0xa3, 0x2f, 0x5a, 0x59, 0x66, 0x56,
	0xa6, 0xa4, 0x29, 0xe8, 0x46, 0x2e, 0xc1, 0x7e, 0xad, 0x20, 0x98, 0x29, 0x61, 0x60, 0x05, 0x13,
	0xa8, 0x54, 0x45, 0xbd, 0x56, 0x97, 0x68, 0xad, 0x30, 0x14, 0xfa, 0x05, 0xde, 0x89, 0xe5, 0xea,
	0x90, 0xe8, 0xf3, 0x30, 0xa9, 0x14, 0x88, 0xc2, 0xbe, 0x88, 0x19, 0x94, 0xaa, 0x44, 0x22, 0x8f,
	0xc0, 0x60, 0xd3, 0x76, 0x1e, 0x74, 0x73, 0xf5, 0xff, 0xc3, 0x76, 0x84, 0xa3, 0x42, 0xed, 0x38,
	0x0c, 0xe3, 0x40, 0x62, 0xd9, 0x49, 0xe2, 0xb5, 0x03, 0xe2, 0x9a, 0x2f, 0x61, 0x6f, 0xe1, 0xe3,
	0x0b, 0x7c, 0xd8, 0x38, 0x0f, 0x26, 0x5b, 0xce, 0x2c, 0x18, 0x2f, 0x48, 0x49, 0xdc, 0xb2, 0x1d,
	0x92, 0x98, 0x2f, 0x63, 0x21, 0xd0, 0xc5, 0x14, 0xe2, 0x5b, 0x99, 0xd4, 0x78, 0x1c, 0xb2, 0xc6,
	0x20, 0x43, 0xaf, 0x60, 0x95, 0x0b, 0x91, 0x04, 0x1c, 0x87, 0x91, 0x62, 0xb1, 0xfd, 0x3f, 0xf6,
	0xb1, 0x48, 0x2d, 0xb2, 0x39, 0x18, 0xeb, 0x46, 0x25, 0xa5, 0xf9, 0x2a, 0x1e, 0xdc, 0xdd, 0x48,
	0x2b, 0xca, 0xcb, 0x70, 0xc0, 0x7d, 0x18, 0xd8, 0x1d, 0xcf, 0xb1, 0x4a, 0xb9, 0x2f, 0xe1, 0x82,
	0x70, 0x9d, 0x95, 0x12, 0x9c, 0x26, 0xc1, 0x09, 0x83, 0x96, 0xd7, 0x2e, 0xc1, 0x2d, 0xc4, 0x5b,
	0x71, 0xbc, 0xc8, 0x54, 0x34, 0xfc, 0x0c, 0x4c, 0xe4, 0x8c, 0x4b, 0x92, 0xd4, 0x0b, 0xd8, 0xb9,
	0x9b, 0x98, 0x5f, 0xc6, 0x06, 0xca, 0x67, 0x77, 0x4d, 0x12, 0xd1, 0x22, 0x28, 0x87, 0xac, 0x6e,
	0x64, 0xda, 0x58, 0x04, 0x25, 0xdc, 0x4a, 0x64, 0x9c, 0x81, 0x6a, 0xb1, 0x7c, 0x92, 0x9a, 0xe5,
	0x27, 0x66, 0xb3, 0xd0, 0x62, 0xea, 0xb5, 0xfa, 0x52, 0xed, 0x4e, 0x62, 0x9c, 0x83, 0xc9, 0xb2,
	0x7a, 0x47, 0xcc, 0x29, 0xe9, 0x81, 0x02, 0x3c, 0x0e, 0x86, 0x92, 0x52, 0x24, 0x5c, 0x2c, 0xbb,
	0x6c, 0x21, 0x98, 0xea, 0x05, 0x98, 0x62, 0xf7, 0x3e, 0xc2, 0x6e, 0x71, 0x3a, 0x42, 0xf8, 0x9c,
	0x32, 0x0d, 0x0d, 0xe5, 0x57, 0xac, 0x32, 0xb4, 0x85, 0x68, 0xae, 0x21, 0xa3, 0x27, 0x61, 0x54,
	0x6d, 0x9e, 0xc8, 0xb4, 0xb3, 0x03, 0x52, 0x56, 0x3e, 0x07, 0x93, 0x65, 0x7d, 0x13, 0x91, 0x55,
	0xed, 0x8c, 0x94, 0xc1, 0x79, 0x30, 0x4b, 0x5a, 0x26, 0x72, 0x9e, 0x7a, 0x4c, 0xca, 0xd8, 0x29,
	0x18, 0xd3, 0x5a, 0x14, 0x22, 0xaf, 0xf1, 0x1b, 0x4d, 0xde, 0x98, 0x98, 0x7a, 0x0d, 0xaa, 0x22,
	0xd9, 0x3a, 0xf1, 0x00, 0x8f, 0x02, 0x96, 0x71, 0x85, 0xb9, 0x0a, 0x87, 0xf5, 0xac, 0xeb, 0xac,
	0xcf, 0xd8, 0x49, 0x25, 0xf5, 0x8a, 0x8d, 0xb3, 0xbc, 0x0b, 0x94, 0xc1, 0x9d, 0xec, 0x40, 0xd7,
	0xa9, 0x67, 0xe0, 0xd0, 0xba, 0xfd, 0x1c, 0xd9, 0x40, 0x3b, 0xd3, 0x75, 0x0b, 0x57, 0xe0, 0xe0,
	0x7a, 0xad, 0x1c, 0x0d, 0x84, 0xea, 0xb1, 0xae, 0xf3, 0xff, 0x0b, 0x43, 0xd8, 0x3c, 0x6d, 0xcf,
	0xe7, 0x44, 0xc4, 0x88, 0x3d, 0x51, 0xad, 0xbe, 0x6c, 0x7b, 0xbe, 0x5e, 0xc2, 0x92, 0xe2, 0xeb,
	0x52, 0x09, 0x4b, 0xaa, 0x23, 0xb9, 0x9e, 0xd8, 0xfe, 0x71, 0xd6, 0xa3, 0xa8, 0x5e, 0x7e, 0x9a,
	0x1d, 0x8e, 0xec, 0x74, 0x55, 0xec, 0x28, 0xde, 0x3d, 0xba, 0xb1, 0x74, 0xe2, 0x27, 0x0c, 0x3c,
	0x40, 0xd5, 0xf8, 0xbe, 0x5a, 0xcc, 0x94, 0x84, 0x99, 0xe7, 0x60, 0x66, 0x13, 0x33, 0xb4, 0x21,
	0xa4, 0xcc, 0xd2, 0xa1, 0x8d, 0x2c, 0xad, 0x44, 0xc6, 0x4b, 0x70, 0x62, 0x33, 0x5b, 0x49, 0x6a,
	0x07, 0x6e, 0xf3, 0x21, 0xb5, 0xd9, 0x65, 0x36, 0x8f, 0x6c, 0x64, 0x73, 0x09, 0xb5, 0x57, 0x22,
	0xe3, 0x31, 0x30, 0x58, 0xff, 0x70, 0xbd, 0x1e, 0x89, 0x13, 0x62, 0x51, 0x2a, 0x31, 0x7b, 0xd8,
	0x8f, 0xa9, 0xe4, 0x1a, 0x0a, 0xea, 0x74, 0x9c, 0x6a, 0xb3, 0xf3, 0x51, 0xd5, 0x5e, 0x43, 0x6d,
	0x2a, 0x51, 0xb4, 0xc5, 0x59, 0x6c, 0x07, 0xae, 0x55, 0x82, 0xbd, 0x91, 0x9f, 0xc5, 0x0b, 0x81,
	0x7b, 0x4f, 0xa7, 0x1f, 0x03, 0xa3, 0x9b, 0x90, 0xd8, 0x72, 0x49, 0xcb, 0x0b, 0x68, 0x1d, 0x31,
	0xe8, 0x21, 0x3f, 0x29, 0x12, 0x12, 0x5f, 0x43, 0x01, 0x6a, 0x9f, 0x04, 0x23, 0xaa, 0x59, 0x1d,
	0xad, 0xc1, 0xbf, 0x29, 0xb6, 0xe3, 0xdd, 0x48, 0x6e, 0xec, 0xa7, 0x61, 0x1c, 0x0b, 0x47, 0xd7,
	0xff, 0x4a, 0xbe, 0x19, 0x55, 0xe2, 0x69, 0x38, 0xa8, 0x9e, 0x24, 0x3a, 0xf9, 0x16, 0xee, 0x08,
	0xe9, 0x28, 0x51, 0x0d, 0xcc, 0x43, 0x55, 0xa2, 0x94, 0xc3, 0xe4, 0xab, 0xbc, 0x3d, 0x71, 0x42,
	0x39, 0x4d, 0x2e, 0xc2, 0x94, 0x1a, 0xa9, 0x42, 0xbe, 0x8d, 0x07, 0x79, 0x1e, 0xae, 0xc2, 0xce,
	0x83, 0xa9, 0x9f, 0x27, 0x1d, 0x71, 0x32, 0x7c, 0x0d, 0x5b, 0x9b, 0x72, 0xa0, 0xdc, 0x8d, 0xd8,
	0x56, 0xb9, 0x08, 0x53, 0xc5, 0x13, 0x25, 0x03, 0xbf, 0x5e, 0xc1, 0x9e, 0xad, 0x9d, 0x29, 0x9c,
	0x7d, 0x0c, 0x46, 0xd5, 0x70, 0x11, 0x7a, 0x07, 0xa1, 0xc1, 0x3c, 0x50, 0xa6, 0x8d, 0x97, 0x5d,
	0xa9, 0xc3, 0xa9, 0xd4, 0x37, 0x90, 0x9a, 0x90, 0xdb, 0x9b, 0x44, 0xcf, 0xc1, 0x18, 0xef, 0x6d,
	0x2a, 0xf6, 0x4d, 0xc4, 0x86, 0x58, 0x63, 0x93, 0xf4, 0x2f, 0xb2, 0x53, 0x4c, 0x99, 0x92, 0x44,
	0xbd, 0x5b, 0xc9, 0x8e, 0xb1, 0x7c, 0x4e, 0x19, 0x7b, 0x1e, 0x26, 0xe5, 0x7e, 0xa6, 0xa2, 0xdf,
	0xaa, 0x88, 0x97, 0xbd, 0x68, 0x66, 0x12, 0x79, 0x1a, 0xc6, 0x11, 0xd0, 0x3b, 0xe0, 0x7b, 0x48,
	0x0d, 0xd3, 0x65, 0x57, 0x7a, 0xdf, 0x3c, 0x98, 0x59, 0x0e, 0x75, 0xe8, 0xdb, 0x08, 0x19, 0x98,
	0x48, 0x05, 0xc3, 0x4b, 0xb8, 0x9a, 0x4c, 0x1d, 0xff, 0x0e, 0xe2, 0x53, 0x6a, 0x46, 0x15, 0x33,
	0xe7, 0x60, 0x32, 0xcf, 0xaa, 0xce, 0x7f, 0x17, 0xf9, 0x51, 0x9e, 0x5a, 0x05, 0x5c, 0x64, 0xc7,
	0x95, 0x92, 0x5e, 0x1d, 0xff, 0x5e, 0x25, 0x3b, 0xaf, 0xf2, 0x1c, 0x2b, 0x46, 0x16, 0xe0, 0x90,
	0x96, 0x67, 0xdd, 0xc6, 0xfb, 0x68, 0xc3, 0x94, 0x93, 0xad, 0x98, 0x38, 0x06, 0xc3, 0x48, 0x4a,
	0x47, 0xc2, 0xf7, 0x11, 0xda, 0x4b, 0x73, 0x9d, 0x1d, 0x09, 0x72, 0xad, 0x4a, 0xba, 0x3f, 0x50,
	0x6a, 0x35, 0xd3, 0x3e, 0x05, 0x46, 0xd3, 0x73, 0x3d, 0xed, 0xb5, 0xfe, 0x43, 0xbe, 0x88, 0x4c,
	0xa4, 0x3d, 0xbd, 0x8b, 0xea, 0xb4, 0x39, 0xff, 0x88, 0xaf, 0xa0, 0x4e, 0xac, 0x44, 0xc6, 0x55,
	0x38, 0x58, 0xc2, 0xd8, 0x49, 0x12, 0x3a, 0x9e, 0x9d, 0x12, 0xd7, 0xfc, 0x31, 0x5f, 0x3e, 0x9d,
	0x5d, 0xc8, 0x54, 0x8c, 0x2b, 0xb0, 0xbf, 0xc4, 0x86, 0x13, 0x62, 0xb2, 0xcc, 0x9f, 0xf0, 0xec,
	0xe9, 0x16, 0x16, 0xb9, 0x82, 0x71, 0x0a, 0x46, 0x25, 0xde, 0x4f, 0xac, 0x88, 0x45, 0xfd, 0x01,
	0xdf, 0x53, 0x19, 0x77, 0x27, 0xa9, 0xd3, 0x90, 0x2f, 0x2b, 0xee, 0x50, 0x3d, 0x2f, 0x2e, 0xf3,
	0xa7, 0x88, 0x55, 0x15, 0xac, 0x9e, 0xc9, 0x4b, 0x71, 0x69, 0xbe, 0x1f, 0x96, 0xe1, 0xd2, 0x64,
	0xcf, 0x81, 0x59, 0xc0, 0xf9, 0x39, 0x68, 0x7e, 0xc4, 0x37, 0xa5, 0xc2, 0xf2, 0x63, 0xcf, 0x38,
	0x09, 0x23, 0x08, 0xd2, 0xea, 0x12, 0x6b, 0xf9, 0xb1, 0x3c, 0xc7, 0xbb, 0x9e, 0xf2, 0xec, 0xd7,
	0x95, 0x69, 0x4e, 0x7e, 0x86, 0xfa, 0x23, 0x9a, 0xfe, 0x4a, 0x64, 0x3c, 0x05, 0x53, 0x39, 0x51,
	0x48, 0xca, 0x27, 0xbc, 0xad, 0x09, 0x4e, 0xcb, 0x49, 0x09, 0x2c, 0xa5, 0xe4, 0xe7, 0x25, 0xb0,
	0x94, 0x91, 0x79, 0xa8, 0xea, 0xb0, 0x48, 0xc8, 0x2f, 0xf8, 0xde, 0x95, 0x49, 0x91, 0x8f, 0x59,
	0xc0, 0x0a, 0xc6, 0x7d, 0xc0, 0x38, 0xf3, 0x97, 0x15, 0xfe, 0x02, 0xa5, 0x02, 0xba, 0x0d, 0x28,
	0x90, 0xd7, 0x47, 0xae, 0x49, 0x73, 0xf1, 0x2b, 0x39, 0x77, 0x42, 0x59, 0xae, 0x0f, 0x49, 0x5d,
	0x4a, 0xc5, 0xaf, 0xe5, 0x05, 0x16, 0x58, 0x59, 0x7d, 0x48, 0xb8, 0x94, 0x8c, 0xdf, 0x94, 0xe1,
	0x65, 0xf5, 0x21, 0xe1, 0x22, 0x1d, 0xbf, 0x95, 0xeb, 0x43, 0xb0, 0x22, 0x1f, 0x17, 0x60, 0xb2,
	0x00, 0x66, 0x7b, 0xe8, 0x77, 0xfc, 0xa4, 0x50, 0xc8, 0x6c, 0x03, 0xbd, 0x57, 0x01, 0xc3, 0xee,
	0xa6, 0x21, 0x7f, 0xce, 0xf3, 0xaf, 0xfa, 0xe6, 0xef, 0x29, 0xb4, 0xa7, 0xf6, 0xc2, 0xdc, 0xe7,
	0xfe, 0x55, 0x41, 0x8c, 0x5b, 0xd4, 0x6a, 0xda, 0x0d, 0x2c, 0xd5, 0x32, 0xfb, 0xbd, 0xa0, 0x31,
	0x92, 0xbb, 0x5c, 0xc2, 0x71, 0xe3, 0x9d, 0x0a, 0xb0, 0x51, 0xab, 0x43, 0x92, 0xd5, 0x2c, 0x8e,
	0x3f, 0x60, 0x1c, 0xcb, 0x7d, 0x88, 0x43, 0xb6, 0x8b, 0x51, 0x0c, 0x51, 0xd1, 0x5d, 0x92, 0xac,
	0x8a, 0x18, 0x3e, 0xae, 0xc0, 0x64, 0x1e, 0x43, 0x18, 0x10, 0x6b, 0x35, 0xcc, 0x73, 0xf2, 0x29,
	0xc6, 0xf2, 0x4a, 0xbf, 0x62, 0x09, 0x03, 0x22, 0x99, 0xc7, 0x90, 0xc6, 0x45, 0x48, 0xf7, 0x03,
	0x72, 0x33, 0xcc, 0x92, 0xf3, 0x36, 0x8c, 0xb4, 0x99, 0x8d, 0x6e, 0xe0, 0x65, 0xf1, 0xfc, 0x11,
	0xe3, 0x79, 0xfe, 0x3f, 0x88, 0xa7, 0x60, 0x94, 0x27, 0x86, 0x8d, 0xaf, 0x04, 0x5e, 0xc1, 0x7f,
	0x20, 0xf9, 0xff, 0x53, 0xbf, 0xfc, 0x07, 0xe5, 0xfe, 0xef, 0xe5, 0xfe, 0x3f, 0xa9, 0xc0, 0x8c,
	0xd3, 0x8d, 0x63, 0x92, 0x7d, 0x5b, 0xa3, 0x57, 0xdb, 0x1e, 0x89, 0xdb, 0x24, 0x70, 0x48, 0x16,
	0xd1, 0x9f, 0x31, 0xa2, 0xe7, 0xbe, 0x40, 0x44, 0x29, 0x61, 0x16, 0xad, 0xb4, 0xe9, 0x67, 0xb1,
	0x34, 0xed, 0x76, 0xe3, 0x30, 0x77, 0x8b, 0xdd, 0x72, 0x31, 0x77, 0x2a, 0x42, 0xfb, 0xa0, 0x02,
	0x87, 0x7d, 0x3b, 0xd9, 0x30, 0xae, 0xcf, 0xfa, 0x1f, 0xd7, 0x01, 0xea, 0x73, 0xdd, 0xa0, 0xde,
	0xaf, 0x40, 0x95, 0x15, 0x32, 0x2d, 0xb6, 0x84, 0xc4, 0x3d, 0x12, 0x67, 0xc1, 0xfc, 0x05, 0x83,
	0x59, 0xea, 0x43, 0x19, 0x27, 0xbd, 0x58, 0x5d, 0x38, 0xf6, 0xdb, 0xcd, 0x72, 0x37, 0x58, 0x62,
	0x2e, 0x79, 0x34, 0x33, 0x1f, 0x6d, 0x87, 0x49, 0x1d, 0x8d, 0x6a, 0x9d, 0x88, 0x31, 0xf4, 0xa9,
	0xcb, 0x42, 0xe5, 0x37, 0x1b, 0xe6, 0xd2, 0xe4, 0x97, 0x1a, 0x2a, 0x60, 0xd7, 0x1a, 0x36, 0x4a,
	0x8f, 0x0b, 0x49, 0x55, 0x79, 0x5a, 0x6c, 0xcb, 0x7f, 0x3b, 0xa2, 0x40, 0xc9, 0xa3, 0x64, 0x3d,
	0x72, 0xbb, 0x78, 0x94, 0x2c, 0x94, 0xb1, 0x57, 0xe0, 0x80, 0x1b, 0xae, 0x05, 0xeb, 0xd2, 0x3b,
	0xf0, 0x82, 0x42, 0x75, 0x4a, 0x79, 0x7c, 0xba, 0x15, 0x26, 0x98, 0x98, 0x8f, 0x88, 0xa7, 0xdb,
	0x82, 0x32, 0xc7, 0xc4, 0x38, 0x0b, 0x55, 0xdd, 0xa3, 0x60, 0x76, 0xe2, 0x91, 0x28, 0x3b, 0xcb,
	0x2f, 0x70, 0x13, 0xf4, 0x1e, 0x5c, 0x02, 0xed, 0xca, 0xbe, 0x9b, 0x68, 0xcc, 0xcc, 0x67, 0x15,
	0x30, 0x8b, 0xeb, 0xc2, 0x97, 0xe5, 0x18, 0x0c, 0x0b, 0x63, 0xda, 0xaa, 0xec, 0xc3, 0x24, 0xf3,
	0x8f, 0xc1, 0xfc, 0x1b, 0xa9, 0xae, 0x2b, 0x56, 0x64, 0x58, 0x4c, 0xb0, 0x2e, 0x45, 0xaa, 0xcc,
	0x2f, 0x27, 0x70, 0x25, 0x8c, 0x7c, 0x7a, 0x82, 0x99, 0xf9, 0xd7, 0xb6, 0x62, 0xa4, 0xb4, 0xf8,
	0x58, 0xa4, 0xaf, 0x01, 0xe0, 0x8c, 0xe9, 0x5f, 0x26, 0x56, 0xf7, 0x9d, 0x3e, 0x54, 0x77, 0x56,
	0xa2, 0x8d, 0xdd, 0xf4, 0x22, 0x7e, 0x8b, 0xfa, 0x6a, 0xc3, 0x00, 0x0b, 0x99, 0xb9, 0xda, 0xc6,
	0x5c, 0xdd, 0xee, 0x8b, 0x2b, 0xee, 0x69, 0x57, 0x54, 0xab, 0x33, 0x47, 0x8f, 0xc2, 0x3e, 0xf6,
	0xbb, 0xbe, 0x13, 0xfa, 0x56, 0xfa, 0x30, 0x22, 0x2c, 0x39, 0x03, 0x8d, 0xbd, 0x62, 0x70, 0xf9,
	0x61, 0xc4, 0x7e, 0xee, 0x73, 0x7c, 0x8f, 0x36, 0x45, 0x2f, 0xa0, 0x17, 0x05, 0x87, 0x58, 0x81,
	0xdd, 0x21, 0xac, 0x28, 0x07, 0x1a, 0x06, 0xca, 0x6e, 0x71, 0xd1, 0x3d, 0xbb, 0x43, 0x8c, 0xfd,
	0x30, 0x20, 0x08, 0x97, 0x97, 0xe0, 0x6e, 0xae, 0xe6, 0xce, 0x7c, 0xba, 0x3d, 0xff, 0x99, 0x7f,
	0xbd, 0x2d, 0x6e, 0xa4, 0x30, 0x84, 0x40, 0xf6, 0x2f, 0x00, 0x66, 0x65, 0x7a, 0x7b, 0x9f, 0xf2,
	0x20, 0xd6, 0xb4, 0x31, 0xc8, 0x7d, 0x88, 0x86, 0xf6, 0x6e, 0x05, 0xcc, 0x34, 0x4c, 0x6d, 0xbf,
	0xac, 0xc2, 0xb7, 0xfd, 0x17, 0x96, 0x7c, 0x8c, 0x79, 0xd3, 0x77, 0xd9, 0x3b, 0x15, 0xa8, 0xaa,
	0x61, 0xa8, 0xd5, 0xdb, 0xe7, 0x6a, 0x18, 0x95, 0x82, 0xc8, 0xf6, 0xc2, 0x5f, 0xf7, 0xc2, 0xa3,
	0x5b, 0xb8, 0x63, 0x19, 0xd3, 0xb0, 0x27, 0xbf, 0x65, 0x25, 0x7c, 0xef, 0xca, 0x43, 0xc6, 0x11,
	0x18, 0xe4, 0x3b, 0x57, 0x28, 0x6d, 0x13, 0xdf, 0x22, 0x17, 0x24, 0xb5, 0xe3, 0x30, 0x9c, 0x6d,
	0x58, 0xa1, 0x88, 0x5b, 0x75, 0x48, 0x6c, 0x55, 0xa1, 0x7a, 0x0a, 0x8c, 0x6e, 0xd0, 0x4d, 0x88,
	0xab, 0x28, 0xef, 0xe0, 0xad, 0x8e, 0x49, 0x64, 0x75, 0xf1, 0xc3, 0x39, 0xbd, 0x06, 0xc9, 0xc0,
	0x23, 0xf9, 0x0f, 0xe7, 0x37, 0x43, 0x25, 0x96, 0x0b, 0xfc, 0x1f, 0x0f, 0x4a, 0x31, 0x6c, 0x8f,
	0x13, 0x54, 0x76, 0xaf, 0x88, 0x3e, 0x09, 0xd5, 0x24, 0xf6, 0xdb, 0x56, 0x92, 0xc6, 0x9e, 0x93,
	0x2a, 0x20, 0xb6, 0xc8, 0x71, 0x2a, 0x5e, 0x62, 0x52, 0x99, 0xbb, 0x04, 0x53, 0x8c, 0x8b, 0x62,
	0xd2, 0x22, 0x71, 0xac, 0xcd, 0x6d, 0x37, 0xf6, 0x7f, 0xaa, 0x51, 0x17, 0x0a, 0x32, 0x7d, 0x11,
	0x26, 0x19, 0xbd, 0x46, 0xbc, 0xf6, 0x6a, 0xaa, 0xc1, 0x03, 0xf8, 0x1e, 0xa0, 0x0a, 0x2f, 0x72,
	0xb9, 0xcc, 0xde, 0x86, 0x47, 0x4b, 0xe6, 0x29, 0x7d, 0xe8, 0xc2, 0x97, 0x0f, 0xe0, 0x37, 0xd9,
	0x42, 0xb6, 0xb2, 0xcf, 0x5d, 0xec, 0x25, 0xb4, 0x0c, 0xb3, 0xeb, 0x65, 0xae, 0x60, 0x71, 0x0f,
	0xb3, 0x38, 0x53, 0x9a, 0xc8, 0x72, 0xab, 0xec, 0x22, 0x4b, 0xe7, 0xb9, 0x81, 0xd5, 0xbd, 0xb9,
	0x55, 0x7a, 0xb5, 0x8d, 0xfd, 0xf6, 0x7a, 0x56, 0x5f, 0x85, 0x53, 0x6a, 0xac, 0x9b, 0x99, 0xde,
	0xc7, 0x4c, 0x1f, 0x95, 0x02, 0xde, 0xc8, 0xfc, 0xcb, 0x70, 0x72, 0xe3, 0x2c, 0x24, 0x35, 0xcb,
	0xb7, 0x5a, 0x76, 0xc7, 0xf3, 0x3d, 0x92, 0x98, 0x83, 0xf8, 0x7d, 0x7a, 0xfd, 0xfc, 0x2e, 0xd5,
	0xee, 0xdc, 0xe0, 0xca, 0x86, 0x03, 0xa7, 0xb7, 0x90, 0x66, 0xd5, 0xc1, 0x10, 0x73, 0x70, 0x7c,
	0xe3, 0x74, 0x97, 0x39, 0xd9, 0x38, 0x35, 0xaa, 0x93, 0xe1, 0xdc, 0xc9, 0xfa, 0xe9, 0x91, 0x9d,
	0xf8, 0x30, 0xbf, 0xd5, 0x45, 0x50, 0x3d, 0x8d, 0x30, 0x4f, 0xa7, 0x36, 0x5f, 0x0c, 0xd9, 0xdb,
	0xa6, 0xb5, 0x8e, 0x5f, 0xbb, 0x8c, 0xcd, 0x6a, 0x9d, 0x7d, 0xfc, 0xda, 0x5a, 0xad, 0xa3, 0xc5,
	0xd1, 0xad, 0xd4, 0xba, 0x62, 0x75, 0xf3, 0x5c, 0x24, 0xe6, 0xd8, 0x56, 0x6a, 0x9d, 0x59, 0xfd,
	0x1c, 0xb5, 0x8e, 0xa6, 0xc7, 0xb7, 0x5a, 0xeb, 0xd4, 0xfc, 0xcc, 0xdf, 0xb7, 0xc1, 0xff, 0x6c,
	0xfa, 0x12, 0x36, 0x4e, 0xc8, 0x6f, 0x6f, 0x71, 0xa0, 0xf1, 0x6f, 0x24, 0xe2, 0x45, 0x2a, 0xce,
	0xc0, 0xc7, 0xf3, 0xfb, 0x9e, 0xa2, 0xbe, 0x4d, 0xbe, 0xd0, 0xca, 0xc0, 0x19, 0xf9, 0xc2, 0xa7,
	0x20, 0xdb, 0xd5, 0xfb, 0xac, 0x0c, 0xf1, 0xff, 0xeb, 0x29, 0x32, 0x3b, 0x94, 0xeb, 0xac, 0x8c,
	0xcc, 0xf2, 0x1b, 0x2b, 0x53, 0x6f, 0xc7, 0x61, 0x7e, 0x92, 0x0c, 0x8a, 0x39, 0x3c, 0xcb, 0x46,
	0xb3, 0x7f, 0x41, 0x63, 0x9a, 0xca, 0x75, 0x7e, 0x67, 0xfe, 0x8c, 0xa0, 0xfa, 0xf2, 0x55, 0x9e,
	0x3e, 0x63, 0x66, 0xb7, 0xfa, 0x90, 0x37, 0xce, 0x97, 0x7d, 0x49, 0x50, 0x33, 0xab, 0xbd, 0xf5,
	0xa5, 0x7f, 0x02, 0x50, 0xf2, 0xab, 0xc3, 0x98, 0xe7, 0x6a, 0x9e, 0x67, 0x15, 0x5f, 0x80, 0x43,
	0x5a, 0xb6, 0x75, 0x03, 0x98, 0xf5, 0x49, 0x39, 0xeb, 0xaa, 0x89, 0x2f, 0x90, 0xfb, 0x27, 0xc1,
	0x2c, 0x3a, 0x54, 0xd6, 0x60, 0x4c, 0x9d, 0x2d, 0x5f, 0x89, 0xab, 0x70, 0xa8, 0xc8, 0x95, 0xac,
	0xc8, 0x94, 0x4a, 0x2b, 0xeb, 0x52, 0x85, 0xf1, 0x94, 0x58, 0x7e, 0x12, 0x59, 0xae, 0x9d, 0xda,
	0xf8, 0xf1, 0x9d, 0xae, 0xc1, 0xcc, 0x24, 0x54, 0x53, 0x62, 0xa5, 0x76, 0xd3, 0x27, 0xba, 0xe8,
	0x9f, 0xbb, 0x98, 0xac, 0xec, 0x69, 0x4d, 0x5f, 0x99, 0xfc, 0x2d, 0xcf, 0xb2, 0xe0, 0xa4, 0x5e,
	0x8f, 0x6a, 0x76, 0x83, 0x94, 0x2f, 0x1c, 0xff, 0x1f, 0xbb, 0x1b, 0x71, 0xbc, 0xc0, 0x84, 0x8b,
	0x54, 0x46, 0xcb, 0x5c, 0xc2, 0xf0, 0x96, 0x88, 0x14, 0xae, 0xd8, 0x68, 0x46, 0x2d, 0x53, 0x19,
	0x42, 0x67, 0x33, 0x48, 0x7c, 0x37, 0x70, 0x39, 0xb4, 0x5d, 0x76, 0x25, 0x9e, 0xf8, 0x2e, 0x52,
	0x0d, 0x38, 0xca, 0x29, 0xe1, 0x26, 0xff, 0xe6, 0xe0, 0x84, 0x9d, 0xc8, 0x27, 0x74, 0xde, 0x1e,
	0x7f, 0x09, 0xec, 0x68, 0xcc, 0xa0, 0x36, 0xf7, 0x9b, 0xe9, 0x2e, 0x72, 0x55, 0xf6, 0xaf, 0x83,
	0x11, 0x0c, 0x62, 0xa6, 0xd8, 0x2f, 0xb7, 0x61, 0x37, 0x65, 0xeb, 0xf6, 0x85, 0x3f, 0x5a, 0x94,
	0x65, 0xbd, 0xb1, 0x97, 0x8d, 0xd6, 0xed, 0x74, 0xf5, 0x7e, 0x37, 0x35, 0x02, 0xd8, 0x87, 0x5a,
	0x31, 0x49, 0x7a, 0x96, 0x17, 0xb0, 0xa5, 0xee, 0xaf, 0xc3, 0x3d, 0x6c, 0xb4, 0x41, 0x92, 0xde,
	0xad, 0xc0, 0x78, 0x13, 0x46, 0x51, 0xc9, 0xb7, 0x9b, 0xc4, 0xb7, 0x62, 0xb2, 0x16, 0x7b, 0x29,
	0x61, 0x97, 0xbf, 0xfe, 0x7a, 0x1d, 0x61, 0xa3, 0x77, 0xa8, 0x97, 0x06, 0x3a, 0x31, 0x1e, 0xc0,
	0x1e, 0x9e, 0x5d, 0xc7, 0xf6, 0x1d, 0x76, 0x6b, 0xec, 0xaf, 0x4f, 0xc0, 0xd4, 0x52, 0xeb, 0xc6,
	0x5b, 0x30, 0x86, 0x3a, 0xbc, 0x48, 0xc4, 0x4c, 0x07, 0xfa, 0xee, 0xd5, 0x60, 0xa3, 0xd8, 0x04,
	0xc4, 0x54, 0x7b, 0x80, 0xf3, 0xc7, 0x6d, 0x10, 0x7b, 0xed, 0x36, 0x89, 0xd9, 0x1d, 0xb5, 0xbf,
	0xae, 0x87, 0xd8, 0x28, 0xdd, 0x4d, 0xe8, 0x62, 0xe6, 0xc3, 0x0a, 0x1c, 0xda, 0xf8, 0xbb, 0xa6,
	0x31, 0x09, 0xbb, 0xd9, 0x7f, 0x53, 0x5b, 0xdd, 0x88, 0x6f, 0xe5, 0x5d, 0xec, 0xef, 0x95, 0xc8,
	0x38, 0x08, 0x80, 0x22, 0xda, 0x16, 0xf9, 0x8e, 0x1d, 0x60, 0x23, 0xd7, 0xc2, 0xb5, 0x80, 0x92,
	0xa9, 0xed, 0xe1, 0x0f, 0x29, 0xb8, 0x33, 0x77, 0xb1, 0xbf, 0x91, 0x44, 0x11, 0x23, 0xb1, 0x45,
	0x0e, 0xb0, 0x11, 0x4a, 0xce, 0xfc, 0xa3, 0x10, 0x56, 0xd0, 0xbf, 0xb0, 0xaa, 0xb0, 0xab, 0xe3,
	0xb9, 0x52, 0x54, 0x3b, 0xe9, 0x9f, 0x2b, 0x11, 0x7d, 0xe7, 0x33, 0x81, 0x14, 0xd3, 0x6e, 0x3a,
	0x50, 0x98, 0xcc, 0x23, 0x1b, 0x4d, 0x66, 0xa7, 0x36, 0x99, 0xe6, 0x4e, 0xf6, 0xf9, 0xe1, 0xcc,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x51, 0x6e, 0x54, 0x95, 0x30, 0x00, 0x00,
}
