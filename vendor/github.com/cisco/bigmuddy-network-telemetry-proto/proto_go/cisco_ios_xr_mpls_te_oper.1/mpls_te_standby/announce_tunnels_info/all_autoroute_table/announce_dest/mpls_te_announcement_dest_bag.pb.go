// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_announcement_dest_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_announce_tunnels_info_all_autoroute_table_announce_dest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The summary info of announcements for a destination and an IGP area
type MplsTeAnnouncementDestBag_KEYS struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	Protocol             string   `protobuf:"bytes,2,opt,name=protocol" json:"protocol,omitempty"`
	Area                 uint32   `protobuf:"varint,3,opt,name=area" json:"area,omitempty"`
	IgpId                string   `protobuf:"bytes,4,opt,name=igp_id,json=igpId" json:"igp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAnnouncementDestBag_KEYS) Reset()         { *m = MplsTeAnnouncementDestBag_KEYS{} }
func (m *MplsTeAnnouncementDestBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeAnnouncementDestBag_KEYS) ProtoMessage()    {}
func (*MplsTeAnnouncementDestBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_announcement_dest_bag_986d6640a5603280, []int{0}
}
func (m *MplsTeAnnouncementDestBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeAnnouncementDestBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsTeAnnouncementDestBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.Merge(dst, src)
}
func (m *MplsTeAnnouncementDestBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.Size(m)
}
func (m *MplsTeAnnouncementDestBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS proto.InternalMessageInfo

func (m *MplsTeAnnouncementDestBag_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag_KEYS) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag_KEYS) GetArea() uint32 {
	if m != nil {
		return m.Area
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag_KEYS) GetIgpId() string {
	if m != nil {
		return m.IgpId
	}
	return ""
}

type MplsTeAnnouncementDestBag struct {
	// IGP type
	IgpType string `protobuf:"bytes,50,opt,name=igp_type,json=igpType" json:"igp_type,omitempty"`
	// IGP Instance name
	IgpInstance string `protobuf:"bytes,51,opt,name=igp_instance,json=igpInstance" json:"igp_instance,omitempty"`
	// IGP Area ID
	IgpArea uint32 `protobuf:"varint,52,opt,name=igp_area,json=igpArea" json:"igp_area,omitempty"`
	// Destination
	Destination string `protobuf:"bytes,53,opt,name=destination" json:"destination,omitempty"`
	// The number of announced tunnels
	AnnouncedTunnelsCount uint32 `protobuf:"varint,54,opt,name=announced_tunnels_count,json=announcedTunnelsCount" json:"announced_tunnels_count,omitempty"`
	// The number of tunnels that are announced as shortcuts
	AutoroutedTunnelsCount uint32 `protobuf:"varint,55,opt,name=autorouted_tunnels_count,json=autoroutedTunnelsCount" json:"autorouted_tunnels_count,omitempty"`
	// The number of tunnels that are announced as forwarding adjacencies
	ForwardingAdjacencyTunnelsCount uint32 `protobuf:"varint,56,opt,name=forwarding_adjacency_tunnels_count,json=forwardingAdjacencyTunnelsCount" json:"forwarding_adjacency_tunnels_count,omitempty"`
	// The format for the area: IPv4 address or a positive integer
	AreaFormat string `protobuf:"bytes,57,opt,name=area_format,json=areaFormat" json:"area_format,omitempty"`
	// Announced tunnels for this destination
	TotalTunnels         []*MplsTeAutorouteBag `protobuf:"bytes,58,rep,name=total_tunnels,json=totalTunnels" json:"total_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MplsTeAnnouncementDestBag) Reset()         { *m = MplsTeAnnouncementDestBag{} }
func (m *MplsTeAnnouncementDestBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeAnnouncementDestBag) ProtoMessage()    {}
func (*MplsTeAnnouncementDestBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_announcement_dest_bag_986d6640a5603280, []int{1}
}
func (m *MplsTeAnnouncementDestBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAnnouncementDestBag.Unmarshal(m, b)
}
func (m *MplsTeAnnouncementDestBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAnnouncementDestBag.Marshal(b, m, deterministic)
}
func (dst *MplsTeAnnouncementDestBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAnnouncementDestBag.Merge(dst, src)
}
func (m *MplsTeAnnouncementDestBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeAnnouncementDestBag.Size(m)
}
func (m *MplsTeAnnouncementDestBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAnnouncementDestBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAnnouncementDestBag proto.InternalMessageInfo

func (m *MplsTeAnnouncementDestBag) GetIgpType() string {
	if m != nil {
		return m.IgpType
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag) GetIgpInstance() string {
	if m != nil {
		return m.IgpInstance
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag) GetIgpArea() uint32 {
	if m != nil {
		return m.IgpArea
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag) GetAnnouncedTunnelsCount() uint32 {
	if m != nil {
		return m.AnnouncedTunnelsCount
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag) GetAutoroutedTunnelsCount() uint32 {
	if m != nil {
		return m.AutoroutedTunnelsCount
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag) GetForwardingAdjacencyTunnelsCount() uint32 {
	if m != nil {
		return m.ForwardingAdjacencyTunnelsCount
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag) GetAreaFormat() string {
	if m != nil {
		return m.AreaFormat
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag) GetTotalTunnels() []*MplsTeAutorouteBag {
	if m != nil {
		return m.TotalTunnels
	}
	return nil
}

// IGP area information including AFI
type MplsTeAreaAfiInfo struct {
	// The IGP Instance and Area ID
	IgpAreaId string `protobuf:"bytes,1,opt,name=igp_area_id,json=igpAreaId" json:"igp_area_id,omitempty"`
	// AFI
	Afi                  string   `protobuf:"bytes,2,opt,name=afi" json:"afi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAreaAfiInfo) Reset()         { *m = MplsTeAreaAfiInfo{} }
func (m *MplsTeAreaAfiInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAreaAfiInfo) ProtoMessage()    {}
func (*MplsTeAreaAfiInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_announcement_dest_bag_986d6640a5603280, []int{2}
}
func (m *MplsTeAreaAfiInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Unmarshal(m, b)
}
func (m *MplsTeAreaAfiInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAreaAfiInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAreaAfiInfo.Merge(dst, src)
}
func (m *MplsTeAreaAfiInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Size(m)
}
func (m *MplsTeAreaAfiInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAreaAfiInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAreaAfiInfo proto.InternalMessageInfo

func (m *MplsTeAreaAfiInfo) GetIgpAreaId() string {
	if m != nil {
		return m.IgpAreaId
	}
	return ""
}

func (m *MplsTeAreaAfiInfo) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

// MPLS TE Autoroute Information
type MplsTeAutorouteBag struct {
	// The tunnel name
	TunnelName string `protobuf:"bytes,1,opt,name=tunnel_name,json=tunnelName" json:"tunnel_name,omitempty"`
	// The tunnel signaled-name
	TunnelSigName string `protobuf:"bytes,2,opt,name=tunnel_sig_name,json=tunnelSigName" json:"tunnel_sig_name,omitempty"`
	// Tunnel loadshare
	TunnelLoadshare uint32 `protobuf:"varint,3,opt,name=tunnel_loadshare,json=tunnelLoadshare" json:"tunnel_loadshare,omitempty"`
	// Announcement type
	AnnounceType string `protobuf:"bytes,4,opt,name=announce_type,json=announceType" json:"announce_type,omitempty"`
	// Autoroute mode
	Mode string `protobuf:"bytes,5,opt,name=mode" json:"mode,omitempty"`
	// IGP metric
	IgpMetric int32 `protobuf:"zigzag32,6,opt,name=igp_metric,json=igpMetric" json:"igp_metric,omitempty"`
	// Hold time in seconds
	HoldTime uint32 `protobuf:"varint,7,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	// IGP Area Format
	AreaFormat string `protobuf:"bytes,8,opt,name=area_format,json=areaFormat" json:"area_format,omitempty"`
	// True if this is auto-tunnel mesh AA
	IsAutoMeshAa bool `protobuf:"varint,9,opt,name=is_auto_mesh_aa,json=isAutoMeshAa" json:"is_auto_mesh_aa,omitempty"`
	// True if this is a segment routing tunnel
	IsSr bool `protobuf:"varint,10,opt,name=is_sr,json=isSr" json:"is_sr,omitempty"`
	// True if this is a strict SID SR tunnel
	IsSrStrict bool `protobuf:"varint,11,opt,name=is_sr_strict,json=isSrStrict" json:"is_sr_strict,omitempty"`
	// MeshGroup ID for AA
	MeshGroupIdaa uint32 `protobuf:"varint,12,opt,name=mesh_group_idaa,json=meshGroupIdaa" json:"mesh_group_idaa,omitempty"`
	// List of IGPs to which it is announced
	IgPs                 []*MplsTeAreaAfiInfo `protobuf:"bytes,13,rep,name=ig_ps,json=igPs" json:"ig_ps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MplsTeAutorouteBag) Reset()         { *m = MplsTeAutorouteBag{} }
func (m *MplsTeAutorouteBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutorouteBag) ProtoMessage()    {}
func (*MplsTeAutorouteBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_announcement_dest_bag_986d6640a5603280, []int{3}
}
func (m *MplsTeAutorouteBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutorouteBag.Unmarshal(m, b)
}
func (m *MplsTeAutorouteBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutorouteBag.Marshal(b, m, deterministic)
}
func (dst *MplsTeAutorouteBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutorouteBag.Merge(dst, src)
}
func (m *MplsTeAutorouteBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutorouteBag.Size(m)
}
func (m *MplsTeAutorouteBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutorouteBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutorouteBag proto.InternalMessageInfo

func (m *MplsTeAutorouteBag) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetTunnelSigName() string {
	if m != nil {
		return m.TunnelSigName
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetTunnelLoadshare() uint32 {
	if m != nil {
		return m.TunnelLoadshare
	}
	return 0
}

func (m *MplsTeAutorouteBag) GetAnnounceType() string {
	if m != nil {
		return m.AnnounceType
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetIgpMetric() int32 {
	if m != nil {
		return m.IgpMetric
	}
	return 0
}

func (m *MplsTeAutorouteBag) GetHoldTime() uint32 {
	if m != nil {
		return m.HoldTime
	}
	return 0
}

func (m *MplsTeAutorouteBag) GetAreaFormat() string {
	if m != nil {
		return m.AreaFormat
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetIsAutoMeshAa() bool {
	if m != nil {
		return m.IsAutoMeshAa
	}
	return false
}

func (m *MplsTeAutorouteBag) GetIsSr() bool {
	if m != nil {
		return m.IsSr
	}
	return false
}

func (m *MplsTeAutorouteBag) GetIsSrStrict() bool {
	if m != nil {
		return m.IsSrStrict
	}
	return false
}

func (m *MplsTeAutorouteBag) GetMeshGroupIdaa() uint32 {
	if m != nil {
		return m.MeshGroupIdaa
	}
	return 0
}

func (m *MplsTeAutorouteBag) GetIgPs() []*MplsTeAreaAfiInfo {
	if m != nil {
		return m.IgPs
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeAnnouncementDestBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.announce_tunnels_info.all_autoroute_table.announce_dest.mpls_te_announcement_dest_bag_KEYS")
	proto.RegisterType((*MplsTeAnnouncementDestBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.announce_tunnels_info.all_autoroute_table.announce_dest.mpls_te_announcement_dest_bag")
	proto.RegisterType((*MplsTeAreaAfiInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.announce_tunnels_info.all_autoroute_table.announce_dest.mpls_te_area_afi_info")
	proto.RegisterType((*MplsTeAutorouteBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.announce_tunnels_info.all_autoroute_table.announce_dest.mpls_te_autoroute_bag")
}

func init() {
	proto.RegisterFile("mpls_te_announcement_dest_bag.proto", fileDescriptor_mpls_te_announcement_dest_bag_986d6640a5603280)
}

var fileDescriptor_mpls_te_announcement_dest_bag_986d6640a5603280 = []byte{
	// 674 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xd1, 0x6e, 0xd3, 0x4a,
	0x10, 0x95, 0x6f, 0x93, 0x36, 0x99, 0x24, 0x6a, 0xef, 0x56, 0xbd, 0x77, 0xef, 0x45, 0xa5, 0x21,
	0x15, 0x28, 0xbc, 0x04, 0xa9, 0x85, 0x52, 0x78, 0x8b, 0x10, 0xa0, 0xa8, 0x14, 0xa1, 0xa4, 0x2f,
	0x3c, 0xad, 0x26, 0xf6, 0xc6, 0x59, 0x64, 0xef, 0x5a, 0xde, 0x8d, 0x68, 0x3e, 0x82, 0x1f, 0x40,
	0xf0, 0x1d, 0xfc, 0x1e, 0xda, 0xb1, 0x9d, 0xa4, 0x45, 0xea, 0x1b, 0xbc, 0xd9, 0xe7, 0x9c, 0x39,
	0x3b, 0x33, 0x7b, 0x6c, 0x38, 0x4e, 0xb3, 0xc4, 0x0a, 0x27, 0x05, 0x6a, 0x6d, 0x16, 0x3a, 0x94,
	0xa9, 0xd4, 0x4e, 0x44, 0xd2, 0x3a, 0x31, 0xc5, 0x78, 0x90, 0xe5, 0xc6, 0x19, 0x86, 0xa1, 0xb2,
	0xa1, 0x11, 0xca, 0x58, 0x71, 0x9d, 0x8b, 0xaa, 0xc2, 0x64, 0x32, 0x1f, 0x54, 0x2f, 0xd6, 0xa1,
	0x8e, 0xa6, 0xcb, 0x41, 0x65, 0x23, 0xdc, 0x42, 0x6b, 0x99, 0x58, 0xa1, 0xf4, 0xcc, 0x0c, 0x30,
	0x49, 0x04, 0x2e, 0x9c, 0xc9, 0xcd, 0xc2, 0x49, 0xe1, 0x70, 0x9a, 0xc8, 0xb5, 0xd2, 0x1f, 0xd6,
	0xfb, 0x16, 0x40, 0xef, 0xce, 0x56, 0xc4, 0xc5, 0xeb, 0x8f, 0x13, 0xf6, 0x04, 0xf6, 0x3d, 0xa0,
	0x34, 0x3a, 0x65, 0xb4, 0xc0, 0x28, 0xca, 0xa5, 0xb5, 0x3c, 0xe8, 0x06, 0xfd, 0xe6, 0x98, 0x6d,
	0x50, 0xc3, 0x82, 0x61, 0xff, 0x43, 0x83, 0x66, 0x08, 0x4d, 0xc2, 0xff, 0x22, 0xd5, 0xea, 0x9d,
	0x31, 0xa8, 0x61, 0x2e, 0x91, 0x6f, 0x75, 0x83, 0x7e, 0x67, 0x4c, 0xcf, 0xec, 0x00, 0xb6, 0x55,
	0x9c, 0x09, 0x15, 0xf1, 0x1a, 0xa9, 0xeb, 0x2a, 0xce, 0x46, 0x51, 0xef, 0x6b, 0x0d, 0x0e, 0xef,
	0x6c, 0x8f, 0xfd, 0x07, 0x0d, 0x5f, 0xe8, 0x96, 0x99, 0xe4, 0x27, 0x54, 0xba, 0xa3, 0xe2, 0xec,
	0x6a, 0x99, 0x49, 0xf6, 0x00, 0xda, 0xe4, 0xa9, 0xfd, 0x92, 0x42, 0xc9, 0x4f, 0x89, 0x6e, 0x79,
	0xe7, 0x12, 0xaa, 0xaa, 0xa9, 0x9d, 0xa7, 0xd4, 0x8e, 0xaf, 0x1e, 0xfa, 0x8e, 0xba, 0xd0, 0xda,
	0x98, 0x8b, 0x3f, 0x2b, 0x8a, 0x37, 0x20, 0x76, 0x06, 0xff, 0x56, 0x3d, 0x45, 0xab, 0xbd, 0x87,
	0x66, 0xa1, 0x1d, 0x3f, 0x23, 0xaf, 0x83, 0x15, 0x7d, 0x55, 0xb0, 0xaf, 0x3c, 0xc9, 0xce, 0x81,
	0xaf, 0x2e, 0xe5, 0x76, 0xe1, 0x73, 0x2a, 0xfc, 0x67, 0xcd, 0xdf, 0xa8, 0xbc, 0x80, 0xde, 0xcc,
	0xe4, 0x9f, 0x31, 0x8f, 0x94, 0x8e, 0x05, 0x46, 0x9f, 0x30, 0x94, 0x3a, 0x5c, 0xde, 0xf2, 0x38,
	0x27, 0x8f, 0xa3, 0xb5, 0x72, 0x58, 0x09, 0x6f, 0x98, 0x1d, 0x41, 0xcb, 0xcf, 0x2d, 0x66, 0x26,
	0x4f, 0xd1, 0xf1, 0x17, 0x34, 0x20, 0x78, 0xe8, 0x0d, 0x21, 0xec, 0x7b, 0x00, 0x1d, 0x67, 0x1c,
	0x26, 0x95, 0x3f, 0x7f, 0xd9, 0xdd, 0xea, 0xb7, 0x4e, 0xae, 0x07, 0xbf, 0x3d, 0x97, 0x2b, 0x9f,
	0xb5, 0x6a, 0x8a, 0xf1, 0xb8, 0x4d, 0xed, 0x94, 0x53, 0xf4, 0x46, 0x70, 0xb0, 0x92, 0xf9, 0x41,
	0x70, 0xa6, 0xc8, 0x9e, 0xdd, 0x87, 0x56, 0x75, 0xab, 0x3e, 0x51, 0x45, 0x4a, 0x9b, 0xe5, 0xc5,
	0x8e, 0x22, 0xb6, 0x07, 0x5b, 0x38, 0x53, 0x65, 0x2e, 0xfd, 0x63, 0xef, 0x47, 0x6d, 0xc3, 0x6b,
	0xf3, 0x48, 0xbf, 0xa5, 0xa2, 0x75, 0xa1, 0x31, 0x95, 0xa5, 0x17, 0x14, 0xd0, 0x7b, 0x4c, 0x25,
	0x7b, 0x04, 0xbb, 0xa5, 0xc0, 0xaa, 0xb8, 0x10, 0x15, 0xc6, 0x9d, 0x02, 0x9e, 0xa8, 0x98, 0x74,
	0x8f, 0x61, 0xaf, 0xd4, 0x25, 0x06, 0x23, 0x3b, 0xc7, 0x5c, 0x96, 0x5f, 0x40, 0x59, 0xff, 0xae,
	0x82, 0xd9, 0x31, 0x74, 0xd6, 0x7b, 0xf3, 0xc1, 0x2e, 0xbe, 0x89, 0x76, 0x05, 0x52, 0xba, 0x19,
	0xd4, 0x52, 0x13, 0x49, 0x5e, 0x27, 0x8e, 0x9e, 0xd9, 0x21, 0x80, 0x1f, 0x3c, 0x95, 0x2e, 0x57,
	0x21, 0xdf, 0xee, 0x06, 0xfd, 0xbf, 0x69, 0xee, 0x4b, 0x02, 0xd8, 0x3d, 0x68, 0xce, 0x4d, 0x12,
	0x09, 0xa7, 0x52, 0xc9, 0x77, 0xe8, 0xec, 0x86, 0x07, 0xae, 0x54, 0x2a, 0x6f, 0xc7, 0xa1, 0xf1,
	0x4b, 0x1c, 0x1e, 0xc2, 0xae, 0xb2, 0xb4, 0x1d, 0x91, 0x4a, 0x3b, 0x17, 0x88, 0xbc, 0xd9, 0x0d,
	0xfa, 0x8d, 0x71, 0x5b, 0xd9, 0xe1, 0xc2, 0x99, 0x4b, 0x69, 0xe7, 0x43, 0x64, 0xfb, 0x50, 0x57,
	0x56, 0xd8, 0x9c, 0x03, 0x91, 0x35, 0x65, 0x27, 0x39, 0xeb, 0x42, 0x9b, 0x40, 0x61, 0x7d, 0x23,
	0x8e, 0xb7, 0x88, 0x03, 0xcf, 0x4d, 0x08, 0xf1, 0x6b, 0x24, 0xd7, 0x38, 0x37, 0x0b, 0xff, 0x1f,
	0x40, 0xe4, 0x6d, 0xea, 0xb0, 0xe3, 0xe1, 0xb7, 0x1e, 0x1d, 0x45, 0x88, 0xec, 0x4b, 0x00, 0x75,
	0x15, 0x8b, 0xcc, 0xf2, 0xce, 0x9f, 0x0f, 0xe3, 0x66, 0xca, 0xc6, 0x35, 0x15, 0x7f, 0xb0, 0xd3,
	0x6d, 0xfa, 0xad, 0x9d, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x97, 0xf3, 0x73, 0x0f, 0xd1, 0x05,
	0x00, 0x00,
}
