// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_meshgroup.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_auto_tunnel_mesh_mesh_groups_mesh_group

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TE Meshgroup info
type MplsTeMeshgroup_KEYS struct {
	MeshGroupId          uint32   `protobuf:"varint,1,opt,name=mesh_group_id,json=meshGroupId" json:"mesh_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMeshgroup_KEYS) Reset()         { *m = MplsTeMeshgroup_KEYS{} }
func (m *MplsTeMeshgroup_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeMeshgroup_KEYS) ProtoMessage()    {}
func (*MplsTeMeshgroup_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_meshgroup_a314c846cd5cd8a4, []int{0}
}
func (m *MplsTeMeshgroup_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMeshgroup_KEYS.Unmarshal(m, b)
}
func (m *MplsTeMeshgroup_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMeshgroup_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsTeMeshgroup_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMeshgroup_KEYS.Merge(dst, src)
}
func (m *MplsTeMeshgroup_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeMeshgroup_KEYS.Size(m)
}
func (m *MplsTeMeshgroup_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMeshgroup_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMeshgroup_KEYS proto.InternalMessageInfo

func (m *MplsTeMeshgroup_KEYS) GetMeshGroupId() uint32 {
	if m != nil {
		return m.MeshGroupId
	}
	return 0
}

type MplsTeMeshgroup struct {
	// Meshgroup ID
	MeshGroupId uint32 `protobuf:"varint,50,opt,name=mesh_group_id,json=meshGroupId" json:"mesh_group_id,omitempty"`
	// Is the meshgroup disabled
	IsMeshgroupDisabled bool `protobuf:"varint,51,opt,name=is_meshgroup_disabled,json=isMeshgroupDisabled" json:"is_meshgroup_disabled,omitempty"`
	// Attribute set name
	AttributeSetName string `protobuf:"bytes,52,opt,name=attribute_set_name,json=attributeSetName" json:"attribute_set_name,omitempty"`
	// Is any attribute-set associated to this meshgroup
	IsAttributeSetConfigured bool `protobuf:"varint,53,opt,name=is_attribute_set_configured,json=isAttributeSetConfigured" json:"is_attribute_set_configured,omitempty"`
	// Flag to indicate the existence of attribute set found in database
	IsAttributeSetInDb bool `protobuf:"varint,54,opt,name=is_attribute_set_in_db,json=isAttributeSetInDb" json:"is_attribute_set_in_db,omitempty"`
	// Destination List name
	DestinationListName string `protobuf:"bytes,55,opt,name=destination_list_name,json=destinationListName" json:"destination_list_name,omitempty"`
	// Is any destiantion-list associated to this meshgroup
	IsDestinationListConfigured bool `protobuf:"varint,56,opt,name=is_destination_list_configured,json=isDestinationListConfigured" json:"is_destination_list_configured,omitempty"`
	// Type of the  destlist
	DestinationListType string `protobuf:"bytes,57,opt,name=destination_list_type,json=destinationListType" json:"destination_list_type,omitempty"`
	// Remaining time for recreate timer in seconds
	RemainingTime uint32 `protobuf:"varint,58,opt,name=remaining_time,json=remainingTime" json:"remaining_time,omitempty"`
	// List of destinations for this meshgroup
	DestinationList []*MplsTeMeshgroupDest `protobuf:"bytes,59,rep,name=destination_list,json=destinationList" json:"destination_list,omitempty"`
	// Total number of automesh tunnels
	AutoMeshTunnels uint32 `protobuf:"varint,60,opt,name=auto_mesh_tunnels,json=autoMeshTunnels" json:"auto_mesh_tunnels,omitempty"`
	// Total number of destinations
	AutoMeshTotalDestinations uint32 `protobuf:"varint,61,opt,name=auto_mesh_total_destinations,json=autoMeshTotalDestinations" json:"auto_mesh_total_destinations,omitempty"`
	// Total number of automesh tunnels that are up
	UpAutoMeshTunnels uint32 `protobuf:"varint,62,opt,name=up_auto_mesh_tunnels,json=upAutoMeshTunnels" json:"up_auto_mesh_tunnels,omitempty"`
	// Total number of automesh tunnels that are down
	DownAutoMeshTunnels uint32 `protobuf:"varint,63,opt,name=down_auto_mesh_tunnels,json=downAutoMeshTunnels" json:"down_auto_mesh_tunnels,omitempty"`
	// Total number of automesh tunnels that are FRR enabled
	FrrAutoMeshTunnels uint32 `protobuf:"varint,64,opt,name=frr_auto_mesh_tunnels,json=frrAutoMeshTunnels" json:"frr_auto_mesh_tunnels,omitempty"`
	// Meshgroup Type
	AutoMeshGroupType    string   `protobuf:"bytes,65,opt,name=auto_mesh_group_type,json=autoMeshGroupType" json:"auto_mesh_group_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMeshgroup) Reset()         { *m = MplsTeMeshgroup{} }
func (m *MplsTeMeshgroup) String() string { return proto.CompactTextString(m) }
func (*MplsTeMeshgroup) ProtoMessage()    {}
func (*MplsTeMeshgroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_meshgroup_a314c846cd5cd8a4, []int{1}
}
func (m *MplsTeMeshgroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMeshgroup.Unmarshal(m, b)
}
func (m *MplsTeMeshgroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMeshgroup.Marshal(b, m, deterministic)
}
func (dst *MplsTeMeshgroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMeshgroup.Merge(dst, src)
}
func (m *MplsTeMeshgroup) XXX_Size() int {
	return xxx_messageInfo_MplsTeMeshgroup.Size(m)
}
func (m *MplsTeMeshgroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMeshgroup.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMeshgroup proto.InternalMessageInfo

func (m *MplsTeMeshgroup) GetMeshGroupId() uint32 {
	if m != nil {
		return m.MeshGroupId
	}
	return 0
}

func (m *MplsTeMeshgroup) GetIsMeshgroupDisabled() bool {
	if m != nil {
		return m.IsMeshgroupDisabled
	}
	return false
}

func (m *MplsTeMeshgroup) GetAttributeSetName() string {
	if m != nil {
		return m.AttributeSetName
	}
	return ""
}

func (m *MplsTeMeshgroup) GetIsAttributeSetConfigured() bool {
	if m != nil {
		return m.IsAttributeSetConfigured
	}
	return false
}

func (m *MplsTeMeshgroup) GetIsAttributeSetInDb() bool {
	if m != nil {
		return m.IsAttributeSetInDb
	}
	return false
}

func (m *MplsTeMeshgroup) GetDestinationListName() string {
	if m != nil {
		return m.DestinationListName
	}
	return ""
}

func (m *MplsTeMeshgroup) GetIsDestinationListConfigured() bool {
	if m != nil {
		return m.IsDestinationListConfigured
	}
	return false
}

func (m *MplsTeMeshgroup) GetDestinationListType() string {
	if m != nil {
		return m.DestinationListType
	}
	return ""
}

func (m *MplsTeMeshgroup) GetRemainingTime() uint32 {
	if m != nil {
		return m.RemainingTime
	}
	return 0
}

func (m *MplsTeMeshgroup) GetDestinationList() []*MplsTeMeshgroupDest {
	if m != nil {
		return m.DestinationList
	}
	return nil
}

func (m *MplsTeMeshgroup) GetAutoMeshTunnels() uint32 {
	if m != nil {
		return m.AutoMeshTunnels
	}
	return 0
}

func (m *MplsTeMeshgroup) GetAutoMeshTotalDestinations() uint32 {
	if m != nil {
		return m.AutoMeshTotalDestinations
	}
	return 0
}

func (m *MplsTeMeshgroup) GetUpAutoMeshTunnels() uint32 {
	if m != nil {
		return m.UpAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeMeshgroup) GetDownAutoMeshTunnels() uint32 {
	if m != nil {
		return m.DownAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeMeshgroup) GetFrrAutoMeshTunnels() uint32 {
	if m != nil {
		return m.FrrAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeMeshgroup) GetAutoMeshGroupType() string {
	if m != nil {
		return m.AutoMeshGroupType
	}
	return ""
}

// Statistics - count and timestamp on an item
type MplsTeStatItemT struct {
	// Number of occurence
	Count uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	// Timestamp, when occured last
	LastTimeItOccured    uint32   `protobuf:"varint,2,opt,name=last_time_it_occured,json=lastTimeItOccured" json:"last_time_it_occured,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeStatItemT) Reset()         { *m = MplsTeStatItemT{} }
func (m *MplsTeStatItemT) String() string { return proto.CompactTextString(m) }
func (*MplsTeStatItemT) ProtoMessage()    {}
func (*MplsTeStatItemT) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_meshgroup_a314c846cd5cd8a4, []int{2}
}
func (m *MplsTeStatItemT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeStatItemT.Unmarshal(m, b)
}
func (m *MplsTeStatItemT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeStatItemT.Marshal(b, m, deterministic)
}
func (dst *MplsTeStatItemT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeStatItemT.Merge(dst, src)
}
func (m *MplsTeStatItemT) XXX_Size() int {
	return xxx_messageInfo_MplsTeStatItemT.Size(m)
}
func (m *MplsTeStatItemT) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeStatItemT.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeStatItemT proto.InternalMessageInfo

func (m *MplsTeStatItemT) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *MplsTeStatItemT) GetLastTimeItOccured() uint32 {
	if m != nil {
		return m.LastTimeItOccured
	}
	return 0
}

// Statistics of all types of item operations and timestamps
type MplsTeStatsItemT struct {
	// Statistics on all types of operation on an item
	ItemStatistics       []*MplsTeStatItemT `protobuf:"bytes,1,rep,name=item_statistics,json=itemStatistics" json:"item_statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MplsTeStatsItemT) Reset()         { *m = MplsTeStatsItemT{} }
func (m *MplsTeStatsItemT) String() string { return proto.CompactTextString(m) }
func (*MplsTeStatsItemT) ProtoMessage()    {}
func (*MplsTeStatsItemT) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_meshgroup_a314c846cd5cd8a4, []int{3}
}
func (m *MplsTeStatsItemT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeStatsItemT.Unmarshal(m, b)
}
func (m *MplsTeStatsItemT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeStatsItemT.Marshal(b, m, deterministic)
}
func (dst *MplsTeStatsItemT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeStatsItemT.Merge(dst, src)
}
func (m *MplsTeStatsItemT) XXX_Size() int {
	return xxx_messageInfo_MplsTeStatsItemT.Size(m)
}
func (m *MplsTeStatsItemT) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeStatsItemT.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeStatsItemT proto.InternalMessageInfo

func (m *MplsTeStatsItemT) GetItemStatistics() []*MplsTeStatItemT {
	if m != nil {
		return m.ItemStatistics
	}
	return nil
}

// Statistics of all types of timer operations and timestamps
type MplsTeStatsTimerT struct {
	// Statistics on all types of operation on a timer
	TimerStatistics      []*MplsTeStatItemT `protobuf:"bytes,1,rep,name=timer_statistics,json=timerStatistics" json:"timer_statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MplsTeStatsTimerT) Reset()         { *m = MplsTeStatsTimerT{} }
func (m *MplsTeStatsTimerT) String() string { return proto.CompactTextString(m) }
func (*MplsTeStatsTimerT) ProtoMessage()    {}
func (*MplsTeStatsTimerT) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_meshgroup_a314c846cd5cd8a4, []int{4}
}
func (m *MplsTeStatsTimerT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeStatsTimerT.Unmarshal(m, b)
}
func (m *MplsTeStatsTimerT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeStatsTimerT.Marshal(b, m, deterministic)
}
func (dst *MplsTeStatsTimerT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeStatsTimerT.Merge(dst, src)
}
func (m *MplsTeStatsTimerT) XXX_Size() int {
	return xxx_messageInfo_MplsTeStatsTimerT.Size(m)
}
func (m *MplsTeStatsTimerT) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeStatsTimerT.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeStatsTimerT proto.InternalMessageInfo

func (m *MplsTeStatsTimerT) GetTimerStatistics() []*MplsTeStatItemT {
	if m != nil {
		return m.TimerStatistics
	}
	return nil
}

// TE Meshgroup destination info
type MplsTeMeshgroupDest struct {
	// Destination address
	DestinationAddress string `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// Tunnel ID
	TunnelId uint32 `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	// Tunnel operational status
	OperationalStatus string `protobuf:"bytes,3,opt,name=operational_status,json=operationalStatus" json:"operational_status,omitempty"`
	// Remaining time for unused timer in seconds
	RemainingTime        uint32   `protobuf:"varint,4,opt,name=remaining_time,json=remainingTime" json:"remaining_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMeshgroupDest) Reset()         { *m = MplsTeMeshgroupDest{} }
func (m *MplsTeMeshgroupDest) String() string { return proto.CompactTextString(m) }
func (*MplsTeMeshgroupDest) ProtoMessage()    {}
func (*MplsTeMeshgroupDest) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_meshgroup_a314c846cd5cd8a4, []int{5}
}
func (m *MplsTeMeshgroupDest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMeshgroupDest.Unmarshal(m, b)
}
func (m *MplsTeMeshgroupDest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMeshgroupDest.Marshal(b, m, deterministic)
}
func (dst *MplsTeMeshgroupDest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMeshgroupDest.Merge(dst, src)
}
func (m *MplsTeMeshgroupDest) XXX_Size() int {
	return xxx_messageInfo_MplsTeMeshgroupDest.Size(m)
}
func (m *MplsTeMeshgroupDest) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMeshgroupDest.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMeshgroupDest proto.InternalMessageInfo

func (m *MplsTeMeshgroupDest) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeMeshgroupDest) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *MplsTeMeshgroupDest) GetOperationalStatus() string {
	if m != nil {
		return m.OperationalStatus
	}
	return ""
}

func (m *MplsTeMeshgroupDest) GetRemainingTime() uint32 {
	if m != nil {
		return m.RemainingTime
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsTeMeshgroup_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_meshgroup_KEYS")
	proto.RegisterType((*MplsTeMeshgroup)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_meshgroup")
	proto.RegisterType((*MplsTeStatItemT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_stat_item_t")
	proto.RegisterType((*MplsTeStatsItemT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_stats_item_t")
	proto.RegisterType((*MplsTeStatsTimerT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_stats_timer_t")
	proto.RegisterType((*MplsTeMeshgroupDest)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_meshgroup_dest")
}

func init() {
	proto.RegisterFile("mpls_te_meshgroup.proto", fileDescriptor_mpls_te_meshgroup_a314c846cd5cd8a4)
}

var fileDescriptor_mpls_te_meshgroup_a314c846cd5cd8a4 = []byte{
	// 668 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x95, 0xeb, 0x6a, 0x13, 0x41,
	0x14, 0xc7, 0x59, 0xeb, 0xa5, 0x3d, 0xa5, 0x4d, 0x33, 0x49, 0xeb, 0x4a, 0x45, 0x42, 0x40, 0x08,
	0xa2, 0x29, 0xa6, 0xde, 0x6d, 0xad, 0xa1, 0x15, 0x09, 0xde, 0x30, 0xe9, 0x17, 0x41, 0x18, 0x36,
	0xd9, 0x49, 0x3d, 0xb0, 0xbb, 0xb3, 0xcc, 0xcc, 0xa2, 0x7d, 0x0a, 0x11, 0x7c, 0x08, 0x41, 0xf0,
	0x09, 0x7c, 0x38, 0x99, 0x33, 0x4d, 0x3a, 0xc9, 0xe6, 0xa3, 0xe2, 0x97, 0x76, 0xf6, 0xfc, 0xe7,
	0x77, 0x2e, 0x73, 0xce, 0x4c, 0xe0, 0x6a, 0x9a, 0x27, 0x9a, 0x1b, 0xc1, 0x53, 0xa1, 0x3f, 0x9d,
	0x28, 0x59, 0xe4, 0xed, 0x5c, 0x49, 0x23, 0xd9, 0xfb, 0x11, 0xea, 0x91, 0xe4, 0x28, 0x35, 0xff,
	0xa2, 0xf8, 0x64, 0x97, 0xcc, 0x85, 0x6a, 0x4f, 0x3e, 0xb4, 0x89, 0xb2, 0x78, 0x78, 0xda, 0x8e,
	0x0a, 0x23, 0xb9, 0x29, 0xb2, 0x4c, 0x24, 0x6d, 0xeb, 0x86, 0xfe, 0x70, 0x72, 0xa6, 0xbd, 0x75,
	0x73, 0x0f, 0xb6, 0x4a, 0xd1, 0xf8, 0xab, 0x17, 0x1f, 0x06, 0xac, 0x09, 0x6b, 0xe7, 0xfb, 0x38,
	0xc6, 0x61, 0xd0, 0x08, 0x5a, 0x6b, 0xfd, 0x55, 0x6b, 0x7c, 0x69, 0x6d, 0xbd, 0xb8, 0xf9, 0xeb,
	0x0a, 0x54, 0x4b, 0x78, 0x99, 0xec, 0x94, 0x48, 0xd6, 0x81, 0x4d, 0xd4, 0x5e, 0xc8, 0x18, 0x75,
	0x34, 0x4c, 0x44, 0x1c, 0xee, 0x36, 0x82, 0xd6, 0x72, 0xbf, 0x86, 0xfa, 0xcd, 0x44, 0x3b, 0x3a,
	0x93, 0xd8, 0x6d, 0x60, 0x91, 0x31, 0x0a, 0x87, 0x85, 0x2d, 0x54, 0x18, 0x9e, 0x45, 0xa9, 0x08,
	0xef, 0x35, 0x82, 0xd6, 0x4a, 0x7f, 0x63, 0xaa, 0x0c, 0x84, 0x79, 0x1b, 0xa5, 0x82, 0xed, 0xc3,
	0x36, 0x6a, 0x3e, 0x0b, 0x8c, 0x64, 0x36, 0xc6, 0x93, 0x42, 0x89, 0x38, 0xbc, 0x4f, 0x71, 0x42,
	0xd4, 0x5d, 0x0f, 0x3c, 0x9c, 0xea, 0xac, 0x03, 0x5b, 0x25, 0x1c, 0x33, 0x1e, 0x0f, 0xc3, 0x07,
	0x44, 0xb2, 0x59, 0xb2, 0x97, 0x1d, 0x0d, 0x6d, 0x51, 0xb1, 0xd0, 0x06, 0xb3, 0xc8, 0xa0, 0xcc,
	0x78, 0x82, 0xfa, 0x2c, 0xc7, 0x87, 0x94, 0x63, 0xcd, 0x13, 0x5f, 0xa3, 0x76, 0x69, 0x1e, 0xc2,
	0x0d, 0xd4, 0xbc, 0x84, 0x79, 0x99, 0x3e, 0xa2, 0x78, 0xdb, 0xa8, 0x8f, 0x66, 0xf1, 0x99, 0x64,
	0xcb, 0x81, 0xcd, 0x69, 0x2e, 0xc2, 0xc7, 0x0b, 0x03, 0x1f, 0x9f, 0xe6, 0x82, 0xdd, 0x84, 0x75,
	0x25, 0xd2, 0x08, 0x33, 0xcc, 0x4e, 0xb8, 0xc1, 0x54, 0x84, 0x4f, 0xa8, 0x4d, 0x6b, 0x53, 0xeb,
	0x31, 0xa6, 0x82, 0x7d, 0x0f, 0x60, 0x63, 0xde, 0x77, 0xf8, 0xb4, 0xb1, 0xd4, 0x5a, 0xed, 0x60,
	0xfb, 0xaf, 0xcf, 0x63, 0xbb, 0x3c, 0x8c, 0x36, 0x78, 0xbf, 0x32, 0x57, 0x01, 0xbb, 0x05, 0x55,
	0x72, 0x49, 0xa8, 0xf3, 0xab, 0xc3, 0x3d, 0x2a, 0xa0, 0x62, 0x05, 0x3b, 0x3d, 0xc7, 0xce, 0xcc,
	0x0e, 0xe0, 0xba, 0xb7, 0x57, 0x9a, 0x28, 0xf1, 0xcf, 0x5b, 0x87, 0xfb, 0x84, 0x5d, 0x9b, 0x62,
	0x76, 0x87, 0x77, 0xd6, 0x9a, 0xed, 0x40, 0xbd, 0xc8, 0x79, 0x39, 0xde, 0x33, 0x02, 0xab, 0x45,
	0xde, 0x9d, 0x8b, 0xb8, 0x0b, 0x5b, 0xb1, 0xfc, 0x9c, 0x2d, 0x40, 0x0e, 0x08, 0xa9, 0x59, 0x75,
	0x1e, 0xba, 0x0b, 0x9b, 0x63, 0xa5, 0x16, 0x30, 0xcf, 0x89, 0x61, 0x63, 0xa5, 0xe6, 0x91, 0x1d,
	0xa8, 0x9f, 0x6f, 0x77, 0xc7, 0x45, 0x6d, 0xef, 0x52, 0xdb, 0xab, 0x93, 0x8a, 0xe8, 0xd2, 0xd9,
	0xa6, 0x37, 0x3f, 0x42, 0xcd, 0xeb, 0x8c, 0xe1, 0x68, 0x44, 0xca, 0x0d, 0xab, 0xc3, 0xa5, 0x91,
	0x2c, 0x32, 0x73, 0x76, 0xc7, 0xdd, 0x87, 0xf5, 0x9e, 0x44, 0x76, 0x92, 0x30, 0x15, 0x1c, 0x0d,
	0x97, 0xa3, 0x11, 0x0d, 0xe4, 0x05, 0x57, 0xb6, 0xd5, 0xec, 0x88, 0xf4, 0xcc, 0x3b, 0x27, 0x34,
	0x7f, 0x04, 0x50, 0xf7, 0xdd, 0xeb, 0x89, 0xff, 0xaf, 0x01, 0x54, 0x68, 0x69, 0xad, 0xa8, 0x0d,
	0x8e, 0x74, 0x18, 0xd0, 0x0c, 0x8d, 0xff, 0xe1, 0x0c, 0x79, 0x15, 0xf6, 0xd7, 0xed, 0xff, 0xc1,
	0x34, 0x7a, 0xf3, 0x67, 0x00, 0x9b, 0xb3, 0xa9, 0xda, 0x2a, 0x15, 0x37, 0xec, 0x5b, 0x00, 0x1b,
	0x6e, 0xfd, 0xdf, 0x92, 0xad, 0x50, 0x7c, 0x2f, 0xdb, 0xdf, 0xc1, 0xa2, 0x67, 0xda, 0x0e, 0x31,
	0xdb, 0x01, 0xff, 0x76, 0xf3, 0x28, 0x8e, 0x95, 0xd0, 0x9a, 0x1a, 0xb9, 0xd2, 0x67, 0x9e, 0xd4,
	0x75, 0x0a, 0xdb, 0x86, 0x15, 0x97, 0x96, 0x7d, 0x99, 0x5d, 0x2b, 0x97, 0x9d, 0xa1, 0x17, 0xb3,
	0x3b, 0xc0, 0x6c, 0x35, 0x04, 0x44, 0x09, 0x25, 0x55, 0xe8, 0x70, 0xc9, 0x8d, 0x93, 0xa7, 0x0c,
	0x48, 0x58, 0xf0, 0x86, 0x5c, 0x5c, 0xf0, 0x86, 0x0c, 0x2f, 0xd3, 0xcf, 0xd7, 0xee, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x2d, 0x57, 0x74, 0xac, 0xd9, 0x06, 0x00, 0x00,
}
