// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_head_bfd_vif_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_bfd_head_infos_head_info

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TE Head End Tunnel BFD Info
type MplsTeHeadBfdVifInfo_KEYS struct {
	TunnelName           string   `protobuf:"bytes,1,opt,name=tunnel_name,json=tunnelName" json:"tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeHeadBfdVifInfo_KEYS) Reset()         { *m = MplsTeHeadBfdVifInfo_KEYS{} }
func (m *MplsTeHeadBfdVifInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeHeadBfdVifInfo_KEYS) ProtoMessage()    {}
func (*MplsTeHeadBfdVifInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_head_bfd_vif_info_a1c8ca5ed49da992, []int{0}
}
func (m *MplsTeHeadBfdVifInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeHeadBfdVifInfo_KEYS.Unmarshal(m, b)
}
func (m *MplsTeHeadBfdVifInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeHeadBfdVifInfo_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsTeHeadBfdVifInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeHeadBfdVifInfo_KEYS.Merge(dst, src)
}
func (m *MplsTeHeadBfdVifInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeHeadBfdVifInfo_KEYS.Size(m)
}
func (m *MplsTeHeadBfdVifInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeHeadBfdVifInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeHeadBfdVifInfo_KEYS proto.InternalMessageInfo

func (m *MplsTeHeadBfdVifInfo_KEYS) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

type MplsTeHeadBfdVifInfo struct {
	// Tunnel name
	TunnelName string `protobuf:"bytes,50,opt,name=tunnel_name,json=tunnelName" json:"tunnel_name,omitempty"`
	// Destination Address
	DestinationAddress string `protobuf:"bytes,51,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// Current LSP BFD Info
	CurrentLspbfdInfo *MplsTeHeadBfdLspInfo `protobuf:"bytes,52,opt,name=current_lspbfd_info,json=currentLspbfdInfo" json:"current_lspbfd_info,omitempty"`
	// Standby LSP BFD Info
	StandbyLspbfdInfo *MplsTeHeadBfdLspInfo `protobuf:"bytes,53,opt,name=standby_lspbfd_info,json=standbyLspbfdInfo" json:"standby_lspbfd_info,omitempty"`
	// Reoptimized LSP BFD Info
	ReoptimizedLspbfdInfo *MplsTeHeadBfdLspInfo `protobuf:"bytes,54,opt,name=reoptimized_lspbfd_info,json=reoptimizedLspbfdInfo" json:"reoptimized_lspbfd_info,omitempty"`
	// LSP BFD type
	LspbfdType           string   `protobuf:"bytes,55,opt,name=lspbfd_type,json=lspbfdType" json:"lspbfd_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeHeadBfdVifInfo) Reset()         { *m = MplsTeHeadBfdVifInfo{} }
func (m *MplsTeHeadBfdVifInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeHeadBfdVifInfo) ProtoMessage()    {}
func (*MplsTeHeadBfdVifInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_head_bfd_vif_info_a1c8ca5ed49da992, []int{1}
}
func (m *MplsTeHeadBfdVifInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeHeadBfdVifInfo.Unmarshal(m, b)
}
func (m *MplsTeHeadBfdVifInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeHeadBfdVifInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeHeadBfdVifInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeHeadBfdVifInfo.Merge(dst, src)
}
func (m *MplsTeHeadBfdVifInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeHeadBfdVifInfo.Size(m)
}
func (m *MplsTeHeadBfdVifInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeHeadBfdVifInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeHeadBfdVifInfo proto.InternalMessageInfo

func (m *MplsTeHeadBfdVifInfo) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

func (m *MplsTeHeadBfdVifInfo) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeHeadBfdVifInfo) GetCurrentLspbfdInfo() *MplsTeHeadBfdLspInfo {
	if m != nil {
		return m.CurrentLspbfdInfo
	}
	return nil
}

func (m *MplsTeHeadBfdVifInfo) GetStandbyLspbfdInfo() *MplsTeHeadBfdLspInfo {
	if m != nil {
		return m.StandbyLspbfdInfo
	}
	return nil
}

func (m *MplsTeHeadBfdVifInfo) GetReoptimizedLspbfdInfo() *MplsTeHeadBfdLspInfo {
	if m != nil {
		return m.ReoptimizedLspbfdInfo
	}
	return nil
}

func (m *MplsTeHeadBfdVifInfo) GetLspbfdType() string {
	if m != nil {
		return m.LspbfdType
	}
	return ""
}

// TE Head End BFDOverLSP Info
type MplsTeHeadBfdLspInfo struct {
	// LSP ID
	LspId uint32 `protobuf:"varint,1,opt,name=lsp_id,json=lspId" json:"lsp_id,omitempty"`
	// BFD Session State
	BfdSessionState      string   `protobuf:"bytes,2,opt,name=bfd_session_state,json=bfdSessionState" json:"bfd_session_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeHeadBfdLspInfo) Reset()         { *m = MplsTeHeadBfdLspInfo{} }
func (m *MplsTeHeadBfdLspInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeHeadBfdLspInfo) ProtoMessage()    {}
func (*MplsTeHeadBfdLspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_head_bfd_vif_info_a1c8ca5ed49da992, []int{2}
}
func (m *MplsTeHeadBfdLspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeHeadBfdLspInfo.Unmarshal(m, b)
}
func (m *MplsTeHeadBfdLspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeHeadBfdLspInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeHeadBfdLspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeHeadBfdLspInfo.Merge(dst, src)
}
func (m *MplsTeHeadBfdLspInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeHeadBfdLspInfo.Size(m)
}
func (m *MplsTeHeadBfdLspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeHeadBfdLspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeHeadBfdLspInfo proto.InternalMessageInfo

func (m *MplsTeHeadBfdLspInfo) GetLspId() uint32 {
	if m != nil {
		return m.LspId
	}
	return 0
}

func (m *MplsTeHeadBfdLspInfo) GetBfdSessionState() string {
	if m != nil {
		return m.BfdSessionState
	}
	return ""
}

func init() {
	proto.RegisterType((*MplsTeHeadBfdVifInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.bfd.head_infos.head_info.mpls_te_head_bfd_vif_info_KEYS")
	proto.RegisterType((*MplsTeHeadBfdVifInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.bfd.head_infos.head_info.mpls_te_head_bfd_vif_info")
	proto.RegisterType((*MplsTeHeadBfdLspInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.bfd.head_infos.head_info.mpls_te_head_bfd_lsp_info")
}

func init() {
	proto.RegisterFile("mpls_te_head_bfd_vif_info.proto", fileDescriptor_mpls_te_head_bfd_vif_info_a1c8ca5ed49da992)
}

var fileDescriptor_mpls_te_head_bfd_vif_info_a1c8ca5ed49da992 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xcf, 0x4a, 0x2b, 0x31,
	0x14, 0xc6, 0x99, 0xcb, 0xbd, 0x85, 0x9b, 0x22, 0xd2, 0x94, 0xe2, 0xb8, 0xb1, 0xa5, 0xab, 0xe2,
	0x62, 0x84, 0xd6, 0x3f, 0xeb, 0x0a, 0x2e, 0x8a, 0xe2, 0xa2, 0x75, 0xe3, 0x42, 0x43, 0xa6, 0x39,
	0x83, 0x81, 0x99, 0x24, 0xe4, 0xa4, 0x62, 0x7d, 0x07, 0x97, 0xbe, 0x92, 0xcf, 0x25, 0xc9, 0x4c,
	0x71, 0x5a, 0xed, 0x4a, 0xe8, 0x2e, 0x73, 0xfe, 0x7c, 0xdf, 0x2f, 0xc3, 0x17, 0xd2, 0x2d, 0x4c,
	0x8e, 0xcc, 0x01, 0x7b, 0x02, 0x2e, 0x58, 0x9a, 0x09, 0xf6, 0x2c, 0x33, 0x26, 0x55, 0xa6, 0x13,
	0x63, 0xb5, 0xd3, 0xf4, 0x72, 0x2e, 0x71, 0xae, 0x99, 0xd4, 0xc8, 0x5e, 0x2c, 0x5b, 0x4d, 0x6b,
	0x03, 0x36, 0x59, 0x7d, 0xa0, 0xe3, 0x4a, 0xa4, 0xcb, 0x24, 0xcd, 0x44, 0x12, 0x64, 0xfc, 0x3a,
	0x7e, 0x1d, 0xfb, 0x63, 0x72, 0xb4, 0xd5, 0x86, 0x5d, 0x5f, 0xdd, 0xcf, 0x68, 0x97, 0x34, 0xdd,
	0x42, 0x29, 0xc8, 0x99, 0xe2, 0x05, 0xc4, 0x51, 0x2f, 0x1a, 0xfc, 0x9f, 0x92, 0xb2, 0x74, 0xcb,
	0x0b, 0xe8, 0x7f, 0xfc, 0x25, 0x87, 0x5b, 0x35, 0x36, 0xd7, 0x87, 0x9b, 0xeb, 0xf4, 0x84, 0xb4,
	0x05, 0xa0, 0x93, 0x8a, 0x3b, 0xa9, 0x15, 0xe3, 0x42, 0x58, 0x40, 0x8c, 0x47, 0x61, 0x90, 0xd6,
	0x5a, 0xe3, 0xb2, 0x43, 0xdf, 0x22, 0xd2, 0x9e, 0x2f, 0xac, 0x05, 0xe5, 0x58, 0x8e, 0xc6, 0xbb,
	0x79, 0xa7, 0xf8, 0xb4, 0x17, 0x0d, 0x9a, 0xc3, 0x87, 0xe4, 0xf7, 0x7f, 0x25, 0xf9, 0x76, 0x9d,
	0x1c, 0x4d, 0xe8, 0x4c, 0x5b, 0x95, 0xf3, 0x4d, 0x30, 0x9e, 0xf8, 0x1b, 0x7a, 0x9e, 0x4a, 0x71,
	0x8d, 0xe7, 0x6c, 0x27, 0x3c, 0xd5, 0x6e, 0x8d, 0xe7, 0x3d, 0x22, 0x07, 0x16, 0xb4, 0x71, 0xb2,
	0x90, 0xaf, 0x20, 0xd6, 0x98, 0xce, 0x77, 0xc1, 0xd4, 0xa9, 0xb9, 0xd7, 0xb8, 0xba, 0xa4, 0x59,
	0xa1, 0xb8, 0xa5, 0x81, 0xf8, 0xa2, 0x4c, 0x42, 0x59, 0xba, 0x5b, 0x1a, 0xe8, 0x3f, 0xfe, 0x90,
	0xa3, 0x95, 0x28, 0xed, 0x90, 0x46, 0x38, 0x8b, 0x90, 0xc0, 0xbd, 0xe9, 0xbf, 0x1c, 0xcd, 0x44,
	0xd0, 0x63, 0xd2, 0xf2, 0x63, 0x08, 0x88, 0x3e, 0x3d, 0xe8, 0xb8, 0x83, 0xf8, 0x4f, 0x90, 0xde,
	0x4f, 0x33, 0x31, 0x2b, 0xeb, 0x33, 0x5f, 0x4e, 0x1b, 0xe1, 0xd9, 0x8c, 0x3e, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x89, 0x5f, 0x45, 0xe9, 0x59, 0x03, 0x00, 0x00,
}
