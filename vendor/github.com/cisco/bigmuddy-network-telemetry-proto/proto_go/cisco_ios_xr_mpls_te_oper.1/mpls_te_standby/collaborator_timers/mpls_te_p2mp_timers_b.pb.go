// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_p2mp_timers_b.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_collaborator_timers

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Description of P2MP timers
type MplsTeP2MpTimersB_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeP2MpTimersB_KEYS) Reset()         { *m = MplsTeP2MpTimersB_KEYS{} }
func (m *MplsTeP2MpTimersB_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpTimersB_KEYS) ProtoMessage()    {}
func (*MplsTeP2MpTimersB_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_p2mp_timers_b_a9943e0c69f44a21, []int{0}
}
func (m *MplsTeP2MpTimersB_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpTimersB_KEYS.Unmarshal(m, b)
}
func (m *MplsTeP2MpTimersB_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpTimersB_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsTeP2MpTimersB_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpTimersB_KEYS.Merge(dst, src)
}
func (m *MplsTeP2MpTimersB_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpTimersB_KEYS.Size(m)
}
func (m *MplsTeP2MpTimersB_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpTimersB_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpTimersB_KEYS proto.InternalMessageInfo

type MplsTeP2MpTimersB struct {
	// Description of all P2MP timers
	P2MpTimers           []*MplsTeP2MpTimerB `protobuf:"bytes,50,rep,name=p2_mp_timers,json=p2MpTimers" json:"p2_mp_timers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MplsTeP2MpTimersB) Reset()         { *m = MplsTeP2MpTimersB{} }
func (m *MplsTeP2MpTimersB) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpTimersB) ProtoMessage()    {}
func (*MplsTeP2MpTimersB) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_p2mp_timers_b_a9943e0c69f44a21, []int{1}
}
func (m *MplsTeP2MpTimersB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpTimersB.Unmarshal(m, b)
}
func (m *MplsTeP2MpTimersB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpTimersB.Marshal(b, m, deterministic)
}
func (dst *MplsTeP2MpTimersB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpTimersB.Merge(dst, src)
}
func (m *MplsTeP2MpTimersB) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpTimersB.Size(m)
}
func (m *MplsTeP2MpTimersB) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpTimersB.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpTimersB proto.InternalMessageInfo

func (m *MplsTeP2MpTimersB) GetP2MpTimers() []*MplsTeP2MpTimerB {
	if m != nil {
		return m.P2MpTimers
	}
	return nil
}

// Description of a P2MP timer
type MplsTeP2MpTimerB struct {
	// Timer Type
	TimerType string `protobuf:"bytes,1,opt,name=timer_type,json=timerType" json:"timer_type,omitempty"`
	// Timer Name
	TimerName string `protobuf:"bytes,2,opt,name=timer_name,json=timerName" json:"timer_name,omitempty"`
	// Date when timer was last started in seconds
	StartTime uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// Date when the timer last expired in seconds
	ExpiryTime uint32 `protobuf:"varint,4,opt,name=expiry_time,json=expiryTime" json:"expiry_time,omitempty"`
	// Date when the timer was last stopped in seconds
	StopTime uint32 `protobuf:"varint,5,opt,name=stop_time,json=stopTime" json:"stop_time,omitempty"`
	// The expiry delay in seconds
	Duration uint32 `protobuf:"varint,6,opt,name=duration" json:"duration,omitempty"`
	// True if the timer is running
	IsRunning            bool     `protobuf:"varint,7,opt,name=is_running,json=isRunning" json:"is_running,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeP2MpTimerB) Reset()         { *m = MplsTeP2MpTimerB{} }
func (m *MplsTeP2MpTimerB) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpTimerB) ProtoMessage()    {}
func (*MplsTeP2MpTimerB) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_p2mp_timers_b_a9943e0c69f44a21, []int{2}
}
func (m *MplsTeP2MpTimerB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpTimerB.Unmarshal(m, b)
}
func (m *MplsTeP2MpTimerB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpTimerB.Marshal(b, m, deterministic)
}
func (dst *MplsTeP2MpTimerB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpTimerB.Merge(dst, src)
}
func (m *MplsTeP2MpTimerB) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpTimerB.Size(m)
}
func (m *MplsTeP2MpTimerB) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpTimerB.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpTimerB proto.InternalMessageInfo

func (m *MplsTeP2MpTimerB) GetTimerType() string {
	if m != nil {
		return m.TimerType
	}
	return ""
}

func (m *MplsTeP2MpTimerB) GetTimerName() string {
	if m != nil {
		return m.TimerName
	}
	return ""
}

func (m *MplsTeP2MpTimerB) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *MplsTeP2MpTimerB) GetExpiryTime() uint32 {
	if m != nil {
		return m.ExpiryTime
	}
	return 0
}

func (m *MplsTeP2MpTimerB) GetStopTime() uint32 {
	if m != nil {
		return m.StopTime
	}
	return 0
}

func (m *MplsTeP2MpTimerB) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MplsTeP2MpTimerB) GetIsRunning() bool {
	if m != nil {
		return m.IsRunning
	}
	return false
}

func init() {
	proto.RegisterType((*MplsTeP2MpTimersB_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.collaborator_timers.mpls_te_p2mp_timers_b_KEYS")
	proto.RegisterType((*MplsTeP2MpTimersB)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.collaborator_timers.mpls_te_p2mp_timers_b")
	proto.RegisterType((*MplsTeP2MpTimerB)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.collaborator_timers.mpls_te_p2mp_timer_b")
}

func init() {
	proto.RegisterFile("mpls_te_p2mp_timers_b.proto", fileDescriptor_mpls_te_p2mp_timers_b_a9943e0c69f44a21)
}

var fileDescriptor_mpls_te_p2mp_timers_b_a9943e0c69f44a21 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x65, 0x0a, 0xa5, 0xb9, 0xc2, 0x12, 0x81, 0x64, 0xb5, 0x20, 0xa2, 0x4e, 0x99, 0x32,
	0x84, 0x99, 0x91, 0x09, 0xc1, 0x90, 0x76, 0x61, 0x3a, 0x39, 0xad, 0x85, 0x2c, 0x25, 0xf6, 0xc9,
	0x76, 0xa4, 0xe6, 0x25, 0x78, 0x52, 0x1e, 0x02, 0xc5, 0x26, 0x80, 0x44, 0x36, 0x36, 0xdf, 0xf7,
	0x9d, 0xee, 0xff, 0x25, 0xc3, 0xba, 0xa5, 0xc6, 0xa1, 0x97, 0x48, 0x65, 0x4b, 0xe8, 0x55, 0x2b,
	0xad, 0xc3, 0xba, 0x20, 0x6b, 0xbc, 0x49, 0x1f, 0xf6, 0xca, 0xed, 0x0d, 0x2a, 0xe3, 0xf0, 0x68,
	0x71, 0xdc, 0x34, 0x24, 0x6d, 0x31, 0x0e, 0xce, 0x0b, 0x7d, 0xa8, 0xfb, 0x62, 0x6f, 0x9a, 0x46,
	0xd4, 0xc6, 0x0a, 0x6f, 0xec, 0xd7, 0x99, 0xcd, 0x0d, 0xac, 0x26, 0xaf, 0xe3, 0xd3, 0xe3, 0xeb,
	0x76, 0xf3, 0xce, 0xe0, 0x7a, 0x52, 0xa7, 0x1d, 0x5c, 0x50, 0x89, 0xdf, 0x84, 0x97, 0xd9, 0x2c,
	0x5f, 0x96, 0xdb, 0xe2, 0x5f, 0x6d, 0x8a, 0xbf, 0x59, 0x58, 0x57, 0x40, 0xe5, 0x33, 0xed, 0x62,
	0xdd, 0x0f, 0x06, 0x57, 0x53, 0x4b, 0xe9, 0x2d, 0x40, 0x7c, 0xfa, 0x9e, 0x24, 0x67, 0x19, 0xcb,
	0x93, 0x2a, 0x09, 0x64, 0xd7, 0x93, 0xfc, 0xd1, 0x5a, 0xb4, 0x92, 0x9f, 0xfc, 0xd2, 0x2f, 0xa2,
	0x0d, 0xda, 0x79, 0x61, 0x7d, 0x38, 0xc7, 0x67, 0x19, 0xcb, 0x2f, 0xab, 0x24, 0x90, 0x21, 0x37,
	0xbd, 0x83, 0xa5, 0x3c, 0x92, 0xb2, 0x7d, 0xf4, 0xa7, 0xc1, 0x43, 0x44, 0x61, 0x61, 0x0d, 0x89,
	0xf3, 0x26, 0xb6, 0xe1, 0x67, 0x41, 0x2f, 0x06, 0x10, 0xe4, 0x0a, 0x16, 0x87, 0xce, 0x0a, 0xaf,
	0x8c, 0xe6, 0xf3, 0xe8, 0xc6, 0x79, 0x08, 0x56, 0x0e, 0x6d, 0xa7, 0xb5, 0xd2, 0x6f, 0xfc, 0x3c,
	0x63, 0xf9, 0xa2, 0x4a, 0x94, 0xab, 0x22, 0xa8, 0xe7, 0xe1, 0x8f, 0xef, 0x3f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xfd, 0x66, 0xcb, 0x5b, 0x02, 0x02, 0x00, 0x00,
}
