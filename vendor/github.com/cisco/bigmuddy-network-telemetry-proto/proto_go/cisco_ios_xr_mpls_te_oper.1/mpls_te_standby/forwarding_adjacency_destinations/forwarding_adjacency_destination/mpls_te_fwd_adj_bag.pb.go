// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_fwd_adj_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_forwarding_adjacency_destinations_forwarding_adjacency_destination

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//  A list of forwarding-adjacencies
type MplsTeFwdAdjBag_KEYS struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeFwdAdjBag_KEYS) Reset()         { *m = MplsTeFwdAdjBag_KEYS{} }
func (m *MplsTeFwdAdjBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeFwdAdjBag_KEYS) ProtoMessage()    {}
func (*MplsTeFwdAdjBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_fwd_adj_bag_3c84f9a5a750348a, []int{0}
}
func (m *MplsTeFwdAdjBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFwdAdjBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeFwdAdjBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFwdAdjBag_KEYS.Marshal(b, m, deterministic)
}
func (dst *MplsTeFwdAdjBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFwdAdjBag_KEYS.Merge(dst, src)
}
func (m *MplsTeFwdAdjBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeFwdAdjBag_KEYS.Size(m)
}
func (m *MplsTeFwdAdjBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFwdAdjBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFwdAdjBag_KEYS proto.InternalMessageInfo

func (m *MplsTeFwdAdjBag_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

type MplsTeFwdAdjBag struct {
	// Number of Forwarding Adjacencies
	Adjacencies uint32 `protobuf:"varint,50,opt,name=adjacencies" json:"adjacencies,omitempty"`
	// Number of IPv6 Forwarding Adjacencies
	Ipv6Adjacencies uint32 `protobuf:"varint,51,opt,name=ipv6_adjacencies,json=ipv6Adjacencies" json:"ipv6_adjacencies,omitempty"`
	// The tunnel destination
	DestinationAddress string `protobuf:"bytes,52,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// Forwarding-adjacency list
	ForwardAdjacencyList []*MplsTeFwdAdjInfo `protobuf:"bytes,53,rep,name=forward_adjacency_list,json=forwardAdjacencyList" json:"forward_adjacency_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MplsTeFwdAdjBag) Reset()         { *m = MplsTeFwdAdjBag{} }
func (m *MplsTeFwdAdjBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeFwdAdjBag) ProtoMessage()    {}
func (*MplsTeFwdAdjBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_fwd_adj_bag_3c84f9a5a750348a, []int{1}
}
func (m *MplsTeFwdAdjBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFwdAdjBag.Unmarshal(m, b)
}
func (m *MplsTeFwdAdjBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFwdAdjBag.Marshal(b, m, deterministic)
}
func (dst *MplsTeFwdAdjBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFwdAdjBag.Merge(dst, src)
}
func (m *MplsTeFwdAdjBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeFwdAdjBag.Size(m)
}
func (m *MplsTeFwdAdjBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFwdAdjBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFwdAdjBag proto.InternalMessageInfo

func (m *MplsTeFwdAdjBag) GetAdjacencies() uint32 {
	if m != nil {
		return m.Adjacencies
	}
	return 0
}

func (m *MplsTeFwdAdjBag) GetIpv6Adjacencies() uint32 {
	if m != nil {
		return m.Ipv6Adjacencies
	}
	return 0
}

func (m *MplsTeFwdAdjBag) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeFwdAdjBag) GetForwardAdjacencyList() []*MplsTeFwdAdjInfo {
	if m != nil {
		return m.ForwardAdjacencyList
	}
	return nil
}

// IGP area information including AFI
type MplsTeAreaAfiInfo struct {
	// The IGP Instance and Area ID
	IgpAreaId string `protobuf:"bytes,1,opt,name=igp_area_id,json=igpAreaId" json:"igp_area_id,omitempty"`
	// AFI
	Afi                  string   `protobuf:"bytes,2,opt,name=afi" json:"afi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAreaAfiInfo) Reset()         { *m = MplsTeAreaAfiInfo{} }
func (m *MplsTeAreaAfiInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAreaAfiInfo) ProtoMessage()    {}
func (*MplsTeAreaAfiInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_fwd_adj_bag_3c84f9a5a750348a, []int{2}
}
func (m *MplsTeAreaAfiInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Unmarshal(m, b)
}
func (m *MplsTeAreaAfiInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeAreaAfiInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAreaAfiInfo.Merge(dst, src)
}
func (m *MplsTeAreaAfiInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Size(m)
}
func (m *MplsTeAreaAfiInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAreaAfiInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAreaAfiInfo proto.InternalMessageInfo

func (m *MplsTeAreaAfiInfo) GetIgpAreaId() string {
	if m != nil {
		return m.IgpAreaId
	}
	return ""
}

func (m *MplsTeAreaAfiInfo) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

// A forwarding-adjacency
type MplsTeFwdAdjInfo struct {
	// The tunnel name
	TunnelName string `protobuf:"bytes,1,opt,name=tunnel_name,json=tunnelName" json:"tunnel_name,omitempty"`
	// Traffic Share
	TrafficShare uint32 `protobuf:"varint,2,opt,name=traffic_share,json=trafficShare" json:"traffic_share,omitempty"`
	// Hold time in seconds
	HoldTime uint32 `protobuf:"varint,3,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	// True if adj is up
	IsAdjacencyUp bool `protobuf:"varint,4,opt,name=is_adjacency_up,json=isAdjacencyUp" json:"is_adjacency_up,omitempty"`
	// List of IGPs to which it is announced
	IgPs                 []*MplsTeAreaAfiInfo `protobuf:"bytes,5,rep,name=ig_ps,json=igPs" json:"ig_ps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MplsTeFwdAdjInfo) Reset()         { *m = MplsTeFwdAdjInfo{} }
func (m *MplsTeFwdAdjInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeFwdAdjInfo) ProtoMessage()    {}
func (*MplsTeFwdAdjInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_mpls_te_fwd_adj_bag_3c84f9a5a750348a, []int{3}
}
func (m *MplsTeFwdAdjInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFwdAdjInfo.Unmarshal(m, b)
}
func (m *MplsTeFwdAdjInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFwdAdjInfo.Marshal(b, m, deterministic)
}
func (dst *MplsTeFwdAdjInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFwdAdjInfo.Merge(dst, src)
}
func (m *MplsTeFwdAdjInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeFwdAdjInfo.Size(m)
}
func (m *MplsTeFwdAdjInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFwdAdjInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFwdAdjInfo proto.InternalMessageInfo

func (m *MplsTeFwdAdjInfo) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

func (m *MplsTeFwdAdjInfo) GetTrafficShare() uint32 {
	if m != nil {
		return m.TrafficShare
	}
	return 0
}

func (m *MplsTeFwdAdjInfo) GetHoldTime() uint32 {
	if m != nil {
		return m.HoldTime
	}
	return 0
}

func (m *MplsTeFwdAdjInfo) GetIsAdjacencyUp() bool {
	if m != nil {
		return m.IsAdjacencyUp
	}
	return false
}

func (m *MplsTeFwdAdjInfo) GetIgPs() []*MplsTeAreaAfiInfo {
	if m != nil {
		return m.IgPs
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeFwdAdjBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.forwarding_adjacency_destinations.forwarding_adjacency_destination.mpls_te_fwd_adj_bag_KEYS")
	proto.RegisterType((*MplsTeFwdAdjBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.forwarding_adjacency_destinations.forwarding_adjacency_destination.mpls_te_fwd_adj_bag")
	proto.RegisterType((*MplsTeAreaAfiInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.forwarding_adjacency_destinations.forwarding_adjacency_destination.mpls_te_area_afi_info")
	proto.RegisterType((*MplsTeFwdAdjInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.forwarding_adjacency_destinations.forwarding_adjacency_destination.mpls_te_fwd_adj_info")
}

func init() {
	proto.RegisterFile("mpls_te_fwd_adj_bag.proto", fileDescriptor_mpls_te_fwd_adj_bag_3c84f9a5a750348a)
}

var fileDescriptor_mpls_te_fwd_adj_bag_3c84f9a5a750348a = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xe5, 0xa4, 0x45, 0xcd, 0x84, 0xa8, 0xd5, 0xb6, 0x20, 0x23, 0x24, 0xb0, 0x82, 0x84,
	0xc2, 0xc5, 0x48, 0x2d, 0x70, 0xcf, 0x81, 0x43, 0x55, 0x84, 0x90, 0x0b, 0x07, 0x4e, 0xab, 0x89,
	0x77, 0xed, 0x0e, 0xb2, 0x77, 0x57, 0x3b, 0x5b, 0x4a, 0xae, 0xf0, 0x14, 0x3c, 0x0a, 0x07, 0x9e,
	0x81, 0x57, 0x42, 0x76, 0x6c, 0x64, 0x50, 0x22, 0x6e, 0x70, 0xb3, 0xbf, 0xfd, 0x3c, 0x3b, 0xf3,
	0x8f, 0x0c, 0xf7, 0x6a, 0x57, 0xb1, 0x0c, 0x5a, 0x16, 0x37, 0x4a, 0xa2, 0xfa, 0x20, 0x57, 0x58,
	0xa6, 0xce, 0xdb, 0x60, 0x45, 0x95, 0x13, 0xe7, 0x56, 0x92, 0x65, 0xf9, 0xc9, 0xcb, 0xde, 0xb3,
	0x4e, 0xfb, 0xb4, 0x7f, 0xe1, 0x80, 0x46, 0xad, 0xd6, 0x69, 0x61, 0xfd, 0x0d, 0x7a, 0x45, 0xa6,
	0x6c, 0x6a, 0x60, 0xae, 0x4d, 0xbe, 0x96, 0x4a, 0x73, 0x20, 0x83, 0x81, 0xac, 0xe1, 0xbf, 0x1a,
	0xf3, 0x0b, 0x88, 0xb7, 0xb4, 0x22, 0x2f, 0x5e, 0xbe, 0xbf, 0x14, 0x4f, 0xe1, 0x78, 0xa0, 0x4a,
	0x54, 0xca, 0x6b, 0xe6, 0x38, 0x4a, 0xa2, 0xc5, 0x24, 0x13, 0x83, 0xa3, 0xe5, 0xe6, 0x64, 0xfe,
	0x63, 0x04, 0xc7, 0x5b, 0xaa, 0x89, 0x04, 0xa6, 0xfd, 0xed, 0xa4, 0x39, 0x3e, 0x4d, 0xa2, 0xc5,
	0x2c, 0x1b, 0x22, 0xf1, 0x04, 0x8e, 0xc8, 0x7d, 0x7c, 0x21, 0x87, 0xda, 0x59, 0xab, 0x1d, 0x36,
	0x7c, 0x39, 0x50, 0x77, 0x74, 0xf5, 0x6c, 0x57, 0x57, 0xe2, 0x5b, 0x04, 0x77, 0xbb, 0x1c, 0x06,
	0x21, 0x54, 0xc4, 0x21, 0x7e, 0x9e, 0x8c, 0x17, 0xd3, 0xd3, 0xcf, 0x51, 0xfa, 0x2f, 0x33, 0x4f,
	0xff, 0x8c, 0x88, 0x4c, 0x61, 0xb3, 0x93, 0xee, 0xb3, 0x7e, 0xd4, 0xf5, 0x2b, 0xe2, 0x30, 0x3f,
	0x87, 0x3b, 0xbd, 0x8d, 0x5e, 0xa3, 0xc4, 0x82, 0x5a, 0x5d, 0x3c, 0x80, 0x29, 0x95, 0x6e, 0x03,
	0x49, 0x75, 0x3b, 0x99, 0x50, 0xe9, 0x96, 0x5e, 0xe3, 0xb9, 0x12, 0x47, 0x30, 0xc6, 0x82, 0xe2,
	0x51, 0xcb, 0x9b, 0xc7, 0xf9, 0xf7, 0x11, 0x9c, 0x6c, 0xbb, 0x59, 0x3c, 0x84, 0x69, 0xb8, 0x36,
	0x46, 0x57, 0xd2, 0x60, 0xad, 0xbb, 0x52, 0xb0, 0x41, 0xaf, 0xb1, 0xd6, 0xe2, 0x11, 0xcc, 0x82,
	0xc7, 0xa2, 0xa0, 0x5c, 0xf2, 0x15, 0x7a, 0xdd, 0x56, 0x9d, 0x65, 0xb7, 0x3b, 0x78, 0xd9, 0x30,
	0x71, 0x1f, 0x26, 0x57, 0xb6, 0x52, 0x32, 0x50, 0xad, 0xe3, 0x71, 0x2b, 0x1c, 0x34, 0xe0, 0x2d,
	0xd5, 0x5a, 0x3c, 0x86, 0x43, 0xe2, 0x41, 0x1a, 0xd7, 0x2e, 0xde, 0x4b, 0xa2, 0xc5, 0x41, 0x36,
	0x23, 0xfe, 0x35, 0xf0, 0x3b, 0x27, 0xbe, 0x46, 0xb0, 0x4f, 0xa5, 0x74, 0x1c, 0xef, 0xb7, 0x9b,
	0xf9, 0xf2, 0x9f, 0x36, 0xf3, 0x5b, 0xd6, 0xd9, 0x1e, 0x95, 0x6f, 0x78, 0x75, 0xab, 0xfd, 0x3d,
	0xcf, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x24, 0xa8, 0x42, 0x80, 0xbb, 0x03, 0x00, 0x00,
}
